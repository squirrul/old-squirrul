{"version":3,"sources":["webpack:///route-chat.chunk.86663.js","webpack:///../node_modules/gun/gun.js","webpack:///./routes/chat/index.js","webpack:///./routes/chat/style.css","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/webpack/buildin/module.js"],"names":["webpackJsonp","R2pP","module","exports","__webpack_require__","global","require","arg","resolve","path","split","slice","toString","replace","mod","root","window","console","log","common","Type","fns","fn","is","bi","b","Boolean","num","n","list_is","parseFloat","Infinity","text","t","ify","JSON","stringify","random","l","c","s","charAt","Math","floor","length","match","o","r","=","obj","has","toLowerCase","list","map","m","indexOf","f","i","Array","slit","prototype","sort","k","A","B","_","obj_map","index","Object","constructor","call","put","v","hasOwnProperty","del","as","u","obj_is","parse","e","obj_has","this","to","from","copy","empty","arguments","push","keys","x","ll","lle","fn_is","ii","time","Date","getTime","onto","tag","next","Function","be","off","the","last","back","on","HAM","machineState","incomingState","currentState","incomingValue","currentValue","defer","historical","converge","incoming","Lexical","state","current","err","Error","Val","text_is","bi_is","num_is","rel","id","rel_","obj_put","Node","soul","soul_","text_random","cb","tmp","node","obj_del","State","perf","start","now","N","drift","D","performance","timing","navigationStart","N_","lex","obj_as","val","obj_copy","opt","Graph","nf","g","obj_empty","env","at","seen","graph","valid","concat","prev","invalid","join","arr","clearTimeout","setTimeout","lack","Dup","dup","max","age","check","track","time_is","Gun","gun","create","version","chain","toJSON","ask","field","value","msg","ev","text_rand","obj_to","get","once","verify","key","ctx","vertex","was","known","machine","diff","merge","cat","ack","each","@","_soul","_field","peers","url","uuid","state_lex","debug","apply","w","yes","output",".","input","coat","change","echo","not","relate","node_","event","reverb","data","via","proxy","#","cache","use","out","$","stun","batch","noop","res","no","ref","iife","solve","any","ok","wait","eas","act","subs","bind","async","n_","fields","MAPOF","set","item","store","localStorage","setItem","removeItem","getItem","file","prefix","acks","count","disk","flush","how","websocket","WebSocket","webkitWebSocket","mozWebSocket","send","peer","wire","open","readyState","OPEN","queue","receive","ws","who","onclose","reconnect","onerror","onopen","onmessage","drain","WScg","__webpack_exports__","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","d","Chat","__WEBPACK_IMPORTED_MODULE_0_preact__","__WEBPACK_IMPORTED_MODULE_1_gun_gun__","__WEBPACK_IMPORTED_MODULE_1_gun_gun___default","__WEBPACK_IMPORTED_MODULE_2__style__","__WEBPACK_IMPORTED_MODULE_2__style___default","_extends","assign","target","source","GUN_URL","formatNotes","notes","filter","when","a","whenFmt","toLocaleString","_Component","props","_this","newNote","name","document","cookie","handleChange","_this$setState","setState","db","componentWillMount","_this2","tmpState","note","preventDefault","what","render","_ref","class","home","className","onSubmit","placeholder","onChange","onClick","dKk8","h6ac","eval","l262","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"route-chat.chunk.86663.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"R2pP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {;(function () {\n\n\t/* UNBUILD */\n\tvar root;\n\tif (typeof window !== \"undefined\") {\n\t\troot = window;\n\t}\n\tif (typeof global !== \"undefined\") {\n\t\troot = global;\n\t}\n\troot = root || {};\n\tvar console = root.console || { log: function log() {} };\n\tfunction require(arg) {\n\t\treturn arg.slice ? require[resolve(arg)] : function (mod, path) {\n\t\t\targ(mod = { exports: {} });\n\t\t\trequire[resolve(path)] = mod.exports;\n\t\t};\n\t\tfunction resolve(path) {\n\t\t\treturn path.split('/').slice(-1).toString().replace('.js', '');\n\t\t}\n\t}\n\tif (true) {\n\t\tvar common = module;\n\t}\n\t/* UNBUILD */\n\n\t;require(function (module) {\n\t\t// Generic javascript utilities.\n\t\tvar Type = {};\n\t\t//Type.fns = Type.fn = {is: function(fn){ return (!!fn && fn instanceof Function) }}\n\t\tType.fns = Type.fn = { is: function is(fn) {\n\t\t\t\treturn !!fn && 'function' == typeof fn;\n\t\t\t} };\n\t\tType.bi = { is: function is(b) {\n\t\t\t\treturn b instanceof Boolean || typeof b == 'boolean';\n\t\t\t} };\n\t\tType.num = { is: function is(n) {\n\t\t\t\treturn !list_is(n) && (n - parseFloat(n) + 1 >= 0 || Infinity === n || -Infinity === n);\n\t\t\t} };\n\t\tType.text = { is: function is(t) {\n\t\t\t\treturn typeof t == 'string';\n\t\t\t} };\n\t\tType.text.ify = function (t) {\n\t\t\tif (Type.text.is(t)) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t\tif (typeof JSON !== \"undefined\") {\n\t\t\t\treturn JSON.stringify(t);\n\t\t\t}\n\t\t\treturn t && t.toString ? t.toString() : t;\n\t\t};\n\t\tType.text.random = function (l, c) {\n\t\t\tvar s = '';\n\t\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\n\t\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\n\t\t\twhile (l > 0) {\n\t\t\t\ts += c.charAt(Math.floor(Math.random() * c.length));l--;\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t\tType.text.match = function (t, o) {\n\t\t\tvar r = false;\n\t\t\tt = t || '';\n\t\t\to = Type.text.is(o) ? { '=': o } : o || {}; // {'~', '=', '*', '<', '>', '+', '-', '?', '!'} // ignore case, exactly equal, anything after, lexically larger, lexically lesser, added in, subtacted from, questionable fuzzy match, and ends with.\n\t\t\tif (Type.obj.has(o, '~')) {\n\t\t\t\tt = t.toLowerCase();o['='] = (o['='] || o['~']).toLowerCase();\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '=')) {\n\t\t\t\treturn t === o['='];\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '*')) {\n\t\t\t\tif (t.slice(0, o['*'].length) === o['*']) {\n\t\t\t\t\tr = true;t = t.slice(o['*'].length);\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '!')) {\n\t\t\t\tif (t.slice(-o['!'].length) === o['!']) {\n\t\t\t\t\tr = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '+')) {\n\t\t\t\tif (Type.list.map(Type.list.is(o['+']) ? o['+'] : [o['+']], function (m) {\n\t\t\t\t\tif (t.indexOf(m) >= 0) {\n\t\t\t\t\t\tr = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t})) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '-')) {\n\t\t\t\tif (Type.list.map(Type.list.is(o['-']) ? o['-'] : [o['-']], function (m) {\n\t\t\t\t\tif (t.indexOf(m) < 0) {\n\t\t\t\t\t\tr = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t})) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '>')) {\n\t\t\t\tif (t > o['>']) {\n\t\t\t\t\tr = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Type.obj.has(o, '<')) {\n\t\t\t\tif (t < o['<']) {\n\t\t\t\t\tr = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction fuzzy(t, f) {\n\t\t\t\tvar n = -1,\n\t\t\t\t    i = 0,\n\t\t\t\t    c;for (; c = f[i++];) {\n\t\t\t\t\tif (!~(n = t.indexOf(c, n + 1))) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}return true;\n\t\t\t} // via http://stackoverflow.com/questions/9206013/javascript-fuzzy-search\n\t\t\tif (Type.obj.has(o, '?')) {\n\t\t\t\tif (fuzzy(t, o['?'])) {\n\t\t\t\t\tr = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} // change name!\n\t\t\treturn r;\n\t\t};\n\t\tType.list = { is: function is(l) {\n\t\t\t\treturn l instanceof Array;\n\t\t\t} };\n\t\tType.list.slit = Array.prototype.slice;\n\t\tType.list.sort = function (k) {\n\t\t\t// creates a new sort function based off some field\n\t\t\treturn function (A, B) {\n\t\t\t\tif (!A || !B) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}A = A[k];B = B[k];\n\t\t\t\tif (A < B) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (A > B) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tType.list.map = function (l, c, _) {\n\t\t\treturn obj_map(l, c, _);\n\t\t};\n\t\tType.list.index = 1; // change this to 0 if you want non-logical, non-mathematical, non-matrix, non-convenient array notation\n\t\tType.obj = { is: function is(o) {\n\t\t\t\treturn o ? o instanceof Object && o.constructor === Object || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false;\n\t\t\t} };\n\t\tType.obj.put = function (o, f, v) {\n\t\t\treturn (o || {})[f] = v, o;\n\t\t};\n\t\tType.obj.has = function (o, f) {\n\t\t\treturn o && Object.prototype.hasOwnProperty.call(o, f);\n\t\t};\n\t\tType.obj.del = function (o, k) {\n\t\t\tif (!o) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\to[k] = null;\n\t\t\tdelete o[k];\n\t\t\treturn o;\n\t\t};\n\t\tType.obj.as = function (o, f, v, u) {\n\t\t\treturn o[f] = o[f] || (u === v ? {} : v);\n\t\t};\n\t\tType.obj.ify = function (o) {\n\t\t\tif (obj_is(o)) {\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\to = JSON.parse(o);\n\t\t\t} catch (e) {\n\t\t\t\to = {};\n\t\t\t};\n\t\t\treturn o;\n\t\t};(function () {\n\t\t\tvar u;\n\t\t\tfunction map(v, f) {\n\t\t\t\tif (obj_has(this, f) && u !== this[f]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis[f] = v;\n\t\t\t}\n\t\t\tType.obj.to = function (from, to) {\n\t\t\t\tto = to || {};\n\t\t\t\tobj_map(from, map, to);\n\t\t\t\treturn to;\n\t\t\t};\n\t\t})();\n\t\tType.obj.copy = function (o) {\n\t\t\t// because http://web.archive.org/web/20140328224025/http://jsperf.com/cloning-an-object/2\n\t\t\treturn !o ? o : JSON.parse(JSON.stringify(o)); // is shockingly faster than anything else, and our data has to be a subset of JSON anyways!\n\t\t};(function () {\n\t\t\tfunction empty(v, i) {\n\t\t\t\tvar n = this.n;\n\t\t\t\tif (n && (i === n || obj_is(n) && obj_has(n, i))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (i) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tType.obj.empty = function (o, n) {\n\t\t\t\tif (!o) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn obj_map(o, empty, { n: n }) ? false : true;\n\t\t\t};\n\t\t})();\n\t\t;(function () {\n\t\t\tfunction t(k, v) {\n\t\t\t\tif (2 === arguments.length) {\n\t\t\t\t\tt.r = t.r || {};\n\t\t\t\t\tt.r[k] = v;\n\t\t\t\t\treturn;\n\t\t\t\t}t.r = t.r || [];\n\t\t\t\tt.r.push(k);\n\t\t\t};\n\t\t\tvar keys = Object.keys;\n\t\t\tType.obj.map = function (l, c, _) {\n\t\t\t\tvar u,\n\t\t\t\t    i = 0,\n\t\t\t\t    x,\n\t\t\t\t    r,\n\t\t\t\t    ll,\n\t\t\t\t    lle,\n\t\t\t\t    f = fn_is(c);\n\t\t\t\tt.r = null;\n\t\t\t\tif (keys && obj_is(l)) {\n\t\t\t\t\tll = keys(l);lle = true;\n\t\t\t\t}\n\t\t\t\tif (list_is(l) || ll) {\n\t\t\t\t\tx = (ll || l).length;\n\t\t\t\t\tfor (; i < x; i++) {\n\t\t\t\t\t\tvar ii = i + Type.list.index;\n\t\t\t\t\t\tif (f) {\n\t\t\t\t\t\t\tr = lle ? c.call(_ || this, l[ll[i]], ll[i], t) : c.call(_ || this, l[i], ii, t);\n\t\t\t\t\t\t\tif (r !== u) {\n\t\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//if(Type.test.is(c,l[i])){ return ii } // should implement deep equality testing!\n\t\t\t\t\t\t\tif (c === l[lle ? ll[i] : i]) {\n\t\t\t\t\t\t\t\treturn ll ? ll[i] : ii;\n\t\t\t\t\t\t\t} // use this for now\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (i in l) {\n\t\t\t\t\t\tif (f) {\n\t\t\t\t\t\t\tif (obj_has(l, i)) {\n\t\t\t\t\t\t\t\tr = _ ? c.call(_, l[i], i, t) : c(l[i], i, t);\n\t\t\t\t\t\t\t\tif (r !== u) {\n\t\t\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//if(a.test.is(c,l[i])){ return i } // should implement deep equality testing!\n\t\t\t\t\t\t\tif (c === l[i]) {\n\t\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t\t} // use this for now\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn f ? t.r : Type.list.index ? 0 : -1;\n\t\t\t};\n\t\t})();\n\t\tType.time = {};\n\t\tType.time.is = function (t) {\n\t\t\treturn t ? t instanceof Date : +new Date().getTime();\n\t\t};\n\n\t\tvar fn_is = Type.fn.is;\n\t\tvar list_is = Type.list.is;\n\t\tvar obj = Type.obj,\n\t\t    obj_is = obj.is,\n\t\t    obj_has = obj.has,\n\t\t    obj_map = obj.map;\n\t\tmodule.exports = Type;\n\t})(require, './type');\n\n\t;require(function (module) {\n\t\t// On event emitter generic javascript utility.\n\t\tmodule.exports = function onto(tag, arg, as) {\n\t\t\tif (!tag) {\n\t\t\t\treturn { to: onto };\n\t\t\t}\n\t\t\tvar tag = (this.tag || (this.tag = {}))[tag] || (this.tag[tag] = { tag: tag, to: onto._ = {\n\t\t\t\t\tnext: function next() {}\n\t\t\t\t} });\n\t\t\tif (arg instanceof Function) {\n\t\t\t\tvar be = {\n\t\t\t\t\toff: onto.off || (onto.off = function () {\n\t\t\t\t\t\tif (this.next === onto._.next) {\n\t\t\t\t\t\t\treturn !0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this === this.the.last) {\n\t\t\t\t\t\t\tthis.the.last = this.back;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.to.back = this.back;\n\t\t\t\t\t\tthis.next = onto._.next;\n\t\t\t\t\t\tthis.back.to = this.to;\n\t\t\t\t\t\tif (this.the.last === this.the) {\n\t\t\t\t\t\t\tdelete this.on.tag[this.the.tag];\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tto: onto._,\n\t\t\t\t\tnext: arg,\n\t\t\t\t\tthe: tag,\n\t\t\t\t\ton: this,\n\t\t\t\t\tas: as\n\t\t\t\t};\n\t\t\t\t(be.back = tag.last || tag).to = be;\n\t\t\t\treturn tag.last = be;\n\t\t\t}\n\t\t\t(tag = tag.to).next(arg);\n\t\t\treturn tag;\n\t\t};\n\t})(require, './onto');\n\n\t;require(function (module) {\n\t\t/* Based on the Hypothetical Amnesia Machine thought experiment */\n\t\tfunction HAM(machineState, incomingState, currentState, incomingValue, currentValue) {\n\t\t\tif (machineState < incomingState) {\n\t\t\t\treturn { defer: true }; // the incoming value is outside the boundary of the machine's state, it must be reprocessed in another state.\n\t\t\t}\n\t\t\tif (incomingState < currentState) {\n\t\t\t\treturn { historical: true }; // the incoming value is within the boundary of the machine's state, but not within the range.\n\t\t\t}\n\t\t\tif (currentState < incomingState) {\n\t\t\t\treturn { converge: true, incoming: true }; // the incoming value is within both the boundary and the range of the machine's state.\n\t\t\t}\n\t\t\tif (incomingState === currentState) {\n\t\t\t\tincomingValue = Lexical(incomingValue) || \"\";\n\t\t\t\tcurrentValue = Lexical(currentValue) || \"\";\n\t\t\t\tif (incomingValue === currentValue) {\n\t\t\t\t\t// Note: while these are practically the same, the deltas could be technically different\n\t\t\t\t\treturn { state: true };\n\t\t\t\t}\n\t\t\t\t/*\r\n    \tThe following is a naive implementation, but will always work.\r\n    \tNever change it unless you have specific needs that absolutely require it.\r\n    \tIf changed, your data will diverge unless you guarantee every peer's algorithm has also been changed to be the same.\r\n    \tAs a result, it is highly discouraged to modify despite the fact that it is naive,\r\n    \tbecause convergence (data integrity) is generally more important.\r\n    \tAny difference in this algorithm must be given a new and different name.\r\n    */\n\t\t\t\tif (incomingValue < currentValue) {\n\t\t\t\t\t// Lexical only works on simple value types!\n\t\t\t\t\treturn { converge: true, current: true };\n\t\t\t\t}\n\t\t\t\tif (currentValue < incomingValue) {\n\t\t\t\t\t// Lexical only works on simple value types!\n\t\t\t\t\treturn { converge: true, incoming: true };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { err: \"Invalid CRDT Data: \" + incomingValue + \" to \" + currentValue + \" at \" + incomingState + \" to \" + currentState + \"!\" };\n\t\t}\n\t\tif (typeof JSON === 'undefined') {\n\t\t\tthrow new Error('JSON is not included in this browser. Please load it first: ' + 'ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js');\n\t\t}\n\t\tvar Lexical = JSON.stringify,\n\t\t    undefined;\n\t\tmodule.exports = HAM;\n\t})(require, './HAM');\n\n\t;require(function (module) {\n\t\tvar Type = require('./type');\n\t\tvar Val = {};\n\t\tVal.is = function (v) {\n\t\t\t// Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\n\t\t\tif (v === u) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (v === null) {\n\t\t\t\treturn true;\n\t\t\t} // \"deletes\", nulling out fields.\n\t\t\tif (v === Infinity) {\n\t\t\t\treturn false;\n\t\t\t} // we want this to be, but JSON does not support it, sad face.\n\t\t\tif (text_is(v) // by \"text\" we mean strings.\n\t\t\t|| bi_is(v) // by \"binary\" we mean boolean.\n\t\t\t|| num_is(v)) {\n\t\t\t\t// by \"number\" we mean integers or decimals. \n\t\t\t\treturn true; // simple values are valid.\n\t\t\t}\n\t\t\treturn Val.rel.is(v) || false; // is the value a soul relation? Then it is valid and return it. If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\n\t\t};\n\t\tVal.rel = { _: '#' };\n\t\t;(function () {\n\t\t\tVal.rel.is = function (v) {\n\t\t\t\t// this defines whether an object is a soul relation or not, they look like this: {'#': 'UUID'}\n\t\t\t\tif (v && v[rel_] && !v._ && obj_is(v)) {\n\t\t\t\t\t// must be an object.\n\t\t\t\t\tvar o = {};\n\t\t\t\t\tobj_map(v, map, o);\n\t\t\t\t\tif (o.id) {\n\t\t\t\t\t\t// a valid id was found.\n\t\t\t\t\t\treturn o.id; // yay! Return it.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false; // the value was not a valid soul relation.\n\t\t\t};\n\t\t\tfunction map(s, f) {\n\t\t\t\tvar o = this; // map over the object...\n\t\t\t\tif (o.id) {\n\t\t\t\t\treturn o.id = false;\n\t\t\t\t} // if ID is already defined AND we're still looping through the object, it is considered invalid.\n\t\t\t\tif (f == rel_ && text_is(s)) {\n\t\t\t\t\t// the field should be '#' and have a text value.\n\t\t\t\t\to.id = s; // we found the soul!\n\t\t\t\t} else {\n\t\t\t\t\treturn o.id = false; // if there exists anything else on the object that isn't the soul, then it is considered invalid.\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tVal.rel.ify = function (t) {\n\t\t\treturn obj_put({}, rel_, t);\n\t\t}; // convert a soul into a relation and return it.\n\t\tvar rel_ = Val.rel._,\n\t\t    u;\n\t\tvar bi_is = Type.bi.is;\n\t\tvar num_is = Type.num.is;\n\t\tvar text_is = Type.text.is;\n\t\tvar obj = Type.obj,\n\t\t    obj_is = obj.is,\n\t\t    obj_put = obj.put,\n\t\t    obj_map = obj.map;\n\t\tmodule.exports = Val;\n\t})(require, './val');\n\n\t;require(function (module) {\n\t\tvar Type = require('./type');\n\t\tvar Val = require('./val');\n\t\tvar Node = { _: '_' };\n\t\tNode.soul = function (n, o) {\n\t\t\treturn n && n._ && n._[o || soul_];\n\t\t}; // convenience function to check to see if there is a soul on a node and return it.\n\t\tNode.soul.ify = function (n, o) {\n\t\t\t// put a soul on an object.\n\t\t\to = typeof o === 'string' ? { soul: o } : o || {};\n\t\t\tn = n || {}; // make sure it exists.\n\t\t\tn._ = n._ || {}; // make sure meta exists.\n\t\t\tn._[soul_] = o.soul || n._[soul_] || text_random(); // put the soul on it.\n\t\t\treturn n;\n\t\t};\n\t\tNode.soul._ = Val.rel._;\n\t\t;(function () {\n\t\t\tNode.is = function (n, cb, as) {\n\t\t\t\tvar s; // checks to see if an object is a valid node.\n\t\t\t\tif (!obj_is(n)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} // must be an object.\n\t\t\t\tif (s = Node.soul(n)) {\n\t\t\t\t\t// must have a soul on it.\n\t\t\t\t\treturn !obj_map(n, map, { as: as, cb: cb, s: s, n: n });\n\t\t\t\t}\n\t\t\t\treturn false; // nope! This was not a valid node.\n\t\t\t};\n\t\t\tfunction map(v, f) {\n\t\t\t\t// we invert this because the way we check for this is via a negation.\n\t\t\t\tif (f === Node._) {\n\t\t\t\t\treturn;\n\t\t\t\t} // skip over the metadata.\n\t\t\t\tif (!Val.is(v)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} // it is true that this is an invalid node.\n\t\t\t\tif (this.cb) {\n\t\t\t\t\tthis.cb.call(this.as, v, f, this.n, this.s);\n\t\t\t\t} // optionally callback each field/value.\n\t\t\t}\n\t\t})();\n\t\t;(function () {\n\t\t\tNode.ify = function (obj, o, as) {\n\t\t\t\t// returns a node from a shallow object.\n\t\t\t\tif (!o) {\n\t\t\t\t\to = {};\n\t\t\t\t} else if (typeof o === 'string') {\n\t\t\t\t\to = { soul: o };\n\t\t\t\t} else if (o instanceof Function) {\n\t\t\t\t\to = { map: o };\n\t\t\t\t}\n\t\t\t\tif (o.map) {\n\t\t\t\t\to.node = o.map.call(as, obj, u, o.node || {});\n\t\t\t\t}\n\t\t\t\tif (o.node = Node.soul.ify(o.node || {}, o)) {\n\t\t\t\t\tobj_map(obj, map, { o: o, as: as });\n\t\t\t\t}\n\t\t\t\treturn o.node; // This will only be a valid node if the object wasn't already deep!\n\t\t\t};\n\t\t\tfunction map(v, f) {\n\t\t\t\tvar o = this.o,\n\t\t\t\t    tmp,\n\t\t\t\t    u; // iterate over each field/value.\n\t\t\t\tif (o.map) {\n\t\t\t\t\ttmp = o.map.call(this.as, v, '' + f, o.node);\n\t\t\t\t\tif (u === tmp) {\n\t\t\t\t\t\tobj_del(o.node, f);\n\t\t\t\t\t} else if (o.node) {\n\t\t\t\t\t\to.node[f] = tmp;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (Val.is(v)) {\n\t\t\t\t\to.node[f] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tvar obj = Type.obj,\n\t\t    obj_is = obj.is,\n\t\t    obj_del = obj.del,\n\t\t    obj_map = obj.map;\n\t\tvar text = Type.text,\n\t\t    text_random = text.random;\n\t\tvar soul_ = Node.soul._;\n\t\tvar u;\n\t\tmodule.exports = Node;\n\t})(require, './node');\n\n\t;require(function (module) {\n\t\tvar Type = require('./type');\n\t\tvar Node = require('./node');\n\t\tfunction State() {\n\t\t\tvar t;\n\t\t\tif (perf) {\n\t\t\t\tt = start + perf.now();\n\t\t\t} else {\n\t\t\t\tt = time();\n\t\t\t}\n\t\t\tif (last < t) {\n\t\t\t\treturn N = 0, last = t + State.drift;\n\t\t\t}\n\t\t\treturn last = t + (N += 1) / D + State.drift;\n\t\t}\n\t\tvar time = Type.time.is,\n\t\t    last = -Infinity,\n\t\t    N = 0,\n\t\t    D = 1000; // WARNING! In the future, on machines that are D times faster than 2016AD machines, you will want to increase D by another several orders of magnitude so the processing speed never out paces the decimal resolution (increasing an integer effects the state accuracy).\n\t\tvar perf = typeof performance !== 'undefined' ? performance.timing && performance : false,\n\t\t    start = perf && perf.timing && perf.timing.navigationStart || (perf = false);\n\t\tState._ = '>';\n\t\tState.drift = 0;\n\t\tState.is = function (n, f, o) {\n\t\t\t// convenience function to get the state on a field on a node and return it.\n\t\t\tvar tmp = f && n && n[N_] && n[N_][State._] || o;\n\t\t\tif (!tmp) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn num_is(tmp = tmp[f]) ? tmp : -Infinity;\n\t\t};\n\t\tState.lex = function () {\n\t\t\treturn State().toString(36).replace('.', '');\n\t\t};\n\t\tState.ify = function (n, f, s, v, soul) {\n\t\t\t// put a field's state on a node.\n\t\t\tif (!n || !n[N_]) {\n\t\t\t\t// reject if it is not node-like.\n\t\t\t\tif (!soul) {\n\t\t\t\t\t// unless they passed a soul\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tn = Node.soul.ify(n, soul); // then make it so!\n\t\t\t}\n\t\t\tvar tmp = obj_as(n[N_], State._); // grab the states data.\n\t\t\tif (u !== f && f !== N_) {\n\t\t\t\tif (num_is(s)) {\n\t\t\t\t\ttmp[f] = s; // add the valid state.\n\t\t\t\t}\n\t\t\t\tif (u !== v) {\n\t\t\t\t\t// Note: Not its job to check for valid values!\n\t\t\t\t\tn[f] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n;\n\t\t};\n\t\tState.to = function (from, f, to) {\n\t\t\tvar val = from[f];\n\t\t\tif (obj_is(val)) {\n\t\t\t\tval = obj_copy(val);\n\t\t\t}\n\t\t\treturn State.ify(to, f, State.is(from, f), val, Node.soul(from));\n\t\t};(function () {\n\t\t\tState.map = function (cb, s, as) {\n\t\t\t\tvar u; // for use with Node.ify\n\t\t\t\tvar o = obj_is(o = cb || s) ? o : null;\n\t\t\t\tcb = fn_is(cb = cb || s) ? cb : null;\n\t\t\t\tif (o && !cb) {\n\t\t\t\t\ts = num_is(s) ? s : State();\n\t\t\t\t\to[N_] = o[N_] || {};\n\t\t\t\t\tobj_map(o, map, { o: o, s: s });\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t\tas = as || obj_is(s) ? s : u;\n\t\t\t\ts = num_is(s) ? s : State();\n\t\t\t\treturn function (v, f, o, opt) {\n\t\t\t\t\tif (!cb) {\n\t\t\t\t\t\tmap.call({ o: o, s: s }, v, f);\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(as || this || {}, v, f, o, opt);\n\t\t\t\t\tif (obj_has(o, f) && u === o[f]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tmap.call({ o: o, s: s }, v, f);\n\t\t\t\t};\n\t\t\t};\n\t\t\tfunction map(v, f) {\n\t\t\t\tif (N_ === f) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tState.ify(this.o, f, this.s);\n\t\t\t}\n\t\t})();\n\t\tvar obj = Type.obj,\n\t\t    obj_as = obj.as,\n\t\t    obj_has = obj.has,\n\t\t    obj_is = obj.is,\n\t\t    obj_map = obj.map,\n\t\t    obj_copy = obj.copy;\n\t\tvar num = Type.num,\n\t\t    num_is = num.is;\n\t\tvar fn = Type.fn,\n\t\t    fn_is = fn.is;\n\t\tvar N_ = Node._,\n\t\t    u;\n\t\tmodule.exports = State;\n\t})(require, './state');\n\n\t;require(function (module) {\n\t\tvar Type = require('./type');\n\t\tvar Val = require('./val');\n\t\tvar Node = require('./node');\n\t\tvar Graph = {};\n\t\t;(function () {\n\t\t\tGraph.is = function (g, cb, fn, as) {\n\t\t\t\t// checks to see if an object is a valid graph.\n\t\t\t\tif (!g || !obj_is(g) || obj_empty(g)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} // must be an object.\n\t\t\t\treturn !obj_map(g, map, { cb: cb, fn: fn, as: as }); // makes sure it wasn't an empty object.\n\t\t\t};\n\t\t\tfunction map(n, s) {\n\t\t\t\t// we invert this because the way'? we check for this is via a negation.\n\t\t\t\tif (!n || s !== Node.soul(n) || !Node.is(n, this.fn, this.as)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} // it is true that this is an invalid graph.\n\t\t\t\tif (!this.cb) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tnf.n = n;nf.as = this.as; // sequential race conditions aren't races.\n\t\t\t\tthis.cb.call(nf.as, n, s, nf);\n\t\t\t}\n\t\t\tfunction nf(fn) {\n\t\t\t\t// optional callback for each node.\n\t\t\t\tif (fn) {\n\t\t\t\t\tNode.is(nf.n, fn, nf.as);\n\t\t\t\t} // where we then have an optional callback for each field/value.\n\t\t\t}\n\t\t})();\n\t\t;(function () {\n\t\t\tGraph.ify = function (obj, env, as) {\n\t\t\t\tvar at = { path: [], obj: obj };\n\t\t\t\tif (!env) {\n\t\t\t\t\tenv = {};\n\t\t\t\t} else if (typeof env === 'string') {\n\t\t\t\t\tenv = { soul: env };\n\t\t\t\t} else if (env instanceof Function) {\n\t\t\t\t\tenv.map = env;\n\t\t\t\t}\n\t\t\t\tif (env.soul) {\n\t\t\t\t\tat.rel = Val.rel.ify(env.soul);\n\t\t\t\t}\n\t\t\t\tenv.graph = env.graph || {};\n\t\t\t\tenv.seen = env.seen || [];\n\t\t\t\tenv.as = env.as || as;\n\t\t\t\tnode(env, at);\n\t\t\t\tenv.root = at.node;\n\t\t\t\treturn env.graph;\n\t\t\t};\n\t\t\tfunction node(env, at) {\n\t\t\t\tvar tmp;\n\t\t\t\tif (tmp = seen(env, at)) {\n\t\t\t\t\treturn tmp;\n\t\t\t\t}\n\t\t\t\tat.env = env;\n\t\t\t\tat.soul = soul;\n\t\t\t\tif (Node.ify(at.obj, map, at)) {\n\t\t\t\t\t//at.rel = at.rel || Val.rel.ify(Node.soul(at.node));\n\t\t\t\t\tenv.graph[Val.rel.is(at.rel)] = at.node;\n\t\t\t\t}\n\t\t\t\treturn at;\n\t\t\t}\n\t\t\tfunction map(v, f, n) {\n\t\t\t\tvar at = this,\n\t\t\t\t    env = at.env,\n\t\t\t\t    is,\n\t\t\t\t    tmp;\n\t\t\t\tif (Node._ === f && obj_has(v, Val.rel._)) {\n\t\t\t\t\treturn n._; // TODO: Bug?\n\t\t\t\t}\n\t\t\t\tif (!(is = valid(v, f, n, at, env))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!f) {\n\t\t\t\t\tat.node = at.node || n || {};\n\t\t\t\t\tif (obj_has(v, Node._)) {\n\t\t\t\t\t\tat.node._ = obj_copy(v._);\n\t\t\t\t\t}\n\t\t\t\t\tat.node = Node.soul.ify(at.node, Val.rel.is(at.rel));\n\t\t\t\t\tat.rel = at.rel || Val.rel.ify(Node.soul(at.node));\n\t\t\t\t}\n\t\t\t\tif (tmp = env.map) {\n\t\t\t\t\ttmp.call(env.as || {}, v, f, n, at);\n\t\t\t\t\tif (obj_has(n, f)) {\n\t\t\t\t\t\tv = n[f];\n\t\t\t\t\t\tif (u === v) {\n\t\t\t\t\t\t\tobj_del(n, f);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!(is = valid(v, f, n, at, env))) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!f) {\n\t\t\t\t\treturn at.node;\n\t\t\t\t}\n\t\t\t\tif (true === is) {\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\ttmp = node(env, { obj: v, path: at.path.concat(f) });\n\t\t\t\tif (!tmp.node) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn tmp.rel; //{'#': Node.soul(tmp.node)};\n\t\t\t}\n\t\t\tfunction soul(id) {\n\t\t\t\tvar at = this;\n\t\t\t\tvar prev = Val.rel.is(at.rel),\n\t\t\t\t    graph = at.env.graph;\n\t\t\t\tat.rel = at.rel || Val.rel.ify(id);\n\t\t\t\tat.rel[Val.rel._] = id;\n\t\t\t\tif (at.node && at.node[Node._]) {\n\t\t\t\t\tat.node[Node._][Val.rel._] = id;\n\t\t\t\t}\n\t\t\t\tif (obj_has(graph, prev)) {\n\t\t\t\t\tgraph[id] = graph[prev];\n\t\t\t\t\tobj_del(graph, prev);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction valid(v, f, n, at, env) {\n\t\t\t\tvar tmp;\n\t\t\t\tif (Val.is(v)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (obj_is(v)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (tmp = env.invalid) {\n\t\t\t\t\tv = tmp.call(env.as || {}, v, f, n);\n\t\t\t\t\treturn valid(v, f, n, at, env);\n\t\t\t\t}\n\t\t\t\tenv.err = \"Invalid value at '\" + at.path.concat(f).join('.') + \"'!\";\n\t\t\t}\n\t\t\tfunction seen(env, at) {\n\t\t\t\tvar arr = env.seen,\n\t\t\t\t    i = arr.length,\n\t\t\t\t    has;\n\t\t\t\twhile (i--) {\n\t\t\t\t\thas = arr[i];\n\t\t\t\t\tif (at.obj === has.obj) {\n\t\t\t\t\t\treturn has;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tarr.push(at);\n\t\t\t}\n\t\t})();\n\t\tGraph.node = function (node) {\n\t\t\tvar soul = Node.soul(node);\n\t\t\tif (!soul) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn obj_put({}, soul, node);\n\t\t};(function () {\n\t\t\tGraph.to = function (graph, root, opt) {\n\t\t\t\tif (!graph) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar obj = {};\n\t\t\t\topt = opt || { seen: {} };\n\t\t\t\tobj_map(graph[root], map, { obj: obj, graph: graph, opt: opt });\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t\tfunction map(v, f) {\n\t\t\t\tvar tmp, obj;\n\t\t\t\tif (Node._ === f) {\n\t\t\t\t\tif (obj_empty(v, Val.rel._)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.obj[f] = obj_copy(v);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!(tmp = Val.rel.is(v))) {\n\t\t\t\t\tthis.obj[f] = v;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (obj = this.opt.seen[tmp]) {\n\t\t\t\t\tthis.obj[f] = obj;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.obj[f] = this.opt.seen[tmp] = Graph.to(this.graph, tmp, this.opt);\n\t\t\t}\n\t\t})();\n\t\tvar fn_is = Type.fn.is;\n\t\tvar obj = Type.obj,\n\t\t    obj_is = obj.is,\n\t\t    obj_del = obj.del,\n\t\t    obj_has = obj.has,\n\t\t    obj_empty = obj.empty,\n\t\t    obj_put = obj.put,\n\t\t    obj_map = obj.map,\n\t\t    obj_copy = obj.copy;\n\t\tvar u;\n\t\tmodule.exports = Graph;\n\t})(require, './graph');\n\n\t;require(function (module) {\n\t\t// request / response module, for asking and acking messages.\n\t\trequire('./onto'); // depends upon onto!\n\t\tmodule.exports = function ask(cb, as) {\n\t\t\tif (!this.on) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(cb instanceof Function)) {\n\t\t\t\tif (!cb || !as) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar id = cb['#'] || cb,\n\t\t\t\t    tmp = (this.tag || empty)[id];\n\t\t\t\tif (!tmp) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttmp = this.on(id, as);\n\t\t\t\tclearTimeout(tmp.err);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar id = as && as['#'] || Math.random().toString(36).slice(2);\n\t\t\tif (!cb) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t\tvar to = this.on(id, cb, as);\n\t\t\tto.err = to.err || setTimeout(function () {\n\t\t\t\tto.next({ err: \"Error: No ACK received yet.\" });\n\t\t\t\tto.off();\n\t\t\t}, (this.opt || {}).lack || 9000);\n\t\t\treturn id;\n\t\t};\n\t})(require, './ask');\n\n\t;require(function (module) {\n\t\tvar Type = require('./type');\n\t\tfunction Dup(opt) {\n\t\t\tvar dup = { s: {} };\n\t\t\topt = opt || { max: 1000, age: 1000 * 9 }; //1000 * 60 * 2};\n\t\t\tdup.check = function (id) {\n\t\t\t\treturn dup.s[id] ? dup.track(id) : false;\n\t\t\t};\n\t\t\tdup.track = function (id) {\n\t\t\t\tdup.s[id] = time_is();\n\t\t\t\tif (!dup.to) {\n\t\t\t\t\tdup.to = setTimeout(function () {\n\t\t\t\t\t\tType.obj.map(dup.s, function (time, id) {\n\t\t\t\t\t\t\tif (opt.age > time_is() - time) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tType.obj.del(dup.s, id);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdup.to = null;\n\t\t\t\t\t}, opt.age);\n\t\t\t\t}\n\t\t\t\treturn id;\n\t\t\t};\n\t\t\treturn dup;\n\t\t}\n\t\tvar time_is = Type.time.is;\n\t\tmodule.exports = Dup;\n\t})(require, './dup');\n\n\t;require(function (module) {\n\n\t\tfunction Gun(o) {\n\t\t\tif (o instanceof Gun) {\n\t\t\t\treturn (this._ = { gun: this }).gun;\n\t\t\t}\n\t\t\tif (!(this instanceof Gun)) {\n\t\t\t\treturn new Gun(o);\n\t\t\t}\n\t\t\treturn Gun.create(this._ = { gun: this, opt: o });\n\t\t}\n\n\t\tGun.is = function (gun) {\n\t\t\treturn gun instanceof Gun;\n\t\t};\n\n\t\tGun.version = 0.9;\n\n\t\tGun.chain = Gun.prototype;\n\t\tGun.chain.toJSON = function () {};\n\n\t\tvar Type = require('./type');\n\t\tType.obj.to(Type, Gun);\n\t\tGun.HAM = require('./HAM');\n\t\tGun.val = require('./val');\n\t\tGun.node = require('./node');\n\t\tGun.state = require('./state');\n\t\tGun.graph = require('./graph');\n\t\tGun.on = require('./onto');\n\t\tGun.ask = require('./ask');\n\t\tGun.dup = require('./dup');\n\n\t\tGun._ = { // some reserved key words, these are not the only ones.\n\t\t\tnode: Gun.node._ // all metadata of a node is stored in the meta property on the node.\n\t\t\t, soul: Gun.val.rel._ // a soul is a UUID of a node but it always points to the \"latest\" data known.\n\t\t\t, state: Gun.state._ // other than the soul, we store HAM metadata.\n\t\t\t, field: '.' // a field is a property on a node which points to a value.\n\t\t\t, value: '=' // the primitive value.\n\t\t};(function () {\n\t\t\tGun.create = function (at) {\n\t\t\t\tat.root = at.root || at.gun;\n\t\t\t\tat.graph = at.graph || {};\n\t\t\t\tat.on = at.on || Gun.on;\n\t\t\t\tat.ask = at.ask || Gun.ask;\n\t\t\t\tat.dup = at.dup || Gun.dup();\n\t\t\t\tvar gun = at.gun.opt(at.opt);\n\t\t\t\tif (!at.once) {\n\t\t\t\t\tat.on('in', root, at);\n\t\t\t\t\tat.on('out', root, at);\n\t\t\t\t}\n\t\t\t\tat.once = 1;\n\t\t\t\treturn gun;\n\t\t\t};\n\t\t\tfunction root(msg) {\n\t\t\t\t//console.log(\"add to.next(at)\"); // TODO: BUG!!!\n\t\t\t\tvar ev = this,\n\t\t\t\t    at = ev.as,\n\t\t\t\t    gun = at.gun,\n\t\t\t\t    tmp;\n\t\t\t\t//if(!msg.gun){ msg.gun = at.gun }\n\t\t\t\tif (!(tmp = msg['#'])) {\n\t\t\t\t\ttmp = msg['#'] = text_rand(9);\n\t\t\t\t}\n\t\t\t\tif (at.dup.check(tmp)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tat.dup.track(tmp);\n\t\t\t\tmsg = obj_to(msg); //, {gun: at.gun});\n\t\t\t\tif (!at.ask(msg['@'], msg)) {\n\t\t\t\t\tif (msg.get) {\n\t\t\t\t\t\tGun.on.get(msg, gun);\n\t\t\t\t\t\t//at.on('get', get(msg));\n\t\t\t\t\t}\n\t\t\t\t\tif (msg.put) {\n\t\t\t\t\t\tGun.on.put(msg, gun);\n\t\t\t\t\t\t//at.on('put', put(msg));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tat.on('out', msg);\n\t\t\t}\n\t\t})();\n\n\t\t;(function () {\n\t\t\tGun.on.put = function (msg, gun) {\n\t\t\t\tvar at = gun._,\n\t\t\t\t    ctx = { gun: gun, graph: at.graph, put: {}, map: {}, machine: Gun.state(), ack: msg['@'] };\n\t\t\t\tif (!Gun.graph.is(msg.put, null, verify, ctx)) {\n\t\t\t\t\tctx.err = \"Error: Invalid graph!\";\n\t\t\t\t}\n\t\t\t\tif (ctx.err) {\n\t\t\t\t\treturn at.on('in', { '@': msg['#'], err: Gun.log(ctx.err) });\n\t\t\t\t}\n\t\t\t\tobj_map(ctx.put, merge, ctx);\n\t\t\t\tobj_map(ctx.map, map, ctx);\n\t\t\t\tif (u !== ctx.defer) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tGun.on.put(msg, gun);\n\t\t\t\t\t}, ctx.defer - at.machine);\n\t\t\t\t}\n\t\t\t\tif (!ctx.diff) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tat.on('put', obj_to(msg, { put: ctx.diff }));\n\t\t\t};\n\t\t\tfunction verify(val, key, node, soul) {\n\t\t\t\tvar ctx = this;\n\t\t\t\tvar state = Gun.state.is(node, key),\n\t\t\t\t    tmp;\n\t\t\t\tif (!state) {\n\t\t\t\t\treturn ctx.err = \"Error: No state on '\" + key + \"' in node '\" + soul + \"'!\";\n\t\t\t\t}\n\t\t\t\tvar vertex = ctx.graph[soul] || empty,\n\t\t\t\t    was = Gun.state.is(vertex, key, true),\n\t\t\t\t    known = vertex[key];\n\t\t\t\tvar HAM = Gun.HAM(ctx.machine, state, was, val, known);\n\t\t\t\tif (!HAM.incoming) {\n\t\t\t\t\tif (HAM.defer) {\n\t\t\t\t\t\t// pick the lowest\n\t\t\t\t\t\tctx.defer = state < (ctx.defer || Infinity) ? state : ctx.defer;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.put[soul] = Gun.state.to(node, key, ctx.put[soul]);\n\t\t\t\t(ctx.diff || (ctx.diff = {}))[soul] = Gun.state.to(node, key, ctx.diff[soul]);\n\t\t\t}\n\t\t\tfunction merge(node, soul) {\n\t\t\t\tvar cat = this.gun._,\n\t\t\t\t    at = (cat.next || empty)[soul];\n\t\t\t\tif (!at) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar msg = this.map[soul] = {\n\t\t\t\t\tput: this.node = node,\n\t\t\t\t\tget: this.soul = soul,\n\t\t\t\t\tgun: this.at = at\n\t\t\t\t};\n\t\t\t\tif (this.ack) {\n\t\t\t\t\tmsg['@'] = this.ack;\n\t\t\t\t}\n\t\t\t\tobj_map(node, each, this);\n\t\t\t}\n\t\t\tfunction each(val, key) {\n\t\t\t\tvar graph = this.graph,\n\t\t\t\t    soul = this.soul,\n\t\t\t\t    at = this.at._,\n\t\t\t\t    tmp;\n\t\t\t\tgraph[soul] = Gun.state.to(this.node, key, graph[soul]);\n\t\t\t\tat.put = Gun.state.to(this.node, key, at.put);\n\t\t\t}\n\t\t\tfunction map(msg, soul) {\n\t\t\t\tvar tmp;\n\t\t\t\tif (!msg.gun) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ((tmp = this.gun._).tag.node) {\n\t\t\t\t\ttmp.on('node', function (msg) {\n\t\t\t\t\t\tthis.off();\n\t\t\t\t\t\tmsg.gun._.on('in', msg);\n\t\t\t\t\t}).on.on('node', msg);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmsg.gun._.on('in', msg);\n\t\t\t}\n\n\t\t\tGun.on.get = function (msg, gun) {\n\t\t\t\tvar root = gun._,\n\t\t\t\t    soul = msg.get[_soul],\n\t\t\t\t    node = root.graph[soul],\n\t\t\t\t    field = msg.get[_field],\n\t\t\t\t    tmp;\n\t\t\t\tvar next = root.next || (root.next = {}),\n\t\t\t\t    at = (next[soul] || empty)._;\n\t\t\t\tif (!node || !at) {\n\t\t\t\t\treturn root.on('get', msg);\n\t\t\t\t}\n\t\t\t\tif (field) {\n\t\t\t\t\tif (!obj_has(node, field)) {\n\t\t\t\t\t\treturn root.on('get', msg);\n\t\t\t\t\t}\n\t\t\t\t\tnode = Gun.state.to(node, field);\n\t\t\t\t} else {\n\t\t\t\t\tnode = Gun.obj.copy(node);\n\t\t\t\t}\n\t\t\t\tnode = Gun.graph.node(node);\n\t\t\t\t//tmp = at.ack;\n\t\t\t\troot.on('in', {\n\t\t\t\t\t'@': msg['#'],\n\t\t\t\t\t//how: 'mem',\n\t\t\t\t\tput: node,\n\t\t\t\t\tgun: gun\n\t\t\t\t});\n\t\t\t\t//if(0 < tmp){\n\t\t\t\t//\treturn;\n\t\t\t\t//}\n\t\t\t\troot.on('get', msg);\n\t\t\t};\n\t\t})();\n\n\t\t;(function () {\n\t\t\tGun.chain.opt = function (opt) {\n\t\t\t\topt = opt || {};\n\t\t\t\tvar gun = this,\n\t\t\t\t    at = gun._,\n\t\t\t\t    tmp = opt.peers || opt;\n\t\t\t\tif (!obj_is(opt)) {\n\t\t\t\t\topt = {};\n\t\t\t\t}\n\t\t\t\tif (!obj_is(at.opt)) {\n\t\t\t\t\tat.opt = opt;\n\t\t\t\t}\n\t\t\t\tif (text_is(tmp)) {\n\t\t\t\t\ttmp = [tmp];\n\t\t\t\t}\n\t\t\t\tif (list_is(tmp)) {\n\t\t\t\t\ttmp = obj_map(tmp, function (url, i, map) {\n\t\t\t\t\t\tmap(url, { url: url });\n\t\t\t\t\t});\n\t\t\t\t\tif (!obj_is(at.opt.peers)) {\n\t\t\t\t\t\tat.opt.peers = {};\n\t\t\t\t\t}\n\t\t\t\t\tat.opt.peers = obj_to(tmp, at.opt.peers);\n\t\t\t\t}\n\t\t\t\tat.opt.peers = at.opt.peers || {};\n\t\t\t\tobj_to(opt, at.opt); // copies options on to `at.opt` only if not already taken.\n\t\t\t\tGun.on('opt', at);\n\t\t\t\tat.opt.uuid = at.opt.uuid || function () {\n\t\t\t\t\treturn state_lex() + text_rand(12);\n\t\t\t\t};\n\t\t\t\treturn gun;\n\t\t\t};\n\t\t})();\n\n\t\tvar list_is = Gun.list.is;\n\t\tvar text = Gun.text,\n\t\t    text_is = text.is,\n\t\t    text_rand = text.random;\n\t\tvar obj = Gun.obj,\n\t\t    obj_is = obj.is,\n\t\t    obj_has = obj.has,\n\t\t    obj_to = obj.to,\n\t\t    obj_map = obj.map,\n\t\t    obj_copy = obj.copy;\n\t\tvar state_lex = Gun.state.lex,\n\t\t    _soul = Gun._.soul,\n\t\t    _field = Gun._.field,\n\t\t    node_ = Gun._.node,\n\t\t    rel_is = Gun.val.rel.is;\n\t\tvar empty = {},\n\t\t    u;\n\n\t\tconsole.debug = function (i, s) {\n\t\t\treturn console.debug.i && i === console.debug.i && console.debug.i++ && (console.log.apply(console, arguments) || s);\n\t\t};\n\n\t\tGun.log = function () {\n\t\t\treturn !Gun.log.off && console.log.apply(console, arguments), [].slice.call(arguments).join(' ');\n\t\t};\n\t\tGun.log.once = function (w, s, o) {\n\t\t\treturn (o = Gun.log.once)[w] = o[w] || 0, o[w]++ || Gun.log(s);\n\t\t};\"Please do not remove these messages unless you are paying for a monthly sponsorship, thanks!\";\n\t\tGun.log.once(\"welcome\", \"Hello wonderful person! :) Thanks for using GUN, feel free to ask for help on https://gitter.im/amark/gun and ask StackOverflow questions tagged with 'gun'!\");\n\t\t;\"Please do not remove these messages unless you are paying for a monthly sponsorship, thanks!\";\n\n\t\tif (typeof window !== \"undefined\") {\n\t\t\twindow.Gun = Gun;\n\t\t}\n\t\tif (typeof common !== \"undefined\") {\n\t\t\tcommon.exports = Gun;\n\t\t}\n\t\tmodule.exports = Gun;\n\t})(require, './root');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./root');\n\t\tGun.chain.back = function (n, opt) {\n\t\t\tvar tmp;\n\t\t\tn = n || 1;\n\t\t\tif (-1 === n || Infinity === n) {\n\t\t\t\treturn this._.root;\n\t\t\t} else if (1 === n) {\n\t\t\t\treturn this._.back || this;\n\t\t\t}\n\t\t\tvar gun = this,\n\t\t\t    at = gun._;\n\t\t\tif (typeof n === 'string') {\n\t\t\t\tn = n.split('.');\n\t\t\t}\n\t\t\tif (n instanceof Array) {\n\t\t\t\tvar i = 0,\n\t\t\t\t    l = n.length,\n\t\t\t\t    tmp = at;\n\t\t\t\tfor (i; i < l; i++) {\n\t\t\t\t\ttmp = (tmp || empty)[n[i]];\n\t\t\t\t}\n\t\t\t\tif (u !== tmp) {\n\t\t\t\t\treturn opt ? gun : tmp;\n\t\t\t\t} else if (tmp = at.back) {\n\t\t\t\t\treturn tmp.back(n, opt);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (n instanceof Function) {\n\t\t\t\tvar yes,\n\t\t\t\t    tmp = { back: gun };\n\t\t\t\twhile ((tmp = tmp.back) && (tmp = tmp._) && !(yes = n(tmp, opt))) {}\n\t\t\t\treturn yes;\n\t\t\t}\n\t\t\tif (Gun.num.is(n)) {\n\t\t\t\treturn at.back.back(n - 1);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tvar empty = {},\n\t\t    u;\n\t})(require, './back');\n\n\t;require(function (module) {\n\t\t// WARNING: GUN is very simple, but the JavaScript chaining API around GUN\n\t\t// is complicated and was extremely hard to build. If you port GUN to another\n\t\t// language, consider implementing an easier API to build.\n\t\tvar Gun = require('./root');\n\t\tGun.chain.chain = function () {\n\t\t\tvar at = this._,\n\t\t\t    chain = new this.constructor(this),\n\t\t\t    cat = chain._,\n\t\t\t    root;\n\t\t\tcat.root = root = at.root;\n\t\t\tcat.id = ++root._.once;\n\t\t\tcat.back = this;\n\t\t\tcat.on = Gun.on;\n\t\t\tcat.on('in', input, cat); // For 'in' if I add my own listeners to each then I MUST do it before in gets called. If I listen globally for all incoming data instead though, regardless of individual listeners, I can transform the data there and then as well.\n\t\t\tcat.on('out', output, cat); // However for output, there isn't really the global option. I must listen by adding my own listener individually BEFORE this one is ever called.\n\t\t\treturn chain;\n\t\t};\n\n\t\tfunction output(msg) {\n\t\t\tvar put,\n\t\t\t    get,\n\t\t\t    at = this.as,\n\t\t\t    back = at.back._,\n\t\t\t    root = at.root._;\n\t\t\tif (!msg.gun) {\n\t\t\t\tmsg.gun = at.gun;\n\t\t\t}\n\t\t\tthis.to.next(msg);\n\t\t\tif (get = msg.get) {\n\t\t\t\t/*if(u !== at.put){\r\n    \tat.on('in', at);\r\n    \treturn;\r\n    }*/\n\t\t\t\tif (get['#'] || at.soul) {\n\t\t\t\t\tget['#'] = get['#'] || at.soul;\n\t\t\t\t\tmsg['#'] || (msg['#'] = text_rand());\n\t\t\t\t\tback = root.gun.get(get['#'])._;\n\t\t\t\t\tif (!(get = get['.'])) {\n\t\t\t\t\t\tif (obj_has(back, 'put')) {\n\t\t\t\t\t\t\t//if(u !== back.put){\n\t\t\t\t\t\t\tback.on('in', back);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (back.ack) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmsg.gun = back.gun;\n\t\t\t\t\t\tback.ack = -1;\n\t\t\t\t\t} else if (obj_has(back.put, get)) {\n\t\t\t\t\t\tback.on('in', {\n\t\t\t\t\t\t\tgun: back.gun,\n\t\t\t\t\t\t\tput: Gun.state.to(back.put, get),\n\t\t\t\t\t\t\tget: back.get\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\troot.ask(ack, msg);\n\t\t\t\t\treturn root.on('in', msg);\n\t\t\t\t}\n\t\t\t\tif (root.now) {\n\t\t\t\t\troot.now[at.id] = root.now[at.id] || true;\n\t\t\t\t}\n\t\t\t\tif (get['.']) {\n\t\t\t\t\tif (at.get) {\n\t\t\t\t\t\tmsg = { get: { '.': at.get }, gun: at.gun };\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.gun; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t\t}\n\t\t\t\t\tmsg = { get: {}, gun: at.gun };\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t\tat.ack = at.ack || -1;\n\t\t\t\tif (at.get) {\n\t\t\t\t\tmsg.gun = at.gun;\n\t\t\t\t\tget['.'] = at.get;\n\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.gun; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn back.on('out', msg);\n\t\t}\n\n\t\tfunction input(at) {\n\t\t\tat = at._ || at;\n\t\t\tvar ev = this,\n\t\t\t    cat = this.as,\n\t\t\t    gun = at.gun,\n\t\t\t    coat = gun._,\n\t\t\t    change = at.put,\n\t\t\t    back = cat.back._ || empty,\n\t\t\t    rel,\n\t\t\t    tmp;\n\t\t\tif (cat.get && at.get !== cat.get) {\n\t\t\t\tat = obj_to(at, { get: cat.get });\n\t\t\t}\n\t\t\tif (cat.field && coat !== cat) {\n\t\t\t\tat = obj_to(at, { gun: cat.gun });\n\t\t\t\tif (coat.ack) {\n\t\t\t\t\tcat.ack = coat.ack;\n\t\t\t\t\t//cat.ack = cat.ack || coat.ack;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (u === change) {\n\t\t\t\tev.to.next(at);\n\t\t\t\tif (cat.soul) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\techo(cat, at, ev);\n\t\t\t\tif (cat.field) {\n\t\t\t\t\tnot(cat, at);\n\t\t\t\t}\n\t\t\t\tobj_del(coat.echo, cat.id);\n\t\t\t\tobj_del(cat.map, coat.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (cat.soul) {\n\t\t\t\t//if(cat.root._.now){ at = obj_to(at, {put: change = coat.put}) } // TODO: Ugly hack for uncached synchronous maps.\n\t\t\t\tev.to.next(at);\n\t\t\t\techo(cat, at, ev);\n\t\t\t\tobj_map(change, map, { at: at, cat: cat });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t/*if(rel = Gun.val.rel.is(change)){\r\n   \tif(tmp = (gun.back(-1).get(rel)._).put){\r\n   \t\tchange = tmp; // this will cause performance to turn to mush, maybe use `.now` check?\r\n   \t}\r\n   \t//if(tmp.put){ change = tmp.put; }\r\n   }\r\n   if(!rel || tmp){*/\n\t\t\tif (!(rel = Gun.val.rel.is(change))) {\n\t\t\t\tif (Gun.val.is(change)) {\n\t\t\t\t\tif (cat.field || cat.soul) {\n\t\t\t\t\t\tnot(cat, at);\n\t\t\t\t\t} else if (coat.field || coat.soul) {\n\t\t\t\t\t\t(coat.echo || (coat.echo = {}))[cat.id] = cat;\n\t\t\t\t\t\t(cat.map || (cat.map = {}))[coat.id] = cat.map[coat.id] || { at: coat };\n\t\t\t\t\t\t//if(u === coat.put){ return } // Not necessary but improves performance. If we have it but coat does not, that means we got things out of order and coat will get it. Once coat gets it, it will tell us again.\n\t\t\t\t\t}\n\t\t\t\t\tev.to.next(at);\n\t\t\t\t\techo(cat, at, ev);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (cat.field && coat !== cat && obj_has(coat, 'put')) {\n\t\t\t\t\tcat.put = coat.put;\n\t\t\t\t};\n\t\t\t\tif ((rel = Gun.node.soul(change)) && coat.field) {\n\t\t\t\t\tcoat.put = cat.root.get(rel)._.put;\n\t\t\t\t}\n\t\t\t\tev.to.next(at);\n\t\t\t\techo(cat, at, ev);\n\t\t\t\trelate(cat, at, coat, rel);\n\t\t\t\tobj_map(change, map, { at: at, cat: cat });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trelate(cat, at, coat, rel);\n\t\t\tev.to.next(at);\n\t\t\techo(cat, at, ev);\n\t\t}\n\t\tGun.chain.chain.input = input;\n\t\tfunction relate(at, msg, from, rel) {\n\t\t\tif (!rel || node_ === at.get) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar tmp = at.root.get(rel)._;\n\t\t\tif (at.has) {\n\t\t\t\tfrom = tmp;\n\t\t\t} else if (from.has) {\n\t\t\t\trelate(from, msg, from, rel);\n\t\t\t}\n\t\t\tif (from === at) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t(from.echo || (from.echo = {}))[at.id] = at;\n\t\t\tif (at.has && !(at.map || empty)[from.id]) {\n\t\t\t\t// if we haven't seen this before.\n\t\t\t\tnot(at, msg);\n\t\t\t}\n\t\t\ttmp = (at.map || (at.map = {}))[from.id] = at.map[from.id] || { at: from };\n\t\t\tvar now = at.root._.now;\n\t\t\tif (rel === tmp.rel) {\n\t\t\t\tif (!now) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (u === now[at.id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ((now._ || (now._ = {}))[at.id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}now._[at.id] = true;\n\t\t\t}\n\t\t\task(at, tmp.rel = rel);\n\t\t}\n\t\tfunction echo(at, msg, ev) {\n\t\t\tif (!at.echo) {\n\t\t\t\treturn;\n\t\t\t} // || node_ === at.get ?\n\t\t\tif (at.has || at.field) {\n\t\t\t\tmsg = obj_to(msg, { event: ev });\n\t\t\t}\n\t\t\tobj_map(at.echo, reverb, msg);\n\t\t}\n\t\tfunction reverb(to) {\n\t\t\tto.on('in', this);\n\t\t}\n\t\tfunction map(data, key) {\n\t\t\t// Map over only the changes on every update.\n\t\t\tvar cat = this.cat,\n\t\t\t    next = cat.next || empty,\n\t\t\t    via = this.at,\n\t\t\t    gun,\n\t\t\t    chain,\n\t\t\t    at,\n\t\t\t    tmp;\n\t\t\tif (node_ === key && !next[key]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(gun = next[key])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tat = gun._;\n\t\t\t//if(data && data[_soul] && (tmp = Gun.val.rel.is(data)) && (tmp = (cat.root.get(tmp)._)) && obj_has(tmp, 'put')){\n\t\t\t//\tdata = tmp.put;\n\t\t\t//}\n\t\t\tif (at.field) {\n\t\t\t\tif (!(data && data[_soul] && Gun.val.rel.is(data) === Gun.node.soul(at.put))) {\n\t\t\t\t\tat.put = data;\n\t\t\t\t}\n\t\t\t\tchain = gun;\n\t\t\t} else {\n\t\t\t\tchain = via.gun.get(key);\n\t\t\t}\n\t\t\tat.on('in', {\n\t\t\t\tput: data,\n\t\t\t\tget: key,\n\t\t\t\tgun: chain,\n\t\t\t\tvia: via\n\t\t\t});\n\t\t}\n\t\tfunction not(at, msg) {\n\t\t\tif (!(at.has || at.soul)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar tmp = at.map,\n\t\t\t    root = at.root._;\n\t\t\tat.map = null;\n\t\t\tif (!root.now || !root.now[at.id]) {\n\t\t\t\tif (u === msg.put && !msg['@'] && null === tmp) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (u === tmp && Gun.val.rel.is(at.put)) {\n\t\t\t\treturn;\n\t\t\t} // TODO: Bug? Threw second condition in for a particular test, not sure if a counter example is tested though.\n\t\t\tobj_map(tmp, function (proxy) {\n\t\t\t\tif (!(proxy = proxy.at)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tobj_del(proxy.echo, at.id);\n\t\t\t});\n\t\t\tobj_map(at.next, function (gun, key) {\n\t\t\t\tvar coat = gun._;\n\t\t\t\tcoat.put = u;\n\t\t\t\tif (coat.ack) {\n\t\t\t\t\tcoat.ack = -1;\n\t\t\t\t}\n\t\t\t\tcoat.on('in', {\n\t\t\t\t\tget: key,\n\t\t\t\t\tgun: gun,\n\t\t\t\t\tput: u\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tfunction ask(at, soul) {\n\t\t\tvar tmp = at.root.get(soul)._;\n\t\t\tif (at.ack) {\n\t\t\t\t//tmp.ack = tmp.ack || -1;\n\t\t\t\ttmp.on('out', { get: { '#': soul } });\n\t\t\t\tif (!at.ask) {\n\t\t\t\t\treturn;\n\t\t\t\t} // TODO: PERFORMANCE? More elegant way?\n\t\t\t}\n\t\t\tobj_map(at.ask || at.next, function (gun, key) {\n\t\t\t\t//(tmp.gun.get(key)._).on('out', {get: {'#': soul, '.': key}});\n\t\t\t\t//tmp.on('out', {get: {'#': soul, '.': key}});\n\t\t\t\tgun._.on('out', { get: { '#': soul, '.': key } });\n\t\t\t\t//at.on('out', {get: {'#': soul, '.': key}});\n\t\t\t});\n\t\t\tGun.obj.del(at, 'ask'); // TODO: PERFORMANCE? More elegant way?\n\t\t}\n\t\tfunction ack(msg, ev) {\n\t\t\tvar as = this.as,\n\t\t\t    get = as.get || empty,\n\t\t\t    at = as.gun._;\n\t\t\tif (at.ack) {\n\t\t\t\tat.ack = at.ack + 1 || 1;\n\t\t\t}\n\t\t\tif (!msg.put || node_ == get['.'] || get['.'] && !obj_has(msg.put[get['#']], at.get)) {\n\t\t\t\tif (at.put !== u) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//at.ack = 0;\n\t\t\t\tat.on('in', {\n\t\t\t\t\tget: at.get,\n\t\t\t\t\tput: at.put = u,\n\t\t\t\t\tgun: at.gun,\n\t\t\t\t\t'@': msg['@']\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//if(/*!msg.gun &&*/ !get['.'] && get['#']){ at.ack = (at.ack + 1) || 1 }\n\t\t\t//msg = obj_to(msg);\n\t\t\tmsg.gun = at.root;\n\t\t\t//Gun.on('put', at);\n\t\t\tGun.on.put(msg, at.root);\n\t\t}\n\t\tvar empty = {},\n\t\t    u;\n\t\tvar obj = Gun.obj,\n\t\t    obj_has = obj.has,\n\t\t    obj_put = obj.put,\n\t\t    obj_del = obj.del,\n\t\t    obj_to = obj.to,\n\t\t    obj_map = obj.map;\n\t\tvar text_rand = Gun.text.random;\n\t\tvar _soul = Gun._.soul,\n\t\t    _field = Gun._.field,\n\t\t    node_ = Gun.node._;\n\t})(require, './chain');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./root');\n\t\tGun.chain.get = function (key, cb, as) {\n\t\t\tif (typeof key === 'string') {\n\t\t\t\tvar gun,\n\t\t\t\t    back = this,\n\t\t\t\t    cat = back._;\n\t\t\t\tvar next = cat.next || empty,\n\t\t\t\t    tmp;\n\t\t\t\tif (!(gun = next[key])) {\n\t\t\t\t\tgun = cache(key, back);\n\t\t\t\t}\n\t\t\t} else if (key instanceof Function) {\n\t\t\t\tvar gun = this,\n\t\t\t\t    at = gun._,\n\t\t\t\t    root = at.root._,\n\t\t\t\t    tmp = root.now,\n\t\t\t\t    ev;\n\t\t\t\tas = cb || {};\n\t\t\t\tas.use = key;\n\t\t\t\tas.out = as.out || {};\n\t\t\t\tas.out.get = as.out.get || {};\n\t\t\t\tev = at.on('in', use, as);\n\t\t\t\t(root.now = { $: 1 })[as.now = at.id] = ev;\n\t\t\t\tat.on('out', as.out);\n\t\t\t\troot.now = tmp;\n\t\t\t\treturn gun;\n\t\t\t} else if (num_is(key)) {\n\t\t\t\treturn this.get('' + key, cb, as);\n\t\t\t} else {\n\t\t\t\t(as = this.chain())._.err = { err: Gun.log('Invalid get request!', key) }; // CLEAN UP\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb.call(as, as._.err);\n\t\t\t\t}\n\t\t\t\treturn as;\n\t\t\t}\n\t\t\tif (tmp = cat.stun) {\n\t\t\t\t// TODO: Refactor?\n\t\t\t\tgun._.stun = gun._.stun || tmp;\n\t\t\t}\n\t\t\tif (cb && cb instanceof Function) {\n\t\t\t\tgun.get(cb, as);\n\t\t\t}\n\t\t\treturn gun;\n\t\t};\n\t\tfunction cache(key, back) {\n\t\t\tvar cat = back._,\n\t\t\t    next = cat.next,\n\t\t\t    gun = back.chain(),\n\t\t\t    at = gun._;\n\t\t\tif (!next) {\n\t\t\t\tnext = cat.next = {};\n\t\t\t}\n\t\t\tnext[at.get = key] = gun;\n\t\t\tif (cat.root === back) {\n\t\t\t\tat.soul = key;\n\t\t\t} else if (cat.soul || cat.field || cat.has) {\n\t\t\t\t// TODO: Convert field to has!\n\t\t\t\tat.field = at.has = key;\n\t\t\t\tif (obj_has(cat.put, key)) {\n\t\t\t\t\t//at.put = cat.put[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn gun;\n\t\t}\n\t\tfunction use(msg) {\n\t\t\tvar ev = this,\n\t\t\t    as = ev.as,\n\t\t\t    gun = msg.gun,\n\t\t\t    at = gun._,\n\t\t\t    root = at.root._,\n\t\t\t    data = msg.put,\n\t\t\t    tmp;\n\t\t\tif ((tmp = root.now) && ev !== tmp[as.now]) {\n\t\t\t\treturn ev.to.next(msg);\n\t\t\t}\n\t\t\tif (u === data) {\n\t\t\t\tdata = at.put;\n\t\t\t}\n\t\t\tif ((tmp = data) && tmp[rel._] && (tmp = rel.is(tmp))) {\n\t\t\t\ttmp = at.root.get(tmp)._;\n\t\t\t\tif (u !== tmp.put) {\n\t\t\t\t\tmsg = obj_to(msg, { put: tmp.put });\n\t\t\t\t}\n\t\t\t}\n\t\t\tas.use(msg, msg.event || ev);\n\t\t\tev.to.next(msg);\n\t\t}\n\t\tvar obj = Gun.obj,\n\t\t    obj_has = obj.has,\n\t\t    obj_to = Gun.obj.to;\n\t\tvar num_is = Gun.num.is;\n\t\tvar rel = Gun.val.rel,\n\t\t    node_ = Gun.node._;\n\t\tvar empty = {},\n\t\t    u;\n\t})(require, './get');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./root');\n\t\tGun.chain.put = function (data, cb, as) {\n\t\t\t// #soul.field=value>state\n\t\t\t// ~who#where.where=what>when@was\n\t\t\t// TODO: BUG! Put probably cannot handle plural chains!\n\t\t\tvar gun = this,\n\t\t\t    at = gun._,\n\t\t\t    root = at.root,\n\t\t\t    tmp;\n\t\t\tas = as || {};\n\t\t\tas.data = data;\n\t\t\tas.gun = as.gun || gun;\n\t\t\tif (typeof cb === 'string') {\n\t\t\t\tas.soul = cb;\n\t\t\t} else {\n\t\t\t\tas.ack = cb;\n\t\t\t}\n\t\t\tif (at.soul) {\n\t\t\t\tas.soul = at.soul;\n\t\t\t}\n\t\t\tif (as.soul || root === gun) {\n\t\t\t\tif (!obj_is(as.data)) {\n\t\t\t\t\t(as.ack || noop).call(as, as.out = { err: Gun.log(\"Data saved to the root level of the graph must be a node (an object), not a\", typeof as.data, 'of \"' + as.data + '\"!') });\n\t\t\t\t\tif (as.res) {\n\t\t\t\t\t\tas.res();\n\t\t\t\t\t}\n\t\t\t\t\treturn gun;\n\t\t\t\t}\n\t\t\t\tas.soul = as.soul || (as.not = Gun.node.soul(as.data) || (root._.opt.uuid || Gun.text.random)());\n\t\t\t\tif (!as.soul) {\n\t\t\t\t\t// polyfill async uuid for SEA\n\t\t\t\t\troot._.opt.uuid(function (err, soul) {\n\t\t\t\t\t\t// TODO: improve perf without anonymous callback\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn Gun.log(err);\n\t\t\t\t\t\t} // TODO: Handle error!\n\t\t\t\t\t\t(as.ref || as.gun).put(as.data, as.soul = soul, as);\n\t\t\t\t\t});\n\t\t\t\t\treturn gun;\n\t\t\t\t}\n\t\t\t\tas.gun = gun = root.get(as.soul);\n\t\t\t\tas.ref = as.gun;\n\t\t\t\tify(as);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tif (Gun.is(data)) {\n\t\t\t\tdata.get('_').get(function (at, ev, tmp) {\n\t\t\t\t\tev.off();\n\t\t\t\t\tif (!(tmp = at.gun) || !(tmp = tmp._.back) || !tmp._.soul) {\n\t\t\t\t\t\treturn Gun.log(\"The reference you are saving is a\", typeof at.put, '\"' + as.put + '\", not a node (object)!');\n\t\t\t\t\t}\n\t\t\t\t\tgun.put(Gun.val.rel.ify(tmp._.soul), cb, as);\n\t\t\t\t});\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tas.ref = as.ref || root === (tmp = at.back) ? gun : tmp;\n\t\t\tif (as.ref._.soul && Gun.val.is(as.data) && at.get) {\n\t\t\t\tas.data = obj_put({}, at.get, as.data);\n\t\t\t\tas.ref.put(as.data, as.soul, as);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tas.ref.get('_').get(any, { as: as });\n\t\t\tif (!as.out) {\n\t\t\t\t// TODO: Perf idea! Make a global lock, that blocks everything while it is on, but if it is on the lock it does the expensive lookup to see if it is a dependent write or not and if not then it proceeds full speed. Meh? For write heavy async apps that would be terrible.\n\t\t\t\tas.res = as.res || stun; // Gun.on.stun(as.ref); // TODO: BUG! Deal with locking?\n\t\t\t\tas.gun._.stun = as.ref._.stun;\n\t\t\t}\n\t\t\treturn gun;\n\t\t};\n\n\t\tfunction ify(as) {\n\t\t\tas.batch = batch;\n\t\t\tvar opt = as.opt || {},\n\t\t\t    env = as.env = Gun.state.map(map, opt.state);\n\t\t\tenv.soul = as.soul;\n\t\t\tas.graph = Gun.graph.ify(as.data, env, as);\n\t\t\tif (env.err) {\n\t\t\t\t(as.ack || noop).call(as, as.out = { err: Gun.log(env.err) });\n\t\t\t\tif (as.res) {\n\t\t\t\t\tas.res();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tas.batch();\n\t\t}\n\n\t\tfunction stun(cb) {\n\t\t\tif (cb) {\n\t\t\t\tcb();\n\t\t\t}\n\t\t\treturn;\n\t\t\tvar as = this;\n\t\t\tif (!as.ref) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (cb) {\n\t\t\t\tas.after = as.ref._.tag;\n\t\t\t\tas.now = as.ref._.tag = {};\n\t\t\t\tcb();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (as.after) {\n\t\t\t\tas.ref._.tag = as.after;\n\t\t\t}\n\t\t}\n\n\t\tfunction batch() {\n\t\t\tvar as = this;\n\t\t\tif (!as.graph || obj_map(as.stun, no)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tas.res = as.res || function (cb) {\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t};\n\t\t\tas.res(function () {\n\t\t\t\tvar cat = as.gun.back(-1)._,\n\t\t\t\t    ask = cat.ask(function (ack) {\n\t\t\t\t\tthis.off(); // One response is good enough for us currently. Later we may want to adjust this.\n\t\t\t\t\tif (!as.ack) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tas.ack(ack, this);\n\t\t\t\t}, as.opt);\n\t\t\t\tvar tmp = cat.root._.now;obj.del(cat.root._, 'now');\n\t\t\t\tas.ref._.now = true;\n\t\t\t\tas.ref._.on('out', {\n\t\t\t\t\tgun: as.ref, put: as.out = as.env.graph, opt: as.opt, '#': ask\n\t\t\t\t});\n\t\t\t\tobj.del(as.ref._, 'now');\n\t\t\t\tcat.root._.now = tmp;\n\t\t\t}, as);\n\t\t\tif (as.res) {\n\t\t\t\tas.res();\n\t\t\t}\n\t\t}function no(v, f) {\n\t\t\tif (v) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfunction map(v, f, n, at) {\n\t\t\tvar as = this;\n\t\t\tif (f || !at.path.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t(as.res || iife)(function () {\n\t\t\t\tvar path = at.path,\n\t\t\t\t    ref = as.ref,\n\t\t\t\t    opt = as.opt;\n\t\t\t\tvar i = 0,\n\t\t\t\t    l = path.length;\n\t\t\t\tfor (i; i < l; i++) {\n\t\t\t\t\tref = ref.get(path[i]);\n\t\t\t\t}\n\t\t\t\tif (as.not || Gun.node.soul(at.obj)) {\n\t\t\t\t\tvar id = Gun.node.soul(at.obj) || (ref.back('opt.uuid') || Gun.text.random)();\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\t// polyfill async uuid for SEA\n\t\t\t\t\t\t(as.stun = as.stun || {})[path] = true; // make DRY\n\t\t\t\t\t\tref.back('opt.uuid')(function (err, id) {\n\t\t\t\t\t\t\t// TODO: improve perf without anonymous callback\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn Gun.log(err);\n\t\t\t\t\t\t\t} // TODO: Handle error.\n\t\t\t\t\t\t\tref.back(-1).get(id);\n\t\t\t\t\t\t\tat.soul(id);\n\t\t\t\t\t\t\tas.stun[path] = false;\n\t\t\t\t\t\t\tas.batch();\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tref.back(-1).get(id);\n\t\t\t\t\tat.soul(id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t(as.stun = as.stun || {})[path] = true;\n\t\t\t\tref.get('_').get(soul, { as: { at: at, as: as } });\n\t\t\t}, { as: as, at: at });\n\t\t}\n\n\t\tfunction soul(at, ev) {\n\t\t\tvar as = this.as,\n\t\t\t    cat = as.at;as = as.as;\n\t\t\t//ev.stun(); // TODO: BUG!?\n\t\t\tif (!at.gun || !at.gun._.back) {\n\t\t\t\treturn;\n\t\t\t} // TODO: Handle\n\t\t\tev.off();\n\t\t\tat = at.gun._.back._; // go up 1!\n\t\t\tvar id = id || Gun.node.soul(cat.obj) || Gun.node.soul(at.put) || Gun.val.rel.is(at.put) || (as.gun.back('opt.uuid') || Gun.text.random)(); // TODO: BUG!? Do we really want the soul of the object given to us? Could that be dangerous?\n\t\t\tif (!id) {\n\t\t\t\t// polyfill async uuid for SEA\n\t\t\t\tat.gun.back('opt.uuid')(function (err, id) {\n\t\t\t\t\t// TODO: improve perf without anonymous callback\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn Gun.log(e);\n\t\t\t\t\t} // TODO: Handle error.\n\t\t\t\t\tsolve(at, id, cat, as);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsolve(at, id, cat, as);\n\t\t}\n\n\t\tfunction solve(at, id, cat, as) {\n\t\t\tat.gun.back(-1).get(id);\n\t\t\tcat.soul(id);\n\t\t\tas.stun[cat.path] = false;\n\t\t\tas.batch();\n\t\t}\n\n\t\tfunction any(at, ev) {\n\t\t\tvar as = this.as;\n\t\t\tif (!at.gun || !at.gun._) {\n\t\t\t\treturn;\n\t\t\t} // TODO: Handle\n\t\t\tif (at.err) {\n\t\t\t\t// TODO: Handle\n\t\t\t\tconsole.log(\"Please report this as an issue! Put.any.err\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar cat = at.gun._.back._,\n\t\t\t    data = cat.put,\n\t\t\t    opt = as.opt || {},\n\t\t\t    root,\n\t\t\t    tmp;\n\t\t\tif ((tmp = as.ref) && tmp._.now) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tev.off();\n\t\t\tif (as.ref !== as.gun) {\n\t\t\t\ttmp = as.gun._.get || cat.get;\n\t\t\t\tif (!tmp) {\n\t\t\t\t\t// TODO: Handle\n\t\t\t\t\tconsole.log(\"Please report this as an issue! Put.no.get\"); // TODO: BUG!??\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tas.data = obj_put({}, tmp, as.data);\n\t\t\t\ttmp = null;\n\t\t\t}\n\t\t\tif (u === data) {\n\t\t\t\tif (!cat.get) {\n\t\t\t\t\treturn;\n\t\t\t\t} // TODO: Handle\n\t\t\t\tif (!cat.soul) {\n\t\t\t\t\ttmp = cat.gun.back(function (at) {\n\t\t\t\t\t\tif (at.soul) {\n\t\t\t\t\t\t\treturn at.soul;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tas.data = obj_put({}, at.get, as.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttmp = tmp || cat.get;\n\t\t\t\tcat = cat.root.get(tmp)._;\n\t\t\t\tas.not = as.soul = tmp;\n\t\t\t\tdata = as.data;\n\t\t\t}\n\t\t\tif (!as.not && !(as.soul = Gun.node.soul(data))) {\n\t\t\t\tif (as.path && obj_is(as.data)) {\n\t\t\t\t\t// Apparently necessary\n\t\t\t\t\tas.soul = (opt.uuid || cat.root._.opt.uuid || Gun.text.random)();\n\t\t\t\t} else {\n\t\t\t\t\t//as.data = obj_put({}, as.gun._.get, as.data);\n\t\t\t\t\tas.soul = at.soul || cat.soul || (opt.uuid || cat.root._.opt.uuid || Gun.text.random)();\n\t\t\t\t}\n\t\t\t\tif (!as.soul) {\n\t\t\t\t\t// polyfill async uuid for SEA\n\t\t\t\t\tref.back('opt.uuid')(function (err, soul) {\n\t\t\t\t\t\t// TODO: improve perf without anonymous callback\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn Gun.log(err);\n\t\t\t\t\t\t} // Handle error.\n\t\t\t\t\t\tas.ref.put(as.data, as.soul = soul, as);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tas.ref.put(as.data, as.soul, as);\n\t\t}\n\t\tvar obj = Gun.obj,\n\t\t    obj_is = obj.is,\n\t\t    obj_put = obj.put,\n\t\t    obj_map = obj.map;\n\t\tvar u,\n\t\t    empty = {},\n\t\t    noop = function noop() {},\n\t\t    iife = function iife(fn, as) {\n\t\t\tfn.call(as || empty);\n\t\t};\n\t})(require, './put');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./root');\n\t\trequire('./chain');\n\t\trequire('./back');\n\t\trequire('./put');\n\t\trequire('./get');\n\t\tmodule.exports = Gun;\n\t})(require, './index');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./index');\n\t\tGun.chain.on = function (tag, arg, eas, as) {\n\t\t\tvar gun = this,\n\t\t\t    at = gun._,\n\t\t\t    tmp,\n\t\t\t    act,\n\t\t\t    _off;\n\t\t\tif (typeof tag === 'string') {\n\t\t\t\tif (!arg) {\n\t\t\t\t\treturn at.on(tag);\n\t\t\t\t}\n\t\t\t\tact = at.on(tag, arg, eas || at, as);\n\t\t\t\tif (eas && eas.gun) {\n\t\t\t\t\t(eas.subs || (eas.subs = [])).push(act);\n\t\t\t\t}\n\t\t\t\t_off = function off() {\n\t\t\t\t\tif (act && act.off) act.off();\n\t\t\t\t\t_off.off();\n\t\t\t\t};\n\t\t\t\t_off.off = gun.off.bind(gun) || noop;\n\t\t\t\tgun.off = _off;\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tvar opt = arg;\n\t\t\topt = true === opt ? { change: true } : opt || {};\n\t\t\topt.ok = tag;\n\t\t\topt.last = {};\n\t\t\tgun.get(ok, opt); // TODO: PERF! Event listener leak!!!?\n\t\t\treturn gun;\n\t\t};\n\n\t\tfunction ok(at, ev) {\n\t\t\tvar opt = this;\n\t\t\tvar gun = at.gun,\n\t\t\t    cat = gun._,\n\t\t\t    data = cat.put || at.put,\n\t\t\t    tmp = opt.last,\n\t\t\t    id = cat.id + at.get,\n\t\t\t    tmp;\n\t\t\tif (u === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (data && data[rel._] && (tmp = rel.is(data))) {\n\t\t\t\ttmp = cat.root.get(tmp)._;\n\t\t\t\tif (u === tmp.put) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdata = tmp.put;\n\t\t\t}\n\t\t\tif (opt.change) {\n\t\t\t\t// TODO: BUG? Move above the undef checks?\n\t\t\t\tdata = at.put;\n\t\t\t}\n\t\t\t// DEDUPLICATE // TODO: NEEDS WORK! BAD PROTOTYPE\n\t\t\tif (tmp.put === data && tmp.get === id && !Gun.node.soul(data)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttmp.put = data;\n\t\t\ttmp.get = id;\n\t\t\t// DEDUPLICATE // TODO: NEEDS WORK! BAD PROTOTYPE\n\t\t\tcat.last = data;\n\t\t\tif (opt.as) {\n\t\t\t\topt.ok.call(opt.as, at, ev);\n\t\t\t} else {\n\t\t\t\topt.ok.call(gun, data, at.get, at, ev);\n\t\t\t}\n\t\t}\n\n\t\tGun.chain.val = function (cb, opt) {\n\t\t\tvar gun = this,\n\t\t\t    at = gun._,\n\t\t\t    data = at.put;\n\t\t\tif (0 < at.ack && u !== data) {\n\t\t\t\t(cb || noop).call(gun, data, at.get);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tif (cb) {\n\t\t\t\t(opt = opt || {}).ok = cb;\n\t\t\t\topt.cat = at;\n\t\t\t\topt.out = { '#': Gun.text.random(9) };\n\t\t\t\tgun.get(val, { as: opt });\n\t\t\t\topt.async = true; //opt.async = at.stun? 1 : true;\n\t\t\t} else {\n\t\t\t\tGun.log.once(\"valonce\", \"Chainable val is experimental, its behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\t\tvar chain = gun.chain();\n\t\t\t\tchain._.val = gun.val(function () {\n\t\t\t\t\tchain._.on('in', gun._);\n\t\t\t\t});\n\t\t\t\treturn chain;\n\t\t\t}\n\t\t\treturn gun;\n\t\t};\n\n\t\tfunction val(msg, ev, to) {\n\t\t\tvar opt = this.as,\n\t\t\t    cat = opt.cat,\n\t\t\t    gun = msg.gun,\n\t\t\t    coat = gun._,\n\t\t\t    data = coat.put || msg.put,\n\t\t\t    tmp;\n\t\t\tif (u === data) {}\n\t\t\t//return;\n\n\t\t\t//if(coat.soul && !(0 < coat.ack)){ return }\n\t\t\tif (tmp = Gun.node.soul(data) || rel.is(data)) {\n\t\t\t\t//if(data && data[rel._] && (tmp = rel.is(data))){\n\t\t\t\ttmp = cat.root.get(tmp)._;\n\t\t\t\tif (u === tmp.put) {\n\t\t\t\t\t//} || !(0 < tmp.ack)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdata = tmp.put;\n\t\t\t}\n\t\t\tif (ev.wait) {\n\t\t\t\tclearTimeout(ev.wait);\n\t\t\t}\n\t\t\t//if(!to && (!(0 < coat.ack) || ((true === opt.async) && 0 !== opt.wait))){\n\t\t\tif (!to) {\n\t\t\t\tev.wait = setTimeout(function () {\n\t\t\t\t\tval.call({ as: opt }, msg, ev, ev.wait || 1);\n\t\t\t\t}, opt.wait || 99);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (cat.field || cat.soul) {\n\t\t\t\tif (ev.off()) {\n\t\t\t\t\treturn;\n\t\t\t\t} // if it is already off, don't call again!\n\t\t\t} else {\n\t\t\t\tif ((opt.seen = opt.seen || {})[coat.id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\topt.seen[coat.id] = true;\n\t\t\t}\n\t\t\topt.ok.call(msg.gun || opt.gun, data, msg.get);\n\t\t}\n\n\t\tGun.chain.off = function () {\n\t\t\t// make off more aggressive. Warning, it might backfire!\n\t\t\tvar gun = this,\n\t\t\t    at = gun._,\n\t\t\t    tmp;\n\t\t\tvar back = at.back || {},\n\t\t\t    cat = back._;\n\t\t\tif (!cat) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (tmp = cat.next) {\n\t\t\t\tif (tmp[at.get]) {\n\t\t\t\t\tobj_del(tmp, at.get);\n\t\t\t\t} else {}\n\t\t\t}\n\t\t\tif (tmp = cat.ask) {\n\t\t\t\tobj_del(tmp, at.get);\n\t\t\t}\n\t\t\tif (tmp = cat.put) {\n\t\t\t\tobj_del(tmp, at.get);\n\t\t\t}\n\t\t\tif (tmp = at.soul) {\n\t\t\t\tobj_del(cat.root._.graph, tmp);\n\t\t\t}\n\t\t\tif (tmp = at.map) {\n\t\t\t\tobj_map(tmp, function (at) {\n\t\t\t\t\tif (at.rel) {\n\t\t\t\t\t\tcat.root.get(at.rel).off();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (tmp = at.next) {\n\t\t\t\tobj_map(tmp, function (ref) {\n\t\t\t\t\tref.off();\n\t\t\t\t});\n\t\t\t}\n\t\t\tat.on('off', {});\n\t\t\treturn gun;\n\t\t};\n\t\tvar obj = Gun.obj,\n\t\t    obj_map = obj.map,\n\t\t    obj_has = obj.has,\n\t\t    obj_del = obj.del,\n\t\t    obj_to = obj.to;\n\t\tvar rel = Gun.val.rel;\n\t\tvar empty = {},\n\t\t    noop = function noop() {},\n\t\t    u;\n\t})(require, './on');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./index');\n\t\tGun.chain.map = function (cb, opt, t) {\n\t\t\tvar gun = this,\n\t\t\t    cat = gun._,\n\t\t\t    chain;\n\t\t\tif (!cb) {\n\t\t\t\tif (chain = cat.fields) {\n\t\t\t\t\treturn chain;\n\t\t\t\t}\n\t\t\t\tchain = cat.fields = gun.chain();\n\t\t\t\tchain._.val = gun.back('val');\n\t\t\t\tchain._.MAPOF = cat.soul;\n\t\t\t\tgun.on('in', map, chain._);\n\t\t\t\treturn chain;\n\t\t\t}\n\t\t\tGun.log.once(\"mapfn\", \"Map functions are experimental, their behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\tchain = gun.chain();\n\t\t\tgun.map().on(function (data, key, at, ev) {\n\t\t\t\tvar next = (cb || noop).call(this, data, key, at, ev);\n\t\t\t\tif (u === next) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (Gun.is(next)) {\n\t\t\t\t\tchain._.on('in', next._);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchain._.on('in', { get: key, put: next, gun: chain });\n\t\t\t});\n\t\t\treturn chain;\n\t\t};\n\t\tfunction map(msg) {\n\t\t\tif (!msg.put || Gun.val.is(msg.put)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.as.val) {\n\t\t\t\tthis.off();\n\t\t\t} // TODO: Ugly hack!\n\t\t\tobj_map(msg.put, each, { at: this.as, msg: msg });\n\t\t\tthis.to.next(msg);\n\t\t}\n\t\tfunction each(v, f) {\n\t\t\tif (n_ === f) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar msg = this.msg,\n\t\t\t    gun = msg.gun,\n\t\t\t    at = this.at,\n\t\t\t    tmp = gun.get(f)._;\n\t\t\t(tmp.echo || (tmp.echo = {}))[at.id] = at;\n\t\t}\n\t\tvar obj_map = Gun.obj.map,\n\t\t    noop = function noop() {},\n\t\t    event = { stun: noop, off: noop },\n\t\t    n_ = Gun.node._,\n\t\t    u;\n\t})(require, './map');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./index');\n\t\tGun.chain.set = function (item, cb, opt) {\n\t\t\tvar gun = this,\n\t\t\t    soul;\n\t\t\tcb = cb || function () {};\n\t\t\topt = opt || {};opt.item = opt.item || item;\n\t\t\tif (soul = Gun.node.soul(item)) {\n\t\t\t\treturn gun.set(gun.back(-1).get(soul), cb, opt);\n\t\t\t}\n\t\t\tif (!Gun.is(item)) {\n\t\t\t\tvar id = gun._.root._.opt.uuid() || Gun.state.lex() + Gun.text.random(12);\n\t\t\t\tif (Gun.obj.is(item)) {\n\t\t\t\t\treturn gun.set(gun._.root.put(item, id), cb, opt);\n\t\t\t\t}\n\t\t\t\treturn gun.get(id).put(item);\n\t\t\t}\n\t\t\titem.get('_').get(function (at, ev) {\n\t\t\t\tif (!at.gun || !at.gun._.back) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tev.off();\n\t\t\t\tat = at.gun._.back._;\n\t\t\t\tvar put = {},\n\t\t\t\t    node = at.put,\n\t\t\t\t    soul = Gun.node.soul(node);\n\t\t\t\tif (!soul) {\n\t\t\t\t\treturn cb.call(gun, { err: Gun.log('Only a node can be linked! Not \"' + node + '\"!') });\n\t\t\t\t}\n\t\t\t\tgun.put(Gun.obj.put(put, soul, Gun.val.rel.ify(soul)), cb, opt);\n\t\t\t}, { wait: 0 });\n\t\t\treturn item;\n\t\t};\n\t})(require, './set');\n\n\t;require(function (module) {\n\t\tif (typeof Gun === 'undefined') {\n\t\t\treturn;\n\t\t} // TODO: localStorage is Browser only. But it would be nice if it could somehow plugin into NodeJS compatible localStorage APIs?\n\n\t\tvar root,\n\t\t    noop = function noop() {},\n\t\t    u;\n\t\tif (typeof window !== 'undefined') {\n\t\t\troot = window;\n\t\t}\n\t\tvar store = root.localStorage || { setItem: noop, removeItem: noop, getItem: noop };\n\n\t\t/*\r\n  \tNOTE: Both `lib/file.js` and `lib/memdisk.js` are based on this design!\r\n  \tIf you update anything here, consider updating the other adapters as well.\r\n  */\n\n\t\tGun.on('opt', function (root) {\n\t\t\tthis.to.next(root);\n\t\t\tvar opt = root.opt;\n\t\t\tif (root.once) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (false === opt.localStorage) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\topt.file = opt.file || opt.prefix || 'gun/'; // support old option name.\n\t\t\tvar graph = root.graph,\n\t\t\t    acks = {},\n\t\t\t    count = 0,\n\t\t\t    to;\n\t\t\tvar disk = Gun.obj.ify(store.getItem(opt.file)) || {};\n\n\t\t\troot.on('put', function (at) {\n\t\t\t\tthis.to.next(at);\n\t\t\t\tGun.graph.is(at.put, null, map);\n\t\t\t\tif (!at['@']) {\n\t\t\t\t\tacks[at['#']] = true;\n\t\t\t\t} // only ack non-acks.\n\t\t\t\tcount += 1;\n\t\t\t\tif (count >= (opt.batch || 1000)) {\n\t\t\t\t\treturn flush();\n\t\t\t\t}\n\t\t\t\tif (to) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tto = setTimeout(flush, opt.wait || 1);\n\t\t\t});\n\n\t\t\troot.on('get', function (at) {\n\t\t\t\tthis.to.next(at);\n\t\t\t\tvar lex = at.get,\n\t\t\t\t    soul,\n\t\t\t\t    data,\n\t\t\t\t    u;\n\t\t\t\t//setTimeout(function(){\n\t\t\t\tif (!lex || !(soul = lex[Gun._.soul])) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//if(0 >= at.cap){ return }\n\t\t\t\tvar field = lex['.'];\n\t\t\t\tdata = disk[soul] || u;\n\t\t\t\tif (data && field) {\n\t\t\t\t\tdata = Gun.state.to(data, field);\n\t\t\t\t}\n\t\t\t\tif (!data && !Gun.obj.empty(opt.peers)) {\n\t\t\t\t\t// if data not found, don't ack if there are peers.\n\t\t\t\t\treturn; // Hmm, what if we have peers but we are disconnected?\n\t\t\t\t}\n\t\t\t\troot.on('in', { '@': at['#'], put: Gun.graph.node(data), how: 'lS' });\n\t\t\t\t//},1);\n\t\t\t});\n\n\t\t\tvar map = function map(val, key, node, soul) {\n\t\t\t\tdisk[soul] = Gun.state.to(node, key, disk[soul]);\n\t\t\t};\n\n\t\t\tvar flush = function flush() {\n\t\t\t\tvar err;\n\t\t\t\tcount = 0;\n\t\t\t\tclearTimeout(to);\n\t\t\t\tto = false;\n\t\t\t\tvar ack = acks;\n\t\t\t\tacks = {};\n\t\t\t\ttry {\n\t\t\t\t\tstore.setItem(opt.file, JSON.stringify(disk));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tGun.log(err = e || \"localStorage failure\");\n\t\t\t\t}\n\t\t\t\tif (!err && !Gun.obj.empty(opt.peers)) {\n\t\t\t\t\treturn;\n\t\t\t\t} // only ack if there are no peers.\n\t\t\t\tGun.obj.map(ack, function (yes, id) {\n\t\t\t\t\troot.on('in', {\n\t\t\t\t\t\t'@': id,\n\t\t\t\t\t\terr: err,\n\t\t\t\t\t\tok: 0 // localStorage isn't reliable, so make its `ok` code be a low number.\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t})(require, './adapters/localStorage');\n\n\t;require(function (module) {\n\t\tvar Gun = require('./index');\n\t\tvar websocket;\n\t\tif (typeof WebSocket !== 'undefined') {\n\t\t\twebsocket = WebSocket;\n\t\t} else {\n\t\t\tif (typeof webkitWebSocket !== 'undefined') {\n\t\t\t\twebsocket = webkitWebSocket;\n\t\t\t}\n\t\t\tif (typeof mozWebSocket !== 'undefined') {\n\t\t\t\twebsocket = mozWebSocket;\n\t\t\t}\n\t\t}\n\n\t\tGun.on('opt', function (root) {\n\t\t\tthis.to.next(root);\n\t\t\tvar opt = root.opt;\n\t\t\tif (root.once) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!websocket || false === opt.WebSocket) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ws = opt.ws || (opt.ws = {});ws.who = 0;\n\t\t\tGun.obj.map(opt.peers, function () {\n\t\t\t\t++ws.who;\n\t\t\t});\n\t\t\tif (root.once) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar batch;\n\n\t\t\troot.on('out', function (at) {\n\t\t\t\tthis.to.next(at);\n\t\t\t\tif (at.ws && 1 == ws.who) {\n\t\t\t\t\treturn;\n\t\t\t\t} // performance hack for reducing echoes.\n\t\t\t\tbatch = JSON.stringify(at);\n\t\t\t\tif (ws.drain) {\n\t\t\t\t\tws.drain.push(batch);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tws.drain = [];\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (!ws.drain) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar tmp = ws.drain;\n\t\t\t\t\tws.drain = null;\n\t\t\t\t\tif (!tmp.length) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbatch = JSON.stringify(tmp);\n\t\t\t\t\tGun.obj.map(opt.peers, send, root);\n\t\t\t\t}, opt.wait || 1);\n\t\t\t\tGun.obj.map(opt.peers, send, root);\n\t\t\t});\n\t\t\tfunction send(peer) {\n\t\t\t\tvar root = this,\n\t\t\t\t    msg = batch;\n\t\t\t\tvar wire = peer.wire || open(peer, root);\n\t\t\t\tif (!wire) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (wire.readyState === wire.OPEN) {\n\t\t\t\t\twire.send(msg);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t(peer.queue = peer.queue || []).push(msg);\n\t\t\t}\n\t\t\tfunction receive(msg, peer, root) {\n\t\t\t\tif (!root || !msg) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tmsg = JSON.parse(msg.data || msg);\n\t\t\t\t} catch (e) {}\n\t\t\t\tif (msg instanceof Array) {\n\t\t\t\t\tvar i = 0,\n\t\t\t\t\t    m;\n\t\t\t\t\twhile (m = msg[i++]) {\n\t\t\t\t\t\treceive(m, peer, root);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (1 == ws.who) {\n\t\t\t\t\tmsg.ws = noop;\n\t\t\t\t} // If there is only 1 client, just use noop since it doesn't matter.\n\t\t\t\troot.on('in', msg);\n\t\t\t}\n\t\t\tfunction open(peer, as) {\n\t\t\t\tif (!peer || !peer.url) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar url = peer.url.replace('http', 'ws');\n\t\t\t\tvar wire = peer.wire = new websocket(url);\n\t\t\t\twire.onclose = function () {\n\t\t\t\t\troot.on('bye', peer);\n\t\t\t\t\treconnect(peer, as);\n\t\t\t\t};\n\t\t\t\twire.onerror = function (error) {\n\t\t\t\t\treconnect(peer, as); // placement?\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (error.code === 'ECONNREFUSED') {\n\t\t\t\t\t\t//reconnect(peer, as);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\twire.onopen = function () {\n\t\t\t\t\troot.on('hi', peer);\n\t\t\t\t\tvar queue = peer.queue;\n\t\t\t\t\tpeer.queue = [];\n\t\t\t\t\tGun.obj.map(queue, function (msg) {\n\t\t\t\t\t\tbatch = msg;\n\t\t\t\t\t\tsend.call(as, peer);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\twire.onmessage = function (msg) {\n\t\t\t\t\treceive(msg, peer, as); // diff: peer not wire!\n\t\t\t\t};\n\t\t\t\treturn wire;\n\t\t\t}\n\t\t\tfunction reconnect(peer, as) {\n\t\t\t\tclearTimeout(peer.defer);\n\t\t\t\tpeer.defer = setTimeout(function () {\n\t\t\t\t\topen(peer, as);\n\t\t\t\t}, 2 * 1000);\n\t\t\t}\n\t\t});\n\t\tvar noop = function noop() {};\n\t})(require, './adapters/websocket');\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"h6ac\"), __webpack_require__(\"l262\")(module)))\n\n/***/ }),\n\n/***/ \"WScg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Chat; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact__ = __webpack_require__(\"KM04\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_preact__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gun_gun__ = __webpack_require__(\"R2pP\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_gun_gun___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_gun_gun__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style__ = __webpack_require__(\"dKk8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar GUN_URL = 'https://gun-dearwafeum.now.sh/gun';\n// GUN_URL = 'https://gunjs.herokuapp.com/gun'\n// this.gun = Gun([location.origin, 'gun'].join('/'))\n\nvar formatNotes = function formatNotes(notes) {\n\treturn Object.keys(notes).map(function (key) {\n\t\treturn _extends({ key: key }, notes[key]);\n\t}).filter(function (m) {\n\t\treturn Boolean(m.when) && m.key !== '_';\n\t}).sort(function (a, b) {\n\t\treturn a.when - b.when;\n\t}).map(function (m) {\n\t\treturn m.whenFmt = new Date(m.when).toLocaleString().toLowerCase(), m;\n\t});\n};\n\nvar Chat = function (_Component) {\n\t_inherits(Chat, _Component);\n\n\tfunction Chat(props) {\n\t\t_classCallCheck(this, Chat);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {\n\t\t\tnewNote: '',\n\t\t\tname: (document.cookie.match(/alias\\=(.*?)(\\&|$|\\;)/i) || [])[1] || '',\n\t\t\tnotes: {}\n\t\t};\n\n\t\t_this.handleChange = function (key) {\n\t\t\treturn function (e) {\n\t\t\t\tvar _this$setState;\n\n\t\t\t\treturn _this.setState((_this$setState = {}, _this$setState[key] = e.target.value, _this$setState));\n\t\t\t};\n\t\t};\n\n\t\t_this.gun = __WEBPACK_IMPORTED_MODULE_1_gun_gun___default()(GUN_URL).get(_this.props.db).get('notes');\n\t\tif (typeof window !== 'undefined') window.gun = _this.gun;\n\n\t\t_this.send = _this.send.bind(_this);\n\t\treturn _this;\n\t}\n\n\tChat.prototype.componentWillMount = function componentWillMount() {\n\t\tvar _this2 = this;\n\n\t\tvar tmpState = {};\n\n\t\tthis.gun.map().val(function (note, key) {\n\t\t\ttmpState[key] = note;\n\t\t\t_this2.setState({ notes: _extends({}, _this2.state.notes, tmpState) });\n\t\t});\n\t};\n\n\tChat.prototype.send = function send(e) {\n\t\te.preventDefault();\n\t\tvar who = this.state.name || 'user' + __WEBPACK_IMPORTED_MODULE_1_gun_gun___default.a.text.random(6);\n\t\tthis.setState({ name: who });\n\t\tdocument.cookie = 'alias=' + who;\n\t\tvar when = __WEBPACK_IMPORTED_MODULE_1_gun_gun___default.a.time.is();\n\t\tvar key = when + '_' + __WEBPACK_IMPORTED_MODULE_1_gun_gun___default.a.text.random(4);\n\t\tthis.gun.get(key).put({\n\t\t\twho: who,\n\t\t\twhen: when,\n\t\t\twhat: this.state.newNote\n\t\t});\n\t\tthis.setState({ newNote: '' });\n\t};\n\n\tChat.prototype.render = function render(_ref) {\n\t\tvar db = _ref.db;\n\n\t\tvar notes = formatNotes(this.state.notes);\n\n\t\treturn Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t'div',\n\t\t\t{ 'class': __WEBPACK_IMPORTED_MODULE_2__style___default.a.home },\n\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t'h1',\n\t\t\t\tnull,\n\t\t\t\t'db: ',\n\t\t\t\tdb\n\t\t\t),\n\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t'ul',\n\t\t\t\tnull,\n\t\t\t\tnotes.map(function (note) {\n\t\t\t\t\treturn Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\t{ key: note.key },\n\t\t\t\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t\t\t\t'b',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tnote.who,\n\t\t\t\t\t\t\t':'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\tnote.what,\n\t\t\t\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\t{ className: 'when' },\n\t\t\t\t\t\t\tnote.whenFmt\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t),\n\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t'form',\n\t\t\t\t{ onSubmit: this.send },\n\t\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])('input', { placeholder: 'username', value: this.state.name, className: 'who', onChange: this.handleChange('name') }),\n\t\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])('textarea', { placeholder: 'note', value: this.state.newNote, className: 'what', onChange: this.handleChange('newNote') }),\n\t\t\t\tObject(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n\t\t\t\t\t'button',\n\t\t\t\t\t{ onClick: this.send },\n\t\t\t\t\t'Send'\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\treturn Chat;\n}(__WEBPACK_IMPORTED_MODULE_0_preact__[\"Component\"]);\n\n\n\n/***/ }),\n\n/***/ \"dKk8\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"home\":\"home__3G66z\"};\n\n/***/ }),\n\n/***/ \"h6ac\":\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n\n/***/ \"l262\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-chat.chunk.86663.js",";(function(){\r\n\r\n\t/* UNBUILD */\r\n\tvar root;\r\n\tif(typeof window !== \"undefined\"){ root = window }\r\n\tif(typeof global !== \"undefined\"){ root = global }\r\n\troot = root || {};\r\n\tvar console = root.console || {log: function(){}};\r\n\tfunction require(arg){\r\n\t\treturn arg.slice? require[resolve(arg)] : function(mod, path){\r\n\t\t\targ(mod = {exports: {}});\r\n\t\t\trequire[resolve(path)] = mod.exports;\r\n\t\t}\r\n\t\tfunction resolve(path){\r\n\t\t\treturn path.split('/').slice(-1).toString().replace('.js','');\r\n\t\t}\r\n\t}\r\n\tif(typeof module !== \"undefined\"){ var common = module }\r\n\t/* UNBUILD */\r\n\r\n\t;require(function(module){\r\n\t\t// Generic javascript utilities.\r\n\t\tvar Type = {};\r\n\t\t//Type.fns = Type.fn = {is: function(fn){ return (!!fn && fn instanceof Function) }}\r\n\t\tType.fns = Type.fn = {is: function(fn){ return (!!fn && 'function' == typeof fn) }}\r\n\t\tType.bi = {is: function(b){ return (b instanceof Boolean || typeof b == 'boolean') }}\r\n\t\tType.num = {is: function(n){ return !list_is(n) && ((n - parseFloat(n) + 1) >= 0 || Infinity === n || -Infinity === n) }}\r\n\t\tType.text = {is: function(t){ return (typeof t == 'string') }}\r\n\t\tType.text.ify = function(t){\r\n\t\t\tif(Type.text.is(t)){ return t }\r\n\t\t\tif(typeof JSON !== \"undefined\"){ return JSON.stringify(t) }\r\n\t\t\treturn (t && t.toString)? t.toString() : t;\r\n\t\t}\r\n\t\tType.text.random = function(l, c){\r\n\t\t\tvar s = '';\r\n\t\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\r\n\t\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\r\n\t\t\twhile(l > 0){ s += c.charAt(Math.floor(Math.random() * c.length)); l-- }\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\tType.text.match = function(t, o){ var r = false;\r\n\t\t\tt = t || '';\r\n\t\t\to = Type.text.is(o)? {'=': o} : o || {}; // {'~', '=', '*', '<', '>', '+', '-', '?', '!'} // ignore case, exactly equal, anything after, lexically larger, lexically lesser, added in, subtacted from, questionable fuzzy match, and ends with.\r\n\t\t\tif(Type.obj.has(o,'~')){ t = t.toLowerCase(); o['='] = (o['='] || o['~']).toLowerCase() }\r\n\t\t\tif(Type.obj.has(o,'=')){ return t === o['='] }\r\n\t\t\tif(Type.obj.has(o,'*')){ if(t.slice(0, o['*'].length) === o['*']){ r = true; t = t.slice(o['*'].length) } else { return false }}\r\n\t\t\tif(Type.obj.has(o,'!')){ if(t.slice(-o['!'].length) === o['!']){ r = true } else { return false }}\r\n\t\t\tif(Type.obj.has(o,'+')){\r\n\t\t\t\tif(Type.list.map(Type.list.is(o['+'])? o['+'] : [o['+']], function(m){\r\n\t\t\t\t\tif(t.indexOf(m) >= 0){ r = true } else { return true }\r\n\t\t\t\t})){ return false }\r\n\t\t\t}\r\n\t\t\tif(Type.obj.has(o,'-')){\r\n\t\t\t\tif(Type.list.map(Type.list.is(o['-'])? o['-'] : [o['-']], function(m){\r\n\t\t\t\t\tif(t.indexOf(m) < 0){ r = true } else { return true }\r\n\t\t\t\t})){ return false }\r\n\t\t\t}\r\n\t\t\tif(Type.obj.has(o,'>')){ if(t > o['>']){ r = true } else { return false }}\r\n\t\t\tif(Type.obj.has(o,'<')){ if(t < o['<']){ r = true } else { return false }}\r\n\t\t\tfunction fuzzy(t,f){ var n = -1, i = 0, c; for(;c = f[i++];){ if(!~(n = t.indexOf(c, n+1))){ return false }} return true } // via http://stackoverflow.com/questions/9206013/javascript-fuzzy-search\r\n\t\t\tif(Type.obj.has(o,'?')){ if(fuzzy(t, o['?'])){ r = true } else { return false }} // change name!\r\n\t\t\treturn r;\r\n\t\t}\r\n\t\tType.list = {is: function(l){ return (l instanceof Array) }}\r\n\t\tType.list.slit = Array.prototype.slice;\r\n\t\tType.list.sort = function(k){ // creates a new sort function based off some field\r\n\t\t\treturn function(A,B){\r\n\t\t\t\tif(!A || !B){ return 0 } A = A[k]; B = B[k];\r\n\t\t\t\tif(A < B){ return -1 }else if(A > B){ return 1 }\r\n\t\t\t\telse { return 0 }\r\n\t\t\t}\r\n\t\t}\r\n\t\tType.list.map = function(l, c, _){ return obj_map(l, c, _) }\r\n\t\tType.list.index = 1; // change this to 0 if you want non-logical, non-mathematical, non-matrix, non-convenient array notation\r\n\t\tType.obj = {is: function(o){ return o? (o instanceof Object && o.constructor === Object) || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false }}\r\n\t\tType.obj.put = function(o, f, v){ return (o||{})[f] = v, o }\r\n\t\tType.obj.has = function(o, f){ return o && Object.prototype.hasOwnProperty.call(o, f) }\r\n\t\tType.obj.del = function(o, k){\r\n\t\t\tif(!o){ return }\r\n\t\t\to[k] = null;\r\n\t\t\tdelete o[k];\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\tType.obj.as = function(o, f, v, u){ return o[f] = o[f] || (u === v? {} : v) }\r\n\t\tType.obj.ify = function(o){\r\n\t\t\tif(obj_is(o)){ return o }\r\n\t\t\ttry{o = JSON.parse(o);\r\n\t\t\t}catch(e){o={}};\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\t;(function(){ var u;\r\n\t\t\tfunction map(v,f){\r\n\t\t\t\tif(obj_has(this,f) && u !== this[f]){ return }\r\n\t\t\t\tthis[f] = v;\r\n\t\t\t}\r\n\t\t\tType.obj.to = function(from, to){\r\n\t\t\t\tto = to || {};\r\n\t\t\t\tobj_map(from, map, to);\r\n\t\t\t\treturn to;\r\n\t\t\t}\r\n\t\t}());\r\n\t\tType.obj.copy = function(o){ // because http://web.archive.org/web/20140328224025/http://jsperf.com/cloning-an-object/2\r\n\t\t\treturn !o? o : JSON.parse(JSON.stringify(o)); // is shockingly faster than anything else, and our data has to be a subset of JSON anyways!\r\n\t\t}\r\n\t\t;(function(){\r\n\t\t\tfunction empty(v,i){ var n = this.n;\r\n\t\t\t\tif(n && (i === n || (obj_is(n) && obj_has(n, i)))){ return }\r\n\t\t\t\tif(i){ return true }\r\n\t\t\t}\r\n\t\t\tType.obj.empty = function(o, n){\r\n\t\t\t\tif(!o){ return true }\r\n\t\t\t\treturn obj_map(o,empty,{n:n})? false : true;\r\n\t\t\t}\r\n\t\t}());\r\n\t\t;(function(){\r\n\t\t\tfunction t(k,v){\r\n\t\t\t\tif(2 === arguments.length){\r\n\t\t\t\t\tt.r = t.r || {};\r\n\t\t\t\t\tt.r[k] = v;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} t.r = t.r || [];\r\n\t\t\t\tt.r.push(k);\r\n\t\t\t};\r\n\t\t\tvar keys = Object.keys;\r\n\t\t\tType.obj.map = function(l, c, _){\r\n\t\t\t\tvar u, i = 0, x, r, ll, lle, f = fn_is(c);\r\n\t\t\t\tt.r = null;\r\n\t\t\t\tif(keys && obj_is(l)){\r\n\t\t\t\t\tll = keys(l); lle = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(list_is(l) || ll){\r\n\t\t\t\t\tx = (ll || l).length;\r\n\t\t\t\t\tfor(;i < x; i++){\r\n\t\t\t\t\t\tvar ii = (i + Type.list.index);\r\n\t\t\t\t\t\tif(f){\r\n\t\t\t\t\t\t\tr = lle? c.call(_ || this, l[ll[i]], ll[i], t) : c.call(_ || this, l[i], ii, t);\r\n\t\t\t\t\t\t\tif(r !== u){ return r }\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//if(Type.test.is(c,l[i])){ return ii } // should implement deep equality testing!\r\n\t\t\t\t\t\t\tif(c === l[lle? ll[i] : i]){ return ll? ll[i] : ii } // use this for now\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor(i in l){\r\n\t\t\t\t\t\tif(f){\r\n\t\t\t\t\t\t\tif(obj_has(l,i)){\r\n\t\t\t\t\t\t\t\tr = _? c.call(_, l[i], i, t) : c(l[i], i, t);\r\n\t\t\t\t\t\t\t\tif(r !== u){ return r }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//if(a.test.is(c,l[i])){ return i } // should implement deep equality testing!\r\n\t\t\t\t\t\t\tif(c === l[i]){ return i } // use this for now\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn f? t.r : Type.list.index? 0 : -1;\r\n\t\t\t}\r\n\t\t}());\r\n\t\tType.time = {};\r\n\t\tType.time.is = function(t){ return t? t instanceof Date : (+new Date().getTime()) }\r\n\r\n\t\tvar fn_is = Type.fn.is;\r\n\t\tvar list_is = Type.list.is;\r\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_has = obj.has, obj_map = obj.map;\r\n\t\tmodule.exports = Type;\r\n\t})(require, './type');\r\n\r\n\t;require(function(module){\r\n\t\t// On event emitter generic javascript utility.\r\n\t\tmodule.exports = function onto(tag, arg, as){\r\n\t\t\tif(!tag){ return {to: onto} }\r\n\t\t\tvar tag = (this.tag || (this.tag = {}))[tag] ||\r\n\t\t\t(this.tag[tag] = {tag: tag, to: onto._ = {\r\n\t\t\t\tnext: function(){}\r\n\t\t\t}});\r\n\t\t\tif(arg instanceof Function){\r\n\t\t\t\tvar be = {\r\n\t\t\t\t\toff: onto.off || \r\n\t\t\t\t\t(onto.off = function(){\r\n\t\t\t\t\t\tif(this.next === onto._.next){ return !0 }\r\n\t\t\t\t\t\tif(this === this.the.last){\r\n\t\t\t\t\t\t\tthis.the.last = this.back;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.to.back = this.back;\r\n\t\t\t\t\t\tthis.next = onto._.next;\r\n\t\t\t\t\t\tthis.back.to = this.to;\r\n\t\t\t\t\t\tif(this.the.last === this.the){\r\n\t\t\t\t\t\t\tdelete this.on.tag[this.the.tag];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tto: onto._,\r\n\t\t\t\t\tnext: arg,\r\n\t\t\t\t\tthe: tag,\r\n\t\t\t\t\ton: this,\r\n\t\t\t\t\tas: as,\r\n\t\t\t\t};\r\n\t\t\t\t(be.back = tag.last || tag).to = be;\r\n\t\t\t\treturn tag.last = be;\r\n\t\t\t}\r\n\t\t\t(tag = tag.to).next(arg);\r\n\t\t\treturn tag;\r\n\t\t};\r\n\t})(require, './onto');\r\n\r\n\t;require(function(module){\r\n\t\t/* Based on the Hypothetical Amnesia Machine thought experiment */\r\n\t\tfunction HAM(machineState, incomingState, currentState, incomingValue, currentValue){\r\n\t\t\tif(machineState < incomingState){\r\n\t\t\t\treturn {defer: true}; // the incoming value is outside the boundary of the machine's state, it must be reprocessed in another state.\r\n\t\t\t}\r\n\t\t\tif(incomingState < currentState){\r\n\t\t\t\treturn {historical: true}; // the incoming value is within the boundary of the machine's state, but not within the range.\r\n\r\n\t\t\t}\r\n\t\t\tif(currentState < incomingState){\r\n\t\t\t\treturn {converge: true, incoming: true}; // the incoming value is within both the boundary and the range of the machine's state.\r\n\r\n\t\t\t}\r\n\t\t\tif(incomingState === currentState){\r\n\t\t\t\tincomingValue = Lexical(incomingValue) || \"\";\r\n\t\t\t\tcurrentValue = Lexical(currentValue) || \"\";\r\n\t\t\t\tif(incomingValue === currentValue){ // Note: while these are practically the same, the deltas could be technically different\r\n\t\t\t\t\treturn {state: true};\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t\tThe following is a naive implementation, but will always work.\r\n\t\t\t\t\tNever change it unless you have specific needs that absolutely require it.\r\n\t\t\t\t\tIf changed, your data will diverge unless you guarantee every peer's algorithm has also been changed to be the same.\r\n\t\t\t\t\tAs a result, it is highly discouraged to modify despite the fact that it is naive,\r\n\t\t\t\t\tbecause convergence (data integrity) is generally more important.\r\n\t\t\t\t\tAny difference in this algorithm must be given a new and different name.\r\n\t\t\t\t*/\r\n\t\t\t\tif(incomingValue < currentValue){ // Lexical only works on simple value types!\r\n\t\t\t\t\treturn {converge: true, current: true};\r\n\t\t\t\t}\r\n\t\t\t\tif(currentValue < incomingValue){ // Lexical only works on simple value types!\r\n\t\t\t\t\treturn {converge: true, incoming: true};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {err: \"Invalid CRDT Data: \"+ incomingValue +\" to \"+ currentValue +\" at \"+ incomingState +\" to \"+ currentState +\"!\"};\r\n\t\t}\r\n\t\tif(typeof JSON === 'undefined'){\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'JSON is not included in this browser. Please load it first: ' +\r\n\t\t\t\t'ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js'\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar Lexical = JSON.stringify, undefined;\r\n\t\tmodule.exports = HAM;\r\n\t})(require, './HAM');\r\n\r\n\t;require(function(module){\r\n\t\tvar Type = require('./type');\r\n\t\tvar Val = {};\r\n\t\tVal.is = function(v){ // Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\r\n\t\t\tif(v === u){ return false }\r\n\t\t\tif(v === null){ return true } // \"deletes\", nulling out fields.\r\n\t\t\tif(v === Infinity){ return false } // we want this to be, but JSON does not support it, sad face.\r\n\t\t\tif(text_is(v) // by \"text\" we mean strings.\r\n\t\t\t|| bi_is(v) // by \"binary\" we mean boolean.\r\n\t\t\t|| num_is(v)){ // by \"number\" we mean integers or decimals. \r\n\t\t\t\treturn true; // simple values are valid.\r\n\t\t\t}\r\n\t\t\treturn Val.rel.is(v) || false; // is the value a soul relation? Then it is valid and return it. If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\r\n\t\t}\r\n\t\tVal.rel = {_: '#'};\r\n\t\t;(function(){\r\n\t\t\tVal.rel.is = function(v){ // this defines whether an object is a soul relation or not, they look like this: {'#': 'UUID'}\r\n\t\t\t\tif(v && v[rel_] && !v._ && obj_is(v)){ // must be an object.\r\n\t\t\t\t\tvar o = {};\r\n\t\t\t\t\tobj_map(v, map, o);\r\n\t\t\t\t\tif(o.id){ // a valid id was found.\r\n\t\t\t\t\t\treturn o.id; // yay! Return it.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // the value was not a valid soul relation.\r\n\t\t\t}\r\n\t\t\tfunction map(s, f){ var o = this; // map over the object...\r\n\t\t\t\tif(o.id){ return o.id = false } // if ID is already defined AND we're still looping through the object, it is considered invalid.\r\n\t\t\t\tif(f == rel_ && text_is(s)){ // the field should be '#' and have a text value.\r\n\t\t\t\t\to.id = s; // we found the soul!\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn o.id = false; // if there exists anything else on the object that isn't the soul, then it is considered invalid.\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}());\r\n\t\tVal.rel.ify = function(t){ return obj_put({}, rel_, t) } // convert a soul into a relation and return it.\r\n\t\tvar rel_ = Val.rel._, u;\r\n\t\tvar bi_is = Type.bi.is;\r\n\t\tvar num_is = Type.num.is;\r\n\t\tvar text_is = Type.text.is;\r\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map;\r\n\t\tmodule.exports = Val;\r\n\t})(require, './val');\r\n\r\n\t;require(function(module){\r\n\t\tvar Type = require('./type');\r\n\t\tvar Val = require('./val');\r\n\t\tvar Node = {_: '_'};\r\n\t\tNode.soul = function(n, o){ return (n && n._ && n._[o || soul_]) } // convenience function to check to see if there is a soul on a node and return it.\r\n\t\tNode.soul.ify = function(n, o){ // put a soul on an object.\r\n\t\t\to = (typeof o === 'string')? {soul: o} : o || {};\r\n\t\t\tn = n || {}; // make sure it exists.\r\n\t\t\tn._ = n._ || {}; // make sure meta exists.\r\n\t\t\tn._[soul_] = o.soul || n._[soul_] || text_random(); // put the soul on it.\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tNode.soul._ = Val.rel._;\r\n\t\t;(function(){\r\n\t\t\tNode.is = function(n, cb, as){ var s; // checks to see if an object is a valid node.\r\n\t\t\t\tif(!obj_is(n)){ return false } // must be an object.\r\n\t\t\t\tif(s = Node.soul(n)){ // must have a soul on it.\r\n\t\t\t\t\treturn !obj_map(n, map, {as:as,cb:cb,s:s,n:n});\r\n\t\t\t\t}\r\n\t\t\t\treturn false; // nope! This was not a valid node.\r\n\t\t\t}\r\n\t\t\tfunction map(v, f){ // we invert this because the way we check for this is via a negation.\r\n\t\t\t\tif(f === Node._){ return } // skip over the metadata.\r\n\t\t\t\tif(!Val.is(v)){ return true } // it is true that this is an invalid node.\r\n\t\t\t\tif(this.cb){ this.cb.call(this.as, v, f, this.n, this.s) } // optionally callback each field/value.\r\n\t\t\t}\r\n\t\t}());\r\n\t\t;(function(){\r\n\t\t\tNode.ify = function(obj, o, as){ // returns a node from a shallow object.\r\n\t\t\t\tif(!o){ o = {} }\r\n\t\t\t\telse if(typeof o === 'string'){ o = {soul: o} }\r\n\t\t\t\telse if(o instanceof Function){ o = {map: o} }\r\n\t\t\t\tif(o.map){ o.node = o.map.call(as, obj, u, o.node || {}) }\r\n\t\t\t\tif(o.node = Node.soul.ify(o.node || {}, o)){\r\n\t\t\t\t\tobj_map(obj, map, {o:o,as:as});\r\n\t\t\t\t}\r\n\t\t\t\treturn o.node; // This will only be a valid node if the object wasn't already deep!\r\n\t\t\t}\r\n\t\t\tfunction map(v, f){ var o = this.o, tmp, u; // iterate over each field/value.\r\n\t\t\t\tif(o.map){\r\n\t\t\t\t\ttmp = o.map.call(this.as, v, ''+f, o.node);\r\n\t\t\t\t\tif(u === tmp){\r\n\t\t\t\t\t\tobj_del(o.node, f);\r\n\t\t\t\t\t} else\r\n\t\t\t\t\tif(o.node){ o.node[f] = tmp }\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(Val.is(v)){\r\n\t\t\t\t\to.node[f] = v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}());\r\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_map = obj.map;\r\n\t\tvar text = Type.text, text_random = text.random;\r\n\t\tvar soul_ = Node.soul._;\r\n\t\tvar u;\r\n\t\tmodule.exports = Node;\r\n\t})(require, './node');\r\n\r\n\t;require(function(module){\r\n\t\tvar Type = require('./type');\r\n\t\tvar Node = require('./node');\r\n\t\tfunction State(){\r\n\t\t\tvar t;\r\n\t\t\tif(perf){\r\n\t\t\t\tt = start + perf.now();\r\n\t\t\t} else {\r\n\t\t\t\tt = time();\r\n\t\t\t}\r\n\t\t\tif(last < t){\r\n\t\t\t\treturn N = 0, last = t + State.drift;\r\n\t\t\t}\r\n\t\t\treturn last = t + ((N += 1) / D) + State.drift;\r\n\t\t}\r\n\t\tvar time = Type.time.is, last = -Infinity, N = 0, D = 1000; // WARNING! In the future, on machines that are D times faster than 2016AD machines, you will want to increase D by another several orders of magnitude so the processing speed never out paces the decimal resolution (increasing an integer effects the state accuracy).\r\n\t\tvar perf = (typeof performance !== 'undefined')? (performance.timing && performance) : false, start = (perf && perf.timing && perf.timing.navigationStart) || (perf = false);\r\n\t\tState._ = '>';\r\n\t\tState.drift = 0;\r\n\t\tState.is = function(n, f, o){ // convenience function to get the state on a field on a node and return it.\r\n\t\t\tvar tmp = (f && n && n[N_] && n[N_][State._]) || o;\r\n\t\t\tif(!tmp){ return }\r\n\t\t\treturn num_is(tmp = tmp[f])? tmp : -Infinity;\r\n\t\t}\r\n\t\tState.lex = function(){ return State().toString(36).replace('.','') }\r\n\t\tState.ify = function(n, f, s, v, soul){ // put a field's state on a node.\r\n\t\t\tif(!n || !n[N_]){ // reject if it is not node-like.\r\n\t\t\t\tif(!soul){ // unless they passed a soul\r\n\t\t\t\t\treturn; \r\n\t\t\t\t}\r\n\t\t\t\tn = Node.soul.ify(n, soul); // then make it so!\r\n\t\t\t} \r\n\t\t\tvar tmp = obj_as(n[N_], State._); // grab the states data.\r\n\t\t\tif(u !== f && f !== N_){\r\n\t\t\t\tif(num_is(s)){\r\n\t\t\t\t\ttmp[f] = s; // add the valid state.\r\n\t\t\t\t}\r\n\t\t\t\tif(u !== v){ // Note: Not its job to check for valid values!\r\n\t\t\t\t\tn[f] = v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tState.to = function(from, f, to){\r\n\t\t\tvar val = from[f];\r\n\t\t\tif(obj_is(val)){\r\n\t\t\t\tval = obj_copy(val);\r\n\t\t\t}\r\n\t\t\treturn State.ify(to, f, State.is(from, f), val, Node.soul(from));\r\n\t\t}\r\n\t\t;(function(){\r\n\t\t\tState.map = function(cb, s, as){ var u; // for use with Node.ify\r\n\t\t\t\tvar o = obj_is(o = cb || s)? o : null;\r\n\t\t\t\tcb = fn_is(cb = cb || s)? cb : null;\r\n\t\t\t\tif(o && !cb){\r\n\t\t\t\t\ts = num_is(s)? s : State();\r\n\t\t\t\t\to[N_] = o[N_] || {};\r\n\t\t\t\t\tobj_map(o, map, {o:o,s:s});\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t}\r\n\t\t\t\tas = as || obj_is(s)? s : u;\r\n\t\t\t\ts = num_is(s)? s : State();\r\n\t\t\t\treturn function(v, f, o, opt){\r\n\t\t\t\t\tif(!cb){\r\n\t\t\t\t\t\tmap.call({o: o, s: s}, v,f);\r\n\t\t\t\t\t\treturn v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcb.call(as || this || {}, v, f, o, opt);\r\n\t\t\t\t\tif(obj_has(o,f) && u === o[f]){ return }\r\n\t\t\t\t\tmap.call({o: o, s: s}, v,f);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction map(v,f){\r\n\t\t\t\tif(N_ === f){ return }\r\n\t\t\t\tState.ify(this.o, f, this.s) ;\r\n\t\t\t}\r\n\t\t}());\r\n\t\tvar obj = Type.obj, obj_as = obj.as, obj_has = obj.has, obj_is = obj.is, obj_map = obj.map, obj_copy = obj.copy;\r\n\t\tvar num = Type.num, num_is = num.is;\r\n\t\tvar fn = Type.fn, fn_is = fn.is;\r\n\t\tvar N_ = Node._, u;\r\n\t\tmodule.exports = State;\r\n\t})(require, './state');\r\n\r\n\t;require(function(module){\r\n\t\tvar Type = require('./type');\r\n\t\tvar Val = require('./val');\r\n\t\tvar Node = require('./node');\r\n\t\tvar Graph = {};\r\n\t\t;(function(){\r\n\t\t\tGraph.is = function(g, cb, fn, as){ // checks to see if an object is a valid graph.\r\n\t\t\t\tif(!g || !obj_is(g) || obj_empty(g)){ return false } // must be an object.\r\n\t\t\t\treturn !obj_map(g, map, {cb:cb,fn:fn,as:as}); // makes sure it wasn't an empty object.\r\n\t\t\t}\r\n\t\t\tfunction map(n, s){ // we invert this because the way'? we check for this is via a negation.\r\n\t\t\t\tif(!n || s !== Node.soul(n) || !Node.is(n, this.fn, this.as)){ return true } // it is true that this is an invalid graph.\r\n\t\t\t\tif(!this.cb){ return }\r\n\t\t\t\tnf.n = n; nf.as = this.as; // sequential race conditions aren't races.\r\n\t\t\t\tthis.cb.call(nf.as, n, s, nf);\r\n\t\t\t}\r\n\t\t\tfunction nf(fn){ // optional callback for each node.\r\n\t\t\t\tif(fn){ Node.is(nf.n, fn, nf.as) } // where we then have an optional callback for each field/value.\r\n\t\t\t}\r\n\t\t}());\r\n\t\t;(function(){\r\n\t\t\tGraph.ify = function(obj, env, as){\r\n\t\t\t\tvar at = {path: [], obj: obj};\r\n\t\t\t\tif(!env){\r\n\t\t\t\t\tenv = {};\r\n\t\t\t\t} else\r\n\t\t\t\tif(typeof env === 'string'){\r\n\t\t\t\t\tenv = {soul: env};\r\n\t\t\t\t} else\r\n\t\t\t\tif(env instanceof Function){\r\n\t\t\t\t\tenv.map = env;\r\n\t\t\t\t}\r\n\t\t\t\tif(env.soul){\r\n\t\t\t\t\tat.rel = Val.rel.ify(env.soul);\r\n\t\t\t\t}\r\n\t\t\t\tenv.graph = env.graph || {};\r\n\t\t\t\tenv.seen = env.seen || [];\r\n\t\t\t\tenv.as = env.as || as;\r\n\t\t\t\tnode(env, at);\r\n\t\t\t\tenv.root = at.node;\r\n\t\t\t\treturn env.graph;\r\n\t\t\t}\r\n\t\t\tfunction node(env, at){ var tmp;\r\n\t\t\t\tif(tmp = seen(env, at)){ return tmp }\r\n\t\t\t\tat.env = env;\r\n\t\t\t\tat.soul = soul;\r\n\t\t\t\tif(Node.ify(at.obj, map, at)){\r\n\t\t\t\t\t//at.rel = at.rel || Val.rel.ify(Node.soul(at.node));\r\n\t\t\t\t\tenv.graph[Val.rel.is(at.rel)] = at.node;\r\n\t\t\t\t}\r\n\t\t\t\treturn at;\r\n\t\t\t}\r\n\t\t\tfunction map(v,f,n){\r\n\t\t\t\tvar at = this, env = at.env, is, tmp;\r\n\t\t\t\tif(Node._ === f && obj_has(v,Val.rel._)){\r\n\t\t\t\t\treturn n._; // TODO: Bug?\r\n\t\t\t\t}\r\n\t\t\t\tif(!(is = valid(v,f,n, at,env))){ return }\r\n\t\t\t\tif(!f){\r\n\t\t\t\t\tat.node = at.node || n || {};\r\n\t\t\t\t\tif(obj_has(v, Node._)){\r\n\t\t\t\t\t\tat.node._ = obj_copy(v._);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tat.node = Node.soul.ify(at.node, Val.rel.is(at.rel));\r\n\t\t\t\t\tat.rel = at.rel || Val.rel.ify(Node.soul(at.node));\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp = env.map){\r\n\t\t\t\t\ttmp.call(env.as || {}, v,f,n, at);\r\n\t\t\t\t\tif(obj_has(n,f)){\r\n\t\t\t\t\t\tv = n[f];\r\n\t\t\t\t\t\tif(u === v){\r\n\t\t\t\t\t\t\tobj_del(n, f);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!(is = valid(v,f,n, at,env))){ return }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!f){ return at.node }\r\n\t\t\t\tif(true === is){\r\n\t\t\t\t\treturn v;\r\n\t\t\t\t}\r\n\t\t\t\ttmp = node(env, {obj: v, path: at.path.concat(f)});\r\n\t\t\t\tif(!tmp.node){ return }\r\n\t\t\t\treturn tmp.rel; //{'#': Node.soul(tmp.node)};\r\n\t\t\t}\r\n\t\t\tfunction soul(id){ var at = this;\r\n\t\t\t\tvar prev = Val.rel.is(at.rel), graph = at.env.graph;\r\n\t\t\t\tat.rel = at.rel || Val.rel.ify(id);\r\n\t\t\t\tat.rel[Val.rel._] = id;\r\n\t\t\t\tif(at.node && at.node[Node._]){\r\n\t\t\t\t\tat.node[Node._][Val.rel._] = id;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj_has(graph, prev)){\r\n\t\t\t\t\tgraph[id] = graph[prev];\r\n\t\t\t\t\tobj_del(graph, prev);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction valid(v,f,n, at,env){ var tmp;\r\n\t\t\t\tif(Val.is(v)){ return true }\r\n\t\t\t\tif(obj_is(v)){ return 1 }\r\n\t\t\t\tif(tmp = env.invalid){\r\n\t\t\t\t\tv = tmp.call(env.as || {}, v,f,n);\r\n\t\t\t\t\treturn valid(v,f,n, at,env);\r\n\t\t\t\t}\r\n\t\t\t\tenv.err = \"Invalid value at '\" + at.path.concat(f).join('.') + \"'!\";\r\n\t\t\t}\r\n\t\t\tfunction seen(env, at){\r\n\t\t\t\tvar arr = env.seen, i = arr.length, has;\r\n\t\t\t\twhile(i--){ has = arr[i];\r\n\t\t\t\t\tif(at.obj === has.obj){ return has }\r\n\t\t\t\t}\r\n\t\t\t\tarr.push(at);\r\n\t\t\t}\r\n\t\t}());\r\n\t\tGraph.node = function(node){\r\n\t\t\tvar soul = Node.soul(node);\r\n\t\t\tif(!soul){ return }\r\n\t\t\treturn obj_put({}, soul, node);\r\n\t\t}\r\n\t\t;(function(){\r\n\t\t\tGraph.to = function(graph, root, opt){\r\n\t\t\t\tif(!graph){ return }\r\n\t\t\t\tvar obj = {};\r\n\t\t\t\topt = opt || {seen: {}};\r\n\t\t\t\tobj_map(graph[root], map, {obj:obj, graph: graph, opt: opt});\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\tfunction map(v,f){ var tmp, obj;\r\n\t\t\t\tif(Node._ === f){\r\n\t\t\t\t\tif(obj_empty(v, Val.rel._)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.obj[f] = obj_copy(v);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(tmp = Val.rel.is(v))){\r\n\t\t\t\t\tthis.obj[f] = v;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj = this.opt.seen[tmp]){\r\n\t\t\t\t\tthis.obj[f] = obj;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.obj[f] = this.opt.seen[tmp] = Graph.to(this.graph, tmp, this.opt);\r\n\t\t\t}\r\n\t\t}());\r\n\t\tvar fn_is = Type.fn.is;\r\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_has = obj.has, obj_empty = obj.empty, obj_put = obj.put, obj_map = obj.map, obj_copy = obj.copy;\r\n\t\tvar u;\r\n\t\tmodule.exports = Graph;\r\n\t})(require, './graph');\r\n\r\n\t;require(function(module){\r\n\t\t// request / response module, for asking and acking messages.\r\n\t\trequire('./onto'); // depends upon onto!\r\n\t\tmodule.exports = function ask(cb, as){\r\n\t\t\tif(!this.on){ return }\r\n\t\t\tif(!(cb instanceof Function)){\r\n\t\t\t\tif(!cb || !as){ return }\r\n\t\t\t\tvar id = cb['#'] || cb, tmp = (this.tag||empty)[id];\r\n\t\t\t\tif(!tmp){ return }\r\n\t\t\t\ttmp = this.on(id, as);\r\n\t\t\t\tclearTimeout(tmp.err);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar id = (as && as['#']) || Math.random().toString(36).slice(2);\r\n\t\t\tif(!cb){ return id }\r\n\t\t\tvar to = this.on(id, cb, as);\r\n\t\t\tto.err = to.err || setTimeout(function(){\r\n\t\t\t\tto.next({err: \"Error: No ACK received yet.\"});\r\n\t\t\t\tto.off();\r\n\t\t\t}, (this.opt||{}).lack || 9000);\r\n\t\t\treturn id;\r\n\t\t}\r\n\t})(require, './ask');\r\n\r\n\t;require(function(module){\r\n\t\tvar Type = require('./type');\r\n\t\tfunction Dup(opt){\r\n\t\t\tvar dup = {s:{}};\r\n\t\t\topt = opt || {max: 1000, age: 1000 * 9};//1000 * 60 * 2};\r\n\t\t\tdup.check = function(id){\r\n\t\t\t\treturn dup.s[id]? dup.track(id) : false;\r\n\t\t\t}\r\n\t\t\tdup.track = function(id){\r\n\t\t\t\tdup.s[id] = time_is();\r\n\t\t\t\tif(!dup.to){\r\n\t\t\t\t\tdup.to = setTimeout(function(){\r\n\t\t\t\t\t\tType.obj.map(dup.s, function(time, id){\r\n\t\t\t\t\t\t\tif(opt.age > (time_is() - time)){ return }\r\n\t\t\t\t\t\t\tType.obj.del(dup.s, id);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdup.to = null;\r\n\t\t\t\t\t}, opt.age);\r\n\t\t\t\t}\r\n\t\t\t\treturn id;\r\n\t\t\t}\r\n\t\t\treturn dup;\r\n\t\t}\r\n\t\tvar time_is = Type.time.is;\r\n\t\tmodule.exports = Dup;\r\n\t})(require, './dup');\r\n\r\n\t;require(function(module){\r\n\r\n\t\tfunction Gun(o){\r\n\t\t\tif(o instanceof Gun){ return (this._ = {gun: this}).gun }\r\n\t\t\tif(!(this instanceof Gun)){ return new Gun(o) }\r\n\t\t\treturn Gun.create(this._ = {gun: this, opt: o});\r\n\t\t}\r\n\r\n\t\tGun.is = function(gun){ return (gun instanceof Gun) }\r\n\r\n\t\tGun.version = 0.9;\r\n\r\n\t\tGun.chain = Gun.prototype;\r\n\t\tGun.chain.toJSON = function(){};\r\n\r\n\t\tvar Type = require('./type');\r\n\t\tType.obj.to(Type, Gun);\r\n\t\tGun.HAM = require('./HAM');\r\n\t\tGun.val = require('./val');\r\n\t\tGun.node = require('./node');\r\n\t\tGun.state = require('./state');\r\n\t\tGun.graph = require('./graph');\r\n\t\tGun.on = require('./onto');\r\n\t\tGun.ask = require('./ask');\r\n\t\tGun.dup = require('./dup');\r\n\r\n\t\tGun._ = { // some reserved key words, these are not the only ones.\r\n\t\t\tnode: Gun.node._ // all metadata of a node is stored in the meta property on the node.\r\n\t\t\t,soul: Gun.val.rel._ // a soul is a UUID of a node but it always points to the \"latest\" data known.\r\n\t\t\t,state: Gun.state._ // other than the soul, we store HAM metadata.\r\n\t\t\t,field: '.' // a field is a property on a node which points to a value.\r\n\t\t\t,value: '=' // the primitive value.\r\n\t\t}\r\n\r\n\t\t;(function(){\r\n\t\t\tGun.create = function(at){\r\n\t\t\t\tat.root = at.root || at.gun;\r\n\t\t\t\tat.graph = at.graph || {};\r\n\t\t\t\tat.on = at.on || Gun.on;\r\n\t\t\t\tat.ask = at.ask || Gun.ask;\r\n\t\t\t\tat.dup = at.dup || Gun.dup();\r\n\t\t\t\tvar gun = at.gun.opt(at.opt);\r\n\t\t\t\tif(!at.once){\r\n\t\t\t\t\tat.on('in', root, at);\r\n\t\t\t\t\tat.on('out', root, at);\r\n\t\t\t\t}\r\n\t\t\t\tat.once = 1;\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t\tfunction root(msg){\r\n\t\t\t\t//console.log(\"add to.next(at)\"); // TODO: BUG!!!\r\n\t\t\t\tvar ev = this, at = ev.as, gun = at.gun, tmp;\r\n\t\t\t\t//if(!msg.gun){ msg.gun = at.gun }\r\n\t\t\t\tif(!(tmp = msg['#'])){ tmp = msg['#'] = text_rand(9) }\r\n\t\t\t\tif(at.dup.check(tmp)){ return }\r\n\t\t\t\tat.dup.track(tmp);\r\n\t\t\t\tmsg = obj_to(msg);//, {gun: at.gun});\r\n\t\t\t\tif(!at.ask(msg['@'], msg)){\r\n\t\t\t\t\tif(msg.get){\r\n\t\t\t\t\t\tGun.on.get(msg, gun);\r\n\t\t\t\t\t\t//at.on('get', get(msg));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(msg.put){\r\n\t\t\t\t\t\tGun.on.put(msg, gun);\r\n\t\t\t\t\t\t//at.on('put', put(msg));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tat.on('out', msg);\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t;(function(){\r\n\t\t\tGun.on.put = function(msg, gun){\r\n\t\t\t\tvar at = gun._, ctx = {gun: gun, graph: at.graph, put: {}, map: {}, machine: Gun.state(), ack: msg['@']};\r\n\t\t\t\tif(!Gun.graph.is(msg.put, null, verify, ctx)){ ctx.err = \"Error: Invalid graph!\" }\r\n\t\t\t\tif(ctx.err){ return at.on('in', {'@': msg['#'], err: Gun.log(ctx.err) }) }\r\n\t\t\t\tobj_map(ctx.put, merge, ctx);\r\n\t\t\t\tobj_map(ctx.map, map, ctx);\r\n\t\t\t\tif(u !== ctx.defer){\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tGun.on.put(msg, gun);\r\n\t\t\t\t\t}, ctx.defer - at.machine);\r\n\t\t\t\t}\r\n\t\t\t\tif(!ctx.diff){ return }\r\n\t\t\t\tat.on('put', obj_to(msg, {put: ctx.diff}));\r\n\t\t\t};\r\n\t\t\tfunction verify(val, key, node, soul){ var ctx = this;\r\n\t\t\t\tvar state = Gun.state.is(node, key), tmp;\r\n\t\t\t\tif(!state){ return ctx.err = \"Error: No state on '\"+key+\"' in node '\"+soul+\"'!\" }\r\n\t\t\t\tvar vertex = ctx.graph[soul] || empty, was = Gun.state.is(vertex, key, true), known = vertex[key];\r\n\t\t\t\tvar HAM = Gun.HAM(ctx.machine, state, was, val, known);\r\n\t\t\t\tif(!HAM.incoming){\r\n\t\t\t\t\tif(HAM.defer){ // pick the lowest\r\n\t\t\t\t\t\tctx.defer = (state < (ctx.defer || Infinity))? state : ctx.defer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tctx.put[soul] = Gun.state.to(node, key, ctx.put[soul]);\r\n\t\t\t\t(ctx.diff || (ctx.diff = {}))[soul] = Gun.state.to(node, key, ctx.diff[soul]);\r\n\t\t\t}\r\n\t\t\tfunction merge(node, soul){\r\n\t\t\t\tvar cat = this.gun._, at = (cat.next || empty)[soul];\r\n\t\t\t\tif(!at){ return }\r\n\t\t\t\tvar msg = this.map[soul] = {\r\n\t\t\t\t\tput: this.node = node,\r\n\t\t\t\t\tget: this.soul = soul,\r\n\t\t\t\t\tgun: this.at = at\r\n\t\t\t\t};\r\n\t\t\t\tif(this.ack){ msg['@'] = this.ack }\r\n\t\t\t\tobj_map(node, each, this);\r\n\t\t\t}\r\n\t\t\tfunction each(val, key){\r\n\t\t\t\tvar graph = this.graph, soul = this.soul, at = (this.at._), tmp;\r\n\t\t\t\tgraph[soul] = Gun.state.to(this.node, key, graph[soul]);\r\n\t\t\t\tat.put = Gun.state.to(this.node, key, at.put);\r\n\t\t\t}\r\n\t\t\tfunction map(msg, soul){ var tmp;\r\n\t\t\t\tif(!msg.gun){ return }\r\n\t\t\t\tif((tmp = this.gun._).tag.node){\r\n\t\t\t\t\ttmp.on('node', function(msg){ this.off();\r\n\t\t\t\t\t\t(msg.gun._).on('in', msg);\r\n\t\t\t\t\t}).on.on('node', msg);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t(msg.gun._).on('in', msg);\r\n\t\t\t}\r\n\r\n\t\t\tGun.on.get = function(msg, gun){\r\n\t\t\t\tvar root = gun._, soul = msg.get[_soul], node = root.graph[soul], field = msg.get[_field], tmp;\r\n\t\t\t\tvar next = root.next || (root.next = {}), at = ((next[soul] || empty)._);\r\n\t\t\t\tif(!node || !at){ return root.on('get', msg) }\r\n\t\t\t\tif(field){\r\n\t\t\t\t\tif(!obj_has(node, field)){ return root.on('get', msg) }\r\n\t\t\t\t\tnode = Gun.state.to(node, field);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = Gun.obj.copy(node);\r\n\t\t\t\t}\r\n\t\t\t\tnode = Gun.graph.node(node);\r\n\t\t\t\t//tmp = at.ack;\r\n\t\t\t\troot.on('in', {\r\n\t\t\t\t\t'@': msg['#'],\r\n\t\t\t\t\t//how: 'mem',\r\n\t\t\t\t\tput: node,\r\n\t\t\t\t\tgun: gun\r\n\t\t\t\t});\r\n\t\t\t\t//if(0 < tmp){\r\n\t\t\t\t//\treturn;\r\n\t\t\t\t//}\r\n\t\t\t\troot.on('get', msg);\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t;(function(){\r\n\t\t\tGun.chain.opt = function(opt){\r\n\t\t\t\topt = opt || {};\r\n\t\t\t\tvar gun = this, at = gun._, tmp = opt.peers || opt;\r\n\t\t\t\tif(!obj_is(opt)){ opt = {} }\r\n\t\t\t\tif(!obj_is(at.opt)){ at.opt = opt }\r\n\t\t\t\tif(text_is(tmp)){ tmp = [tmp] }\r\n\t\t\t\tif(list_is(tmp)){\r\n\t\t\t\t\ttmp = obj_map(tmp, function(url, i, map){\r\n\t\t\t\t\t\tmap(url, {url: url});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(!obj_is(at.opt.peers)){ at.opt.peers = {}}\r\n\t\t\t\t\tat.opt.peers = obj_to(tmp, at.opt.peers);\r\n\t\t\t\t}\r\n\t\t\t\tat.opt.peers = at.opt.peers || {};\r\n\t\t\t\tobj_to(opt, at.opt); // copies options on to `at.opt` only if not already taken.\r\n\t\t\t\tGun.on('opt', at);\r\n\t\t\t\tat.opt.uuid = at.opt.uuid || function(){ return state_lex() + text_rand(12) }\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\tvar list_is = Gun.list.is;\r\n\t\tvar text = Gun.text, text_is = text.is, text_rand = text.random;\r\n\t\tvar obj = Gun.obj, obj_is = obj.is, obj_has = obj.has, obj_to = obj.to, obj_map = obj.map, obj_copy = obj.copy;\r\n\t\tvar state_lex = Gun.state.lex, _soul = Gun._.soul, _field = Gun._.field, node_ = Gun._.node, rel_is = Gun.val.rel.is;\r\n\t\tvar empty = {}, u;\r\n\r\n\t\tconsole.debug = function(i, s){ return (console.debug.i && i === console.debug.i && console.debug.i++) && (console.log.apply(console, arguments) || s) };\r\n\r\n\t\tGun.log = function(){ return (!Gun.log.off && console.log.apply(console, arguments)), [].slice.call(arguments).join(' ') }\r\n\t\tGun.log.once = function(w,s,o){ return (o = Gun.log.once)[w] = o[w] || 0, o[w]++ || Gun.log(s) }\r\n\r\n\t\t;\"Please do not remove these messages unless you are paying for a monthly sponsorship, thanks!\";\r\n\t\tGun.log.once(\"welcome\", \"Hello wonderful person! :) Thanks for using GUN, feel free to ask for help on https://gitter.im/amark/gun and ask StackOverflow questions tagged with 'gun'!\");\r\n\t\t;\"Please do not remove these messages unless you are paying for a monthly sponsorship, thanks!\";\r\n\t\t\r\n\t\tif(typeof window !== \"undefined\"){ window.Gun = Gun }\r\n\t\tif(typeof common !== \"undefined\"){ common.exports = Gun }\r\n\t\tmodule.exports = Gun;\r\n\t})(require, './root');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./root');\r\n\t\tGun.chain.back = function(n, opt){ var tmp;\r\n\t\t\tn = n || 1;\r\n\t\t\tif(-1 === n || Infinity === n){\r\n\t\t\t\treturn this._.root;\r\n\t\t\t} else\r\n\t\t\tif(1 === n){\r\n\t\t\t\treturn this._.back || this;\r\n\t\t\t}\r\n\t\t\tvar gun = this, at = gun._;\r\n\t\t\tif(typeof n === 'string'){\r\n\t\t\t\tn = n.split('.');\r\n\t\t\t}\r\n\t\t\tif(n instanceof Array){\r\n\t\t\t\tvar i = 0, l = n.length, tmp = at;\r\n\t\t\t\tfor(i; i < l; i++){\r\n\t\t\t\t\ttmp = (tmp||empty)[n[i]];\r\n\t\t\t\t}\r\n\t\t\t\tif(u !== tmp){\r\n\t\t\t\t\treturn opt? gun : tmp;\r\n\t\t\t\t} else\r\n\t\t\t\tif((tmp = at.back)){\r\n\t\t\t\t\treturn tmp.back(n, opt);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(n instanceof Function){\r\n\t\t\t\tvar yes, tmp = {back: gun};\r\n\t\t\t\twhile((tmp = tmp.back)\r\n\t\t\t\t&& (tmp = tmp._)\r\n\t\t\t\t&& !(yes = n(tmp, opt))){}\r\n\t\t\t\treturn yes;\r\n\t\t\t}\r\n\t\t\tif(Gun.num.is(n)){\r\n\t\t\t\treturn at.back.back(n - 1);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar empty = {}, u;\r\n\t})(require, './back');\r\n\r\n\t;require(function(module){\r\n\t\t// WARNING: GUN is very simple, but the JavaScript chaining API around GUN\r\n\t\t// is complicated and was extremely hard to build. If you port GUN to another\r\n\t\t// language, consider implementing an easier API to build.\r\n\t\tvar Gun = require('./root');\r\n\t\tGun.chain.chain = function(){\r\n\t\t\tvar at = this._, chain = new this.constructor(this), cat = chain._, root;\r\n\t\t\tcat.root = root = at.root;\r\n\t\t\tcat.id = ++root._.once;\r\n\t\t\tcat.back = this;\r\n\t\t\tcat.on = Gun.on;\r\n\t\t\tcat.on('in', input, cat); // For 'in' if I add my own listeners to each then I MUST do it before in gets called. If I listen globally for all incoming data instead though, regardless of individual listeners, I can transform the data there and then as well.\r\n\t\t\tcat.on('out', output, cat); // However for output, there isn't really the global option. I must listen by adding my own listener individually BEFORE this one is ever called.\r\n\t\t\treturn chain;\r\n\t\t}\r\n\r\n\t\tfunction output(msg){\r\n\t\t\tvar put, get, at = this.as, back = at.back._, root = at.root._;\r\n\t\t\tif(!msg.gun){ msg.gun = at.gun }\r\n\t\t\tthis.to.next(msg);\r\n\t\t\tif(get = msg.get){\r\n\t\t\t\t/*if(u !== at.put){\r\n\t\t\t\t\tat.on('in', at);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}*/\r\n\t\t\t\tif(get['#'] || at.soul){\r\n\t\t\t\t\tget['#'] = get['#'] || at.soul;\r\n\t\t\t\t\tmsg['#'] || (msg['#'] = text_rand());\r\n\t\t\t\t\tback = (root.gun.get(get['#'])._);\r\n\t\t\t\t\tif(!(get = get['.'])){\r\n\t\t\t\t\t\tif(obj_has(back, 'put')){\r\n\t\t\t\t\t\t//if(u !== back.put){\r\n\t\t\t\t\t\t\tback.on('in', back);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(back.ack){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmsg.gun = back.gun;\r\n\t\t\t\t\t\tback.ack = -1;\r\n\t\t\t\t\t} else\r\n\t\t\t\t\tif(obj_has(back.put, get)){\r\n\t\t\t\t\t\tback.on('in', {\r\n\t\t\t\t\t\t\tgun: back.gun,\r\n\t\t\t\t\t\t\tput: Gun.state.to(back.put, get),\r\n\t\t\t\t\t\t\tget: back.get\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\troot.ask(ack, msg);\r\n\t\t\t\t\treturn root.on('in', msg);\r\n\t\t\t\t}\r\n\t\t\t\tif(root.now){\r\n\t\t\t\t\troot.now[at.id] = root.now[at.id] || true;\r\n\t\t\t\t}\r\n\t\t\t\tif(get['.']){\r\n\t\t\t\t\tif(at.get){\r\n\t\t\t\t\t\tmsg = {get: {'.': at.get}, gun: at.gun};\r\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.gun; // TODO: PERFORMANCE? More elegant way?\r\n\t\t\t\t\t\treturn back.on('out', msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmsg = {get: {}, gun: at.gun};\r\n\t\t\t\t\treturn back.on('out', msg);\r\n\t\t\t\t}\r\n\t\t\t\tat.ack = at.ack || -1;\r\n\t\t\t\tif(at.get){\r\n\t\t\t\t\tmsg.gun = at.gun;\r\n\t\t\t\t\tget['.'] = at.get;\r\n\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.gun; // TODO: PERFORMANCE? More elegant way?\r\n\t\t\t\t\treturn back.on('out', msg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn back.on('out', msg);\r\n\t\t}\r\n\r\n\t\tfunction input(at){\r\n\t\t\tat = at._ || at;\r\n\t\t\tvar ev = this, cat = this.as, gun = at.gun, coat = gun._, change = at.put, back = cat.back._ || empty, rel, tmp;\r\n\t\t\tif(cat.get && at.get !== cat.get){\r\n\t\t\t\tat = obj_to(at, {get: cat.get});\r\n\t\t\t}\r\n\t\t\tif(cat.field && coat !== cat){\r\n\t\t\t\tat = obj_to(at, {gun: cat.gun});\r\n\t\t\t\tif(coat.ack){\r\n\t\t\t\t\tcat.ack = coat.ack;\r\n\t\t\t\t\t//cat.ack = cat.ack || coat.ack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(u === change){\r\n\t\t\t\tev.to.next(at);\r\n\t\t\t\tif(cat.soul){ return }\r\n\t\t\t\techo(cat, at, ev);\r\n\t\t\t\tif(cat.field){\r\n\t\t\t\t\tnot(cat, at);\r\n\t\t\t\t}\r\n\t\t\t\tobj_del(coat.echo, cat.id);\r\n\t\t\t\tobj_del(cat.map, coat.id);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(cat.soul){\r\n\t\t\t\t//if(cat.root._.now){ at = obj_to(at, {put: change = coat.put}) } // TODO: Ugly hack for uncached synchronous maps.\r\n\t\t\t\tev.to.next(at);\r\n\t\t\t\techo(cat, at, ev);\r\n\t\t\t\tobj_map(change, map, {at: at, cat: cat});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t/*if(rel = Gun.val.rel.is(change)){\r\n\t\t\t\tif(tmp = (gun.back(-1).get(rel)._).put){\r\n\t\t\t\t\tchange = tmp; // this will cause performance to turn to mush, maybe use `.now` check?\r\n\t\t\t\t}\r\n\t\t\t\t//if(tmp.put){ change = tmp.put; }\r\n\t\t\t}\r\n\t\t\tif(!rel || tmp){*/\r\n\t\t\tif(!(rel = Gun.val.rel.is(change))){\r\n\t\t\t\tif(Gun.val.is(change)){\r\n\t\t\t\t\tif(cat.field || cat.soul){\r\n\t\t\t\t\t\tnot(cat, at);\r\n\t\t\t\t\t} else\r\n\t\t\t\t\tif(coat.field || coat.soul){\r\n\t\t\t\t\t\t(coat.echo || (coat.echo = {}))[cat.id] = cat;\r\n\t\t\t\t\t\t(cat.map || (cat.map = {}))[coat.id] = cat.map[coat.id] || {at: coat};\r\n\t\t\t\t\t\t//if(u === coat.put){ return } // Not necessary but improves performance. If we have it but coat does not, that means we got things out of order and coat will get it. Once coat gets it, it will tell us again.\r\n\t\t\t\t\t}\r\n\t\t\t\t\tev.to.next(at);\r\n\t\t\t\t\techo(cat, at, ev);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(cat.field && coat !== cat && obj_has(coat, 'put')){\r\n\t\t\t\t\tcat.put = coat.put;\r\n\t\t\t\t};\r\n\t\t\t\tif((rel = Gun.node.soul(change)) && coat.field){\r\n\t\t\t\t\tcoat.put = (cat.root.get(rel)._).put;\r\n\t\t\t\t}\r\n\t\t\t\tev.to.next(at);\r\n\t\t\t\techo(cat, at, ev);\r\n\t\t\t\trelate(cat, at, coat, rel);\r\n\t\t\t\tobj_map(change, map, {at: at, cat: cat});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\trelate(cat, at, coat, rel);\r\n\t\t\tev.to.next(at);\r\n\t\t\techo(cat, at, ev);\r\n\t\t}\r\n\t\tGun.chain.chain.input = input;\r\n\t\tfunction relate(at, msg, from, rel){\r\n\t\t\tif(!rel || node_ === at.get){ return }\r\n\t\t\tvar tmp = (at.root.get(rel)._);\r\n\t\t\tif(at.has){\r\n\t\t\t\tfrom = tmp;\r\n\t\t\t} else \r\n\t\t\tif(from.has){\r\n\t\t\t\trelate(from, msg, from, rel);\r\n\t\t\t}\r\n\t\t\tif(from === at){ return }\r\n\t\t\t(from.echo || (from.echo = {}))[at.id] = at;\r\n\t\t\tif(at.has && !(at.map||empty)[from.id]){ // if we haven't seen this before.\r\n\t\t\t\tnot(at, msg);\r\n\t\t\t}\r\n\t\t\ttmp = (at.map || (at.map = {}))[from.id] = at.map[from.id] || {at: from};\r\n\t\t\tvar now = at.root._.now;\r\n\t\t\tif(rel === tmp.rel){\r\n\t\t\t\tif(!now){ return }\r\n\t\t\t\tif(u === now[at.id]){ return }\r\n\t\t\t\tif((now._ || (now._ = {}))[at.id]){ return } now._[at.id] = true;\r\n\t\t\t}\r\n\t\t\task(at, tmp.rel = rel);\r\n\t\t}\r\n\t\tfunction echo(at, msg, ev){\r\n\t\t\tif(!at.echo){ return } // || node_ === at.get ?\r\n\t\t\tif(at.has || at.field){ msg = obj_to(msg, {event: ev}) }\r\n\t\t\tobj_map(at.echo, reverb, msg);\r\n\t\t}\r\n\t\tfunction reverb(to){\r\n\t\t\tto.on('in', this);\r\n\t\t}\r\n\t\tfunction map(data, key){ // Map over only the changes on every update.\r\n\t\t\tvar cat = this.cat, next = cat.next || empty, via = this.at, gun, chain, at, tmp;\r\n\t\t\tif(node_ === key && !next[key]){ return }\r\n\t\t\tif(!(gun = next[key])){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tat = (gun._);\r\n\t\t\t//if(data && data[_soul] && (tmp = Gun.val.rel.is(data)) && (tmp = (cat.root.get(tmp)._)) && obj_has(tmp, 'put')){\r\n\t\t\t//\tdata = tmp.put;\r\n\t\t\t//}\r\n\t\t\tif(at.field){\r\n\t\t\t\tif(!(data && data[_soul] && Gun.val.rel.is(data) === Gun.node.soul(at.put))){\r\n\t\t\t\t\tat.put = data;\r\n\t\t\t\t}\r\n\t\t\t\tchain = gun;\r\n\t\t\t} else {\r\n\t\t\t\tchain = via.gun.get(key);\r\n\t\t\t}\r\n\t\t\tat.on('in', {\r\n\t\t\t\tput: data,\r\n\t\t\t\tget: key,\r\n\t\t\t\tgun: chain,\r\n\t\t\t\tvia: via\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction not(at, msg){\r\n\t\t\tif(!(at.has || at.soul)){ return }\r\n\t\t\tvar tmp = at.map, root = at.root._;\r\n\t\t\tat.map = null;\r\n\t\t\tif(!root.now || !root.now[at.id]){\r\n\t\t\t\tif((u === msg.put && !msg['@']) && null === tmp){ return }\r\n\t\t\t}\r\n\t\t\tif(u === tmp && Gun.val.rel.is(at.put)){ return } // TODO: Bug? Threw second condition in for a particular test, not sure if a counter example is tested though.\r\n\t\t\tobj_map(tmp, function(proxy){\r\n\t\t\t\tif(!(proxy = proxy.at)){ return }\r\n\t\t\t\tobj_del(proxy.echo, at.id);\r\n\t\t\t});\r\n\t\t\tobj_map(at.next, function(gun, key){\r\n\t\t\t\tvar coat = (gun._);\r\n\t\t\t\tcoat.put = u;\r\n\t\t\t\tif(coat.ack){\r\n\t\t\t\t\tcoat.ack = -1;\r\n\t\t\t\t}\r\n\t\t\t\tcoat.on('in', {\r\n\t\t\t\t\tget: key,\r\n\t\t\t\t\tgun: gun,\r\n\t\t\t\t\tput: u\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction ask(at, soul){\r\n\t\t\tvar tmp = (at.root.get(soul)._);\r\n\t\t\tif(at.ack){\r\n\t\t\t\t//tmp.ack = tmp.ack || -1;\r\n\t\t\t\ttmp.on('out', {get: {'#': soul}});\r\n\t\t\t\tif(!at.ask){ return } // TODO: PERFORMANCE? More elegant way?\r\n\t\t\t}\r\n\t\t\tobj_map(at.ask || at.next, function(gun, key){\r\n\t\t\t\t//(tmp.gun.get(key)._).on('out', {get: {'#': soul, '.': key}});\r\n\t\t\t\t//tmp.on('out', {get: {'#': soul, '.': key}});\r\n\t\t\t\t(gun._).on('out', {get: {'#': soul, '.': key}});\r\n\t\t\t\t//at.on('out', {get: {'#': soul, '.': key}});\r\n\t\t\t});\r\n\t\t\tGun.obj.del(at, 'ask'); // TODO: PERFORMANCE? More elegant way?\r\n\t\t}\r\n\t\tfunction ack(msg, ev){\r\n\t\t\tvar as = this.as, get = as.get || empty, at = as.gun._;\r\n\t\t\tif(at.ack){ at.ack = (at.ack + 1) || 1 }\r\n\t\t\tif(!msg.put || node_ == get['.'] || (get['.'] && !obj_has(msg.put[get['#']], at.get))){\r\n\t\t\t\tif(at.put !== u){ return }\r\n\t\t\t\t//at.ack = 0;\r\n\t\t\t\tat.on('in', {\r\n\t\t\t\t\tget: at.get,\r\n\t\t\t\t\tput: at.put = u,\r\n\t\t\t\t\tgun: at.gun,\r\n\t\t\t\t\t'@': msg['@']\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//if(/*!msg.gun &&*/ !get['.'] && get['#']){ at.ack = (at.ack + 1) || 1 }\r\n\t\t\t//msg = obj_to(msg);\r\n\t\t\tmsg.gun = at.root;\r\n\t\t\t//Gun.on('put', at);\r\n\t\t\tGun.on.put(msg, at.root);\r\n\t\t}\r\n\t\tvar empty = {}, u;\r\n\t\tvar obj = Gun.obj, obj_has = obj.has, obj_put = obj.put, obj_del = obj.del, obj_to = obj.to, obj_map = obj.map;\r\n\t\tvar text_rand = Gun.text.random;\r\n\t\tvar _soul = Gun._.soul, _field = Gun._.field, node_ = Gun.node._;\r\n\t})(require, './chain');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./root');\r\n\t\tGun.chain.get = function(key, cb, as){\r\n\t\t\tif(typeof key === 'string'){\r\n\t\t\t\tvar gun, back = this, cat = back._;\r\n\t\t\t\tvar next = cat.next || empty, tmp;\r\n\t\t\t\tif(!(gun = next[key])){\r\n\t\t\t\t\tgun = cache(key, back);\r\n\t\t\t\t}\r\n\t\t\t} else\r\n\t\t\tif(key instanceof Function){\r\n\t\t\t\tvar gun = this, at = gun._, root = at.root._, tmp = root.now, ev;\r\n\t\t\t\tas = cb || {};\r\n\t\t\t\tas.use = key;\r\n\t\t\t\tas.out = as.out || {};\r\n\t\t\t\tas.out.get = as.out.get || {};\r\n\t\t\t\tev = at.on('in', use, as);\r\n\t\t\t\t(root.now = {$:1})[as.now = at.id] = ev;\r\n\t\t\t\tat.on('out', as.out);\r\n\t\t\t\troot.now = tmp;\r\n\t\t\t\treturn gun;\r\n\t\t\t} else\r\n\t\t\tif(num_is(key)){\r\n\t\t\t\treturn this.get(''+key, cb, as);\r\n\t\t\t} else {\r\n\t\t\t\t(as = this.chain())._.err = {err: Gun.log('Invalid get request!', key)}; // CLEAN UP\r\n\t\t\t\tif(cb){ cb.call(as, as._.err) }\r\n\t\t\t\treturn as;\r\n\t\t\t}\r\n\t\t\tif(tmp = cat.stun){ // TODO: Refactor?\r\n\t\t\t\tgun._.stun = gun._.stun || tmp;\r\n\t\t\t}\r\n\t\t\tif(cb && cb instanceof Function){\r\n\t\t\t\tgun.get(cb, as);\r\n\t\t\t}\r\n\t\t\treturn gun;\r\n\t\t}\r\n\t\tfunction cache(key, back){\r\n\t\t\tvar cat = back._, next = cat.next, gun = back.chain(), at = gun._;\r\n\t\t\tif(!next){ next = cat.next = {} }\r\n\t\t\tnext[at.get = key] = gun;\r\n\t\t\tif(cat.root === back){ \r\n\t\t\t\tat.soul = key;\r\n\t\t\t} else\r\n\t\t\tif(cat.soul || cat.field || cat.has){  // TODO: Convert field to has!\r\n\t\t\t\tat.field = at.has = key;\r\n\t\t\t\tif(obj_has(cat.put, key)){\r\n\t\t\t\t\t//at.put = cat.put[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn gun;\r\n\t\t}\r\n\t\tfunction use(msg){\r\n\t\t\tvar ev = this, as = ev.as, gun = msg.gun, at = gun._, root = at.root._, data = msg.put, tmp;\r\n\t\t\tif((tmp = root.now) && ev !== tmp[as.now]){\r\n\t\t\t\treturn ev.to.next(msg);\r\n\t\t\t}\r\n\t\t\tif(u === data){\r\n\t\t\t\tdata = at.put;\r\n\t\t\t}\r\n\t\t\tif((tmp = data) && tmp[rel._] && (tmp = rel.is(tmp))){\r\n\t\t\t\ttmp = (at.root.get(tmp)._);\r\n\t\t\t\tif(u !== tmp.put){\r\n\t\t\t\t\tmsg = obj_to(msg, {put: tmp.put});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tas.use(msg, msg.event || ev);\r\n\t\t\tev.to.next(msg);\r\n\t\t}\r\n\t\tvar obj = Gun.obj, obj_has = obj.has, obj_to = Gun.obj.to;\r\n\t\tvar num_is = Gun.num.is;\r\n\t\tvar rel = Gun.val.rel, node_ = Gun.node._;\r\n\t\tvar empty = {}, u;\r\n\t})(require, './get');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./root');\r\n\t\tGun.chain.put = function(data, cb, as){\r\n\t\t\t// #soul.field=value>state\r\n\t\t\t// ~who#where.where=what>when@was\r\n\t\t\t// TODO: BUG! Put probably cannot handle plural chains!\r\n\t\t\tvar gun = this, at = (gun._), root = at.root, tmp;\r\n\t\t\tas = as || {};\r\n\t\t\tas.data = data;\r\n\t\t\tas.gun = as.gun || gun;\r\n\t\t\tif(typeof cb === 'string'){\r\n\t\t\t\tas.soul = cb;\r\n\t\t\t} else {\r\n\t\t\t\tas.ack = cb;\r\n\t\t\t}\r\n\t\t\tif(at.soul){\r\n\t\t\t\tas.soul = at.soul;\r\n\t\t\t}\r\n\t\t\tif(as.soul || root === gun){\r\n\t\t\t\tif(!obj_is(as.data)){\r\n\t\t\t\t\t(as.ack||noop).call(as, as.out = {err: Gun.log(\"Data saved to the root level of the graph must be a node (an object), not a\", (typeof as.data), 'of \"' + as.data + '\"!')});\r\n\t\t\t\t\tif(as.res){ as.res() }\r\n\t\t\t\t\treturn gun;\r\n\t\t\t\t}\r\n\t\t\t\tas.soul = as.soul || (as.not = Gun.node.soul(as.data) || ((root._).opt.uuid || Gun.text.random)());\r\n\t\t\t\tif(!as.soul){ // polyfill async uuid for SEA\r\n\t\t\t\t\t(root._).opt.uuid(function(err, soul){ // TODO: improve perf without anonymous callback\r\n\t\t\t\t\t\tif(err){ return Gun.log(err) } // TODO: Handle error!\r\n\t\t\t\t\t\t(as.ref||as.gun).put(as.data, as.soul = soul, as);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn gun;\r\n\t\t\t\t}\r\n\t\t\t\tas.gun = gun = root.get(as.soul);\r\n\t\t\t\tas.ref = as.gun;\r\n\t\t\t\tify(as);\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t\tif(Gun.is(data)){\r\n\t\t\t\tdata.get('_').get(function(at, ev, tmp){ ev.off();\r\n\t\t\t\t\tif(!(tmp = at.gun) || !(tmp = tmp._.back) || !tmp._.soul){\r\n\t\t\t\t\t\treturn Gun.log(\"The reference you are saving is a\", typeof at.put, '\"'+ as.put +'\", not a node (object)!');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgun.put(Gun.val.rel.ify(tmp._.soul), cb, as);\r\n\t\t\t\t});\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t\tas.ref = as.ref || (root === (tmp = at.back))? gun : tmp;\r\n\t\t\tif(as.ref._.soul && Gun.val.is(as.data) && at.get){\r\n\t\t\t\tas.data = obj_put({}, at.get, as.data);\r\n\t\t\t\tas.ref.put(as.data, as.soul, as);\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t\tas.ref.get('_').get(any, {as: as});\r\n\t\t\tif(!as.out){\r\n\t\t\t\t// TODO: Perf idea! Make a global lock, that blocks everything while it is on, but if it is on the lock it does the expensive lookup to see if it is a dependent write or not and if not then it proceeds full speed. Meh? For write heavy async apps that would be terrible.\r\n\t\t\t\tas.res = as.res || stun; // Gun.on.stun(as.ref); // TODO: BUG! Deal with locking?\r\n\t\t\t\tas.gun._.stun = as.ref._.stun;\r\n\t\t\t}\r\n\t\t\treturn gun;\r\n\t\t};\r\n\r\n\t\tfunction ify(as){\r\n\t\t\tas.batch = batch;\r\n\t\t\tvar opt = as.opt||{}, env = as.env = Gun.state.map(map, opt.state);\r\n\t\t\tenv.soul = as.soul;\r\n\t\t\tas.graph = Gun.graph.ify(as.data, env, as);\r\n\t\t\tif(env.err){\r\n\t\t\t\t(as.ack||noop).call(as, as.out = {err: Gun.log(env.err)});\r\n\t\t\t\tif(as.res){ as.res() }\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tas.batch();\r\n\t\t}\r\n\r\n\t\tfunction stun(cb){\r\n\t\t\tif(cb){ cb() }\r\n\t\t\treturn;\r\n\t\t\tvar as = this;\r\n\t\t\tif(!as.ref){ return }\r\n\t\t\tif(cb){\r\n\t\t\t\tas.after = as.ref._.tag;\r\n\t\t\t\tas.now = as.ref._.tag = {};\r\n\t\t\t\tcb();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(as.after){\r\n\t\t\t\tas.ref._.tag = as.after;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction batch(){ var as = this;\r\n\t\t\tif(!as.graph || obj_map(as.stun, no)){ return }\r\n\t\t\tas.res = as.res || function(cb){ if(cb){ cb() } };\r\n\t\t\tas.res(function(){\r\n\t\t\t\tvar cat = (as.gun.back(-1)._), ask = cat.ask(function(ack){\r\n\t\t\t\t\tthis.off(); // One response is good enough for us currently. Later we may want to adjust this.\r\n\t\t\t\t\tif(!as.ack){ return }\r\n\t\t\t\t\tas.ack(ack, this);\r\n\t\t\t\t}, as.opt);\r\n\t\t\t\tvar tmp = cat.root._.now; obj.del(cat.root._, 'now');\r\n\t\t\t\t(as.ref._).now = true;\r\n\t\t\t\t(as.ref._).on('out', {\r\n\t\t\t\t\tgun: as.ref, put: as.out = as.env.graph, opt: as.opt, '#': ask\r\n\t\t\t\t});\r\n\t\t\t\tobj.del((as.ref._), 'now');\r\n\t\t\t\tcat.root._.now = tmp;\r\n\t\t\t}, as);\r\n\t\t\tif(as.res){ as.res() }\r\n\t\t} function no(v,f){ if(v){ return true } }\r\n\r\n\t\tfunction map(v,f,n, at){ var as = this;\r\n\t\t\tif(f || !at.path.length){ return }\r\n\t\t\t(as.res||iife)(function(){\r\n\t\t\t\tvar path = at.path, ref = as.ref, opt = as.opt;\r\n\t\t\t\tvar i = 0, l = path.length;\r\n\t\t\t\tfor(i; i < l; i++){\r\n\t\t\t\t\tref = ref.get(path[i]);\r\n\t\t\t\t}\r\n\t\t\t\tif(as.not || Gun.node.soul(at.obj)){\r\n\t\t\t\t\tvar id = Gun.node.soul(at.obj) || (ref.back('opt.uuid') || Gun.text.random)();\r\n\t\t\t\t\tif(!id){ // polyfill async uuid for SEA\r\n\t\t\t\t\t\t(as.stun = as.stun || {})[path] = true; // make DRY\r\n\t\t\t\t\t\tref.back('opt.uuid')(function(err, id){ // TODO: improve perf without anonymous callback\r\n\t\t\t\t\t\t\tif(err){ return Gun.log(err) } // TODO: Handle error.\r\n\t\t\t\t\t\t\tref.back(-1).get(id);\r\n\t\t\t\t\t\t\tat.soul(id);\r\n\t\t\t\t\t\t\tas.stun[path] = false;\r\n\t\t\t\t\t\t\tas.batch();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tref.back(-1).get(id);\r\n\t\t\t\t\tat.soul(id);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t(as.stun = as.stun || {})[path] = true;\r\n\t\t\t\tref.get('_').get(soul, {as: {at: at, as: as}});\r\n\t\t\t}, {as: as, at: at});\r\n\t\t}\r\n\r\n\t\tfunction soul(at, ev){ var as = this.as, cat = as.at; as = as.as;\r\n\t\t\t//ev.stun(); // TODO: BUG!?\r\n\t\t\tif(!at.gun || !at.gun._.back){ return } // TODO: Handle\r\n\t\t\tev.off();\r\n\t\t\tat = (at.gun._.back._); // go up 1!\r\n\t\t\tvar id = id || Gun.node.soul(cat.obj) || Gun.node.soul(at.put) || Gun.val.rel.is(at.put) || (as.gun.back('opt.uuid') || Gun.text.random)(); // TODO: BUG!? Do we really want the soul of the object given to us? Could that be dangerous?\r\n\t\t\tif(!id){ // polyfill async uuid for SEA\r\n\t\t\t\tat.gun.back('opt.uuid')(function(err, id){ // TODO: improve perf without anonymous callback\r\n\t\t\t\t\tif(err){ return Gun.log(e) } // TODO: Handle error.\r\n\t\t\t\t\tsolve(at, id, cat, as);\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsolve(at, id, cat, as);\r\n\t\t}\r\n\r\n\t\tfunction solve(at, id, cat, as){\r\n\t\t\tat.gun.back(-1).get(id);\r\n\t\t\tcat.soul(id);\r\n\t\t\tas.stun[cat.path] = false;\r\n\t\t\tas.batch();\r\n\t\t}\r\n\r\n\t\tfunction any(at, ev){\r\n\t\t\tvar as = this.as;\r\n\t\t\tif(!at.gun || !at.gun._){ return } // TODO: Handle\r\n\t\t\tif(at.err){ // TODO: Handle\r\n\t\t\t\tconsole.log(\"Please report this as an issue! Put.any.err\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cat = (at.gun._.back._), data = cat.put, opt = as.opt||{}, root, tmp;\r\n\t\t\tif((tmp = as.ref) && tmp._.now){ return }\r\n\t\t\tev.off();\r\n\t\t\tif(as.ref !== as.gun){\r\n\t\t\t\ttmp = (as.gun._).get || cat.get;\r\n\t\t\t\tif(!tmp){ // TODO: Handle\r\n\t\t\t\t\tconsole.log(\"Please report this as an issue! Put.no.get\"); // TODO: BUG!??\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tas.data = obj_put({}, tmp, as.data);\r\n\t\t\t\ttmp = null;\r\n\t\t\t}\r\n\t\t\tif(u === data){\r\n\t\t\t\tif(!cat.get){ return } // TODO: Handle\r\n\t\t\t\tif(!cat.soul){\r\n\t\t\t\t\ttmp = cat.gun.back(function(at){\r\n\t\t\t\t\t\tif(at.soul){ return at.soul }\r\n\t\t\t\t\t\tas.data = obj_put({}, at.get, as.data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\ttmp = tmp || cat.get;\r\n\t\t\t\tcat = (cat.root.get(tmp)._);\r\n\t\t\t\tas.not = as.soul = tmp;\r\n\t\t\t\tdata = as.data;\r\n\t\t\t}\r\n\t\t\tif(!as.not && !(as.soul = Gun.node.soul(data))){\r\n\t\t\t\tif(as.path && obj_is(as.data)){ // Apparently necessary\r\n\t\t\t\t\tas.soul = (opt.uuid || cat.root._.opt.uuid || Gun.text.random)();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//as.data = obj_put({}, as.gun._.get, as.data);\r\n\t\t\t\t\tas.soul = at.soul || cat.soul || (opt.uuid || cat.root._.opt.uuid || Gun.text.random)();\r\n\t\t\t\t}\r\n\t\t\t\tif(!as.soul){ // polyfill async uuid for SEA\r\n\t\t\t\t\tref.back('opt.uuid')(function(err, soul){ // TODO: improve perf without anonymous callback\r\n\t\t\t\t\t\tif(err){ return Gun.log(err) } // Handle error.\r\n\t\t\t\t\t\tas.ref.put(as.data, as.soul = soul, as);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tas.ref.put(as.data, as.soul, as);\r\n\t\t}\r\n\t\tvar obj = Gun.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map;\r\n\t\tvar u, empty = {}, noop = function(){}, iife = function(fn,as){fn.call(as||empty)};\r\n\t})(require, './put');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./root');\r\n\t\trequire('./chain');\r\n\t\trequire('./back');\r\n\t\trequire('./put');\r\n\t\trequire('./get');\r\n\t\tmodule.exports = Gun;\r\n\t})(require, './index');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./index');\r\n\t\tGun.chain.on = function(tag, arg, eas, as){\r\n\t\t\tvar gun = this, at = gun._, tmp, act, off;\r\n\t\t\tif(typeof tag === 'string'){\r\n\t\t\t\tif(!arg){ return at.on(tag) }\r\n\t\t\t\tact = at.on(tag, arg, eas || at, as);\r\n\t\t\t\tif(eas && eas.gun){\r\n\t\t\t\t\t(eas.subs || (eas.subs = [])).push(act);\r\n\t\t\t\t}\r\n\t\t\t\toff = function() {\r\n\t\t\t\t\tif (act && act.off) act.off();\r\n\t\t\t\t\toff.off();\r\n\t\t\t\t};\r\n\t\t\t\toff.off = gun.off.bind(gun) || noop;\r\n\t\t\t\tgun.off = off;\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t\tvar opt = arg;\r\n\t\t\topt = (true === opt)? {change: true} : opt || {};\r\n\t\t\topt.ok = tag;\r\n\t\t\topt.last = {};\r\n\t\t\tgun.get(ok, opt); // TODO: PERF! Event listener leak!!!?\r\n\t\t\treturn gun;\r\n\t\t}\r\n\r\n\t\tfunction ok(at, ev){ var opt = this;\r\n\t\t\tvar gun = at.gun, cat = gun._, data = cat.put || at.put, tmp = opt.last, id = cat.id+at.get, tmp;\r\n\t\t\tif(u === data){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(data && data[rel._] && (tmp = rel.is(data))){\r\n\t\t\t\ttmp = (cat.root.get(tmp)._);\r\n\t\t\t\tif(u === tmp.put){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdata = tmp.put;\r\n\t\t\t}\r\n\t\t\tif(opt.change){ // TODO: BUG? Move above the undef checks?\r\n\t\t\t\tdata = at.put;\r\n\t\t\t}\r\n\t\t\t// DEDUPLICATE // TODO: NEEDS WORK! BAD PROTOTYPE\r\n\t\t\tif(tmp.put === data && tmp.get === id && !Gun.node.soul(data)){ return }\r\n\t\t\ttmp.put = data;\r\n\t\t\ttmp.get = id;\r\n\t\t\t// DEDUPLICATE // TODO: NEEDS WORK! BAD PROTOTYPE\r\n\t\t\tcat.last = data;\r\n\t\t\tif(opt.as){\r\n\t\t\t\topt.ok.call(opt.as, at, ev);\r\n\t\t\t} else {\r\n\t\t\t\topt.ok.call(gun, data, at.get, at, ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tGun.chain.val = function(cb, opt){\r\n\t\t\tvar gun = this, at = gun._, data = at.put;\r\n\t\t\tif(0 < at.ack && u !== data){\r\n\t\t\t\t(cb || noop).call(gun, data, at.get);\r\n\t\t\t\treturn gun;\r\n\t\t\t}\r\n\t\t\tif(cb){\r\n\t\t\t\t(opt = opt || {}).ok = cb;\r\n\t\t\t\topt.cat = at;\r\n\t\t\t\topt.out = {'#': Gun.text.random(9)};\r\n\t\t\t\tgun.get(val, {as: opt});\r\n\t\t\t\topt.async = true; //opt.async = at.stun? 1 : true;\r\n\t\t\t} else {\r\n\t\t\t\tGun.log.once(\"valonce\", \"Chainable val is experimental, its behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\r\n\t\t\t\tvar chain = gun.chain();\r\n\t\t\t\tchain._.val = gun.val(function(){\r\n\t\t\t\t\tchain._.on('in', gun._);\r\n\t\t\t\t});\r\n\t\t\t\treturn chain;\r\n\t\t\t}\r\n\t\t\treturn gun;\r\n\t\t}\r\n\r\n\t\tfunction val(msg, ev, to){\r\n\t\t\tvar opt = this.as, cat = opt.cat, gun = msg.gun, coat = gun._, data = coat.put || msg.put, tmp;\r\n\t\t\tif(u === data){\r\n\t\t\t\t//return;\r\n\t\t\t}\r\n\t\t\t//if(coat.soul && !(0 < coat.ack)){ return }\r\n\t\t\tif(tmp = Gun.node.soul(data) || rel.is(data)){\r\n\t\t\t//if(data && data[rel._] && (tmp = rel.is(data))){\r\n\t\t\t\ttmp = (cat.root.get(tmp)._);\r\n\t\t\t\tif(u === tmp.put){//} || !(0 < tmp.ack)){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdata = tmp.put;\r\n\t\t\t}\r\n\t\t\tif(ev.wait){ clearTimeout(ev.wait) }\r\n\t\t\t//if(!to && (!(0 < coat.ack) || ((true === opt.async) && 0 !== opt.wait))){\r\n\t\t\tif(!to){\r\n\t\t\t\tev.wait = setTimeout(function(){\r\n\t\t\t\t\tval.call({as:opt}, msg, ev, ev.wait || 1);\r\n\t\t\t\t}, opt.wait || 99);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(cat.field || cat.soul){\r\n\t\t\t\tif(ev.off()){ return } // if it is already off, don't call again!\r\n\t\t\t} else {\r\n\t\t\t\tif((opt.seen = opt.seen || {})[coat.id]){ return }\r\n\t\t\t\topt.seen[coat.id] = true;\r\n\t\t\t}\r\n\t\t\topt.ok.call(msg.gun || opt.gun, data, msg.get);\r\n\t\t}\r\n\r\n\t\tGun.chain.off = function(){\r\n\t\t\t// make off more aggressive. Warning, it might backfire!\r\n\t\t\tvar gun = this, at = gun._, tmp;\r\n\t\t\tvar back = at.back || {}, cat = back._;\r\n\t\t\tif(!cat){ return }\r\n\t\t\tif(tmp = cat.next){\r\n\t\t\t\tif(tmp[at.get]){\r\n\t\t\t\t\tobj_del(tmp, at.get);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp = cat.ask){\r\n\t\t\t\tobj_del(tmp, at.get);\r\n\t\t\t}\r\n\t\t\tif(tmp = cat.put){\r\n\t\t\t\tobj_del(tmp, at.get);\r\n\t\t\t}\r\n\t\t\tif(tmp = at.soul){\r\n\t\t\t\tobj_del(cat.root._.graph, tmp);\r\n\t\t\t}\r\n\t\t\tif(tmp = at.map){\r\n\t\t\t\tobj_map(tmp, function(at){\r\n\t\t\t\t\tif(at.rel){\r\n\t\t\t\t\t\tcat.root.get(at.rel).off();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(tmp = at.next){\r\n\t\t\t\tobj_map(tmp, function(ref){\r\n\t\t\t\t\tref.off();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tat.on('off', {});\r\n\t\t\treturn gun;\r\n\t\t}\r\n\t\tvar obj = Gun.obj, obj_map = obj.map, obj_has = obj.has, obj_del = obj.del, obj_to = obj.to;\r\n\t\tvar rel = Gun.val.rel;\r\n\t\tvar empty = {}, noop = function(){}, u;\r\n\t})(require, './on');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./index');\r\n\t\tGun.chain.map = function(cb, opt, t){\r\n\t\t\tvar gun = this, cat = gun._, chain;\r\n\t\t\tif(!cb){\r\n\t\t\t\tif(chain = cat.fields){ return chain }\r\n\t\t\t\tchain = cat.fields = gun.chain();\r\n\t\t\t\tchain._.val = gun.back('val');\r\n\t\t\t\tchain._.MAPOF = cat.soul;\r\n\t\t\t\tgun.on('in', map, chain._);\r\n\t\t\t\treturn chain;\r\n\t\t\t}\r\n\t\t\tGun.log.once(\"mapfn\", \"Map functions are experimental, their behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\r\n\t\t\tchain = gun.chain();\r\n\t\t\tgun.map().on(function(data, key, at, ev){\r\n\t\t\t\tvar next = (cb||noop).call(this, data, key, at, ev);\r\n\t\t\t\tif(u === next){ return }\r\n\t\t\t\tif(Gun.is(next)){\r\n\t\t\t\t\tchain._.on('in', next._);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tchain._.on('in', {get: key, put: next, gun: chain});\r\n\t\t\t});\r\n\t\t\treturn chain;\r\n\t\t}\r\n\t\tfunction map(msg){\r\n\t\t\tif(!msg.put || Gun.val.is(msg.put)){ return }\r\n\t\t\tif(this.as.val){ this.off() } // TODO: Ugly hack!\r\n\t\t\tobj_map(msg.put, each, {at: this.as, msg: msg});\r\n\t\t\tthis.to.next(msg);\r\n\t\t}\r\n\t\tfunction each(v,f){\r\n\t\t\tif(n_ === f){ return }\r\n\t\t\tvar msg = this.msg, gun = msg.gun, at = this.at, tmp = (gun.get(f)._);\r\n\t\t\t(tmp.echo || (tmp.echo = {}))[at.id] = at;\r\n\t\t}\r\n\t\tvar obj_map = Gun.obj.map, noop = function(){}, event = {stun: noop, off: noop}, n_ = Gun.node._, u;\r\n\t})(require, './map');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./index');\r\n\t\tGun.chain.set = function(item, cb, opt){\r\n\t\t\tvar gun = this, soul;\r\n\t\t\tcb = cb || function(){};\r\n\t\t\topt = opt || {}; opt.item = opt.item || item;\r\n\t\t\tif(soul = Gun.node.soul(item)){ return gun.set(gun.back(-1).get(soul), cb, opt) }\r\n\t\t\tif(!Gun.is(item)){\r\n\t\t\t\tvar id = gun._.root._.opt.uuid() || (Gun.state.lex() + Gun.text.random(12));\r\n\t\t\t\tif(Gun.obj.is(item)){ return gun.set(gun._.root.put(item, id), cb, opt) }\r\n\t\t\t\treturn gun.get(id).put(item);\r\n\t\t\t}\r\n\t\t\titem.get('_').get(function(at, ev){\r\n\t\t\t\tif(!at.gun || !at.gun._.back){ return }\r\n\t\t\t\tev.off();\r\n\t\t\t\tat = (at.gun._.back._);\r\n\t\t\t\tvar put = {}, node = at.put, soul = Gun.node.soul(node);\r\n\t\t\t\tif(!soul){ return cb.call(gun, {err: Gun.log('Only a node can be linked! Not \"' + node + '\"!')}) }\r\n\t\t\t\tgun.put(Gun.obj.put(put, soul, Gun.val.rel.ify(soul)), cb, opt);\r\n\t\t\t},{wait:0});\r\n\t\t\treturn item;\r\n\t\t}\r\n\t})(require, './set');\r\n\r\n\t;require(function(module){\r\n\t\tif(typeof Gun === 'undefined'){ return } // TODO: localStorage is Browser only. But it would be nice if it could somehow plugin into NodeJS compatible localStorage APIs?\r\n\r\n\t\tvar root, noop = function(){}, u;\r\n\t\tif(typeof window !== 'undefined'){ root = window }\r\n\t\tvar store = root.localStorage || {setItem: noop, removeItem: noop, getItem: noop};\r\n\r\n\t\t/*\r\n\t\t\tNOTE: Both `lib/file.js` and `lib/memdisk.js` are based on this design!\r\n\t\t\tIf you update anything here, consider updating the other adapters as well.\r\n\t\t*/\r\n\r\n\t\tGun.on('opt', function(root){\r\n\t\t\tthis.to.next(root);\r\n\t\t\tvar opt = root.opt;\r\n\t\t\tif(root.once){ return }\r\n\t\t\tif(false === opt.localStorage){ return }\r\n\t\t\topt.file = opt.file || opt.prefix || 'gun/'; // support old option name.\r\n\t\t\tvar graph = root.graph, acks = {}, count = 0, to;\r\n\t\t\tvar disk = Gun.obj.ify(store.getItem(opt.file)) || {};\r\n\t\t\t\r\n\t\t\troot.on('put', function(at){\r\n\t\t\t\tthis.to.next(at);\r\n\t\t\t\tGun.graph.is(at.put, null, map);\r\n\t\t\t\tif(!at['@']){ acks[at['#']] = true; } // only ack non-acks.\r\n\t\t\t\tcount += 1;\r\n\t\t\t\tif(count >= (opt.batch || 1000)){\r\n\t\t\t\t\treturn flush();\r\n\t\t\t\t}\r\n\t\t\t\tif(to){ return }\r\n\t\t\t\tto = setTimeout(flush, opt.wait || 1);\r\n\t\t\t});\r\n\r\n\t\t\troot.on('get', function(at){\r\n\t\t\t\tthis.to.next(at);\r\n\t\t\t\tvar lex = at.get, soul, data, u;\r\n\t\t\t\t//setTimeout(function(){\r\n\t\t\t\tif(!lex || !(soul = lex[Gun._.soul])){ return }\r\n\t\t\t\t//if(0 >= at.cap){ return }\r\n\t\t\t\tvar field = lex['.'];\r\n\t\t\t\tdata = disk[soul] || u;\r\n\t\t\t\tif(data && field){\r\n\t\t\t\t\tdata = Gun.state.to(data, field);\r\n\t\t\t\t}\r\n\t\t\t\tif(!data && !Gun.obj.empty(opt.peers)){ // if data not found, don't ack if there are peers.\r\n\t\t\t\t\treturn; // Hmm, what if we have peers but we are disconnected?\r\n\t\t\t\t}\r\n\t\t\t\troot.on('in', {'@': at['#'], put: Gun.graph.node(data), how: 'lS'});\r\n\t\t\t\t//},1);\r\n\t\t\t});\r\n\r\n\t\t\tvar map = function(val, key, node, soul){\r\n\t\t\t\tdisk[soul] = Gun.state.to(node, key, disk[soul]);\r\n\t\t\t}\r\n\r\n\t\t\tvar flush = function(){\r\n\t\t\t\tvar err;\r\n\t\t\t\tcount = 0;\r\n\t\t\t\tclearTimeout(to);\r\n\t\t\t\tto = false;\r\n\t\t\t\tvar ack = acks;\r\n\t\t\t\tacks = {};\r\n\t\t\t\ttry{store.setItem(opt.file, JSON.stringify(disk));\r\n\t\t\t\t}catch(e){ Gun.log(err = e || \"localStorage failure\") }\r\n\t\t\t\tif(!err && !Gun.obj.empty(opt.peers)){ return } // only ack if there are no peers.\r\n\t\t\t\tGun.obj.map(ack, function(yes, id){\r\n\t\t\t\t\troot.on('in', {\r\n\t\t\t\t\t\t'@': id,\r\n\t\t\t\t\t\terr: err,\r\n\t\t\t\t\t\tok: 0 // localStorage isn't reliable, so make its `ok` code be a low number.\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t})(require, './adapters/localStorage');\r\n\r\n\t;require(function(module){\r\n\t\tvar Gun = require('./index');\r\n\t\tvar websocket;\r\n\t\tif(typeof WebSocket !== 'undefined'){\r\n\t\t\twebsocket = WebSocket;\r\n\t\t} else {\r\n\t\t\tif(typeof webkitWebSocket !== 'undefined'){\r\n\t\t\t\twebsocket = webkitWebSocket;\r\n\t\t\t}\r\n\t\t\tif(typeof mozWebSocket !== 'undefined'){\r\n\t\t\t\twebsocket = mozWebSocket;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tGun.on('opt', function(root){\r\n\t\t\tthis.to.next(root);\r\n\t\t\tvar opt = root.opt;\r\n\t\t\tif(root.once){ return }\r\n\t\t\tif(!websocket || false === opt.WebSocket){ return }\r\n\t\t\tvar ws = opt.ws || (opt.ws = {}); ws.who = 0;\r\n\t\t\tGun.obj.map(opt.peers, function(){ ++ws.who });\r\n\t\t\tif(root.once){ return }\r\n\t\t\tvar batch;\r\n\r\n\t\t\troot.on('out', function(at){\r\n\t\t\t\tthis.to.next(at);\r\n\t\t\t\tif(at.ws && 1 == ws.who){ return } // performance hack for reducing echoes.\r\n\t\t\t\tbatch = JSON.stringify(at);\r\n\t\t\t\tif(ws.drain){\r\n\t\t\t\t\tws.drain.push(batch);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tws.drain = [];\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tif(!ws.drain){ return }\r\n\t\t\t\t\tvar tmp = ws.drain;\r\n\t\t\t\t\tws.drain = null;\r\n\t\t\t\t\tif(!tmp.length){ return }\r\n\t\t\t\t\tbatch = JSON.stringify(tmp);\r\n\t\t\t\t\tGun.obj.map(opt.peers, send, root);\r\n\t\t\t\t}, opt.wait || 1);\r\n\t\t\t\tGun.obj.map(opt.peers, send, root);\r\n\t\t\t});\r\n\t\t\tfunction send(peer){\r\n\t\t\t\tvar root = this, msg = batch;\r\n\t\t\t\tvar wire = peer.wire || open(peer, root);\r\n\t\t\t\tif(!wire){ return }\r\n\t\t\t\tif(wire.readyState === wire.OPEN){\r\n\t\t\t\t\twire.send(msg);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t(peer.queue = peer.queue || []).push(msg);\r\n\t\t\t}\r\n\t\t\tfunction receive(msg, peer, root){\r\n\t\t\t\tif(!root || !msg){ return }\r\n\t\t\t\ttry{msg = JSON.parse(msg.data || msg);\r\n\t\t\t\t}catch(e){}\r\n\t\t\t\tif(msg instanceof Array){\r\n\t\t\t\t\tvar i = 0, m;\r\n\t\t\t\t\twhile(m = msg[i++]){\r\n\t\t\t\t\t\treceive(m, peer, root);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(1 == ws.who){ msg.ws = noop } // If there is only 1 client, just use noop since it doesn't matter.\r\n\t\t\t\troot.on('in', msg);\r\n\t\t\t}\r\n\t\t\tfunction open(peer, as){\r\n\t\t\t\tif(!peer || !peer.url){ return }\r\n\t\t\t\tvar url = peer.url.replace('http', 'ws');\r\n\t\t\t\tvar wire = peer.wire = new websocket(url);\r\n\t\t\t\twire.onclose = function(){\r\n\t\t\t\t\troot.on('bye', peer);\r\n\t\t\t\t\treconnect(peer, as);\r\n\t\t\t\t};\r\n\t\t\t\twire.onerror = function(error){\r\n\t\t\t\t\treconnect(peer, as); // placement?\r\n\t\t\t\t\tif(!error){ return }\r\n\t\t\t\t\tif(error.code === 'ECONNREFUSED'){\r\n\t\t\t\t\t\t//reconnect(peer, as);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\twire.onopen = function(){\r\n\t\t\t\t\troot.on('hi', peer);\r\n\t\t\t\t\tvar queue = peer.queue;\r\n\t\t\t\t\tpeer.queue = [];\r\n\t\t\t\t\tGun.obj.map(queue, function(msg){\r\n\t\t\t\t\t\tbatch = msg;\r\n\t\t\t\t\t\tsend.call(as, peer);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\twire.onmessage = function(msg){\r\n\t\t\t\t\treceive(msg, peer, as); // diff: peer not wire!\r\n\t\t\t\t};\r\n\t\t\t\treturn wire;\r\n\t\t\t}\r\n\t\t\tfunction reconnect(peer, as){\r\n\t\t\t\tclearTimeout(peer.defer);\r\n\t\t\t\tpeer.defer = setTimeout(function(){\r\n\t\t\t\t\topen(peer, as);\r\n\t\t\t\t}, 2 * 1000);\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar noop = function(){};\r\n\t})(require, './adapters/websocket');\r\n\r\n}());\n\n\n// WEBPACK FOOTER //\n// ../node_modules/gun/gun.js","import Gun from 'gun/gun';\nimport { h, Component } from 'preact';\nimport style from './style';\n\nconst GUN_URL = 'https://gun-dearwafeum.now.sh/gun';\n// GUN_URL = 'https://gunjs.herokuapp.com/gun'\n// this.gun = Gun([location.origin, 'gun'].join('/'))\n\nconst formatNotes = notes => Object.keys(notes)\n\t.map(key => ({ key, ...notes[key] }))\n\t.filter(m => Boolean(m.when) && m.key !== '_')\n\t.sort((a, b) => a.when - b.when)\n\t.map(m => ((m.whenFmt = new Date(m.when).toLocaleString().toLowerCase()), m));\n\nexport default class Chat extends Component {\n\n\tstate = {\n\t\tnewNote: '',\n\t\tname: (document.cookie.match(/alias\\=(.*?)(\\&|$|\\;)/i)||[])[1] || '',\n\t\tnotes: {}\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.gun = Gun(GUN_URL).get(this.props.db).get('notes');\n\t\tif (typeof window !== 'undefined') window.gun = this.gun;\n\n\t\tthis.send = this.send.bind(this);\n\t}\n\n\tcomponentWillMount() {\n\t\tconst tmpState = {};\n\n\t\tthis.gun.map().val((note, key) => {\n\t\t\ttmpState[key] = note;\n\t\t\tthis.setState({ notes: Object.assign({}, this.state.notes, tmpState) });\n\t\t});\n\t}\n\n\tsend(e) {\n\t\te.preventDefault();\n\t\tconst who = this.state.name || 'user' + Gun.text.random(6);\n\t\tthis.setState({ name: who });\n\t\tdocument.cookie = ('alias=' + who);\n\t\tconst when = Gun.time.is();\n\t\tconst key = `${when}_${Gun.text.random(4)}`;\n\t\tthis.gun.get(key).put({\n\t\t\twho,\n\t\t\twhen,\n\t\t\twhat: this.state.newNote\n\t\t});\n\t\tthis.setState({ newNote: '' });\n\t}\n\n\thandleChange = key => e => this.setState({ [key]: e.target.value })\n\n\trender({ db }) {\n\t\tconst notes = formatNotes(this.state.notes);\n\n\t\treturn (\n\t\t\t<div class={style.home}>\n\t\t\t\t<h1>db: {db}</h1>\n\t\t\t\t<ul>\n\t\t\t\t\t{notes.map(note =>\n\t\t\t\t\t\t<li key={note.key}><b>{note.who}:</b> {note.what}<span className=\"when\">{note.whenFmt}</span></li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t\t<form onSubmit={this.send}>\n\t\t\t\t\t<input placeholder=\"username\" value={this.state.name} className=\"who\" onChange={this.handleChange('name')} />\n\t\t\t\t\t<textarea placeholder=\"note\" value={this.state.newNote} className=\"what\" onChange={this.handleChange('newNote')} />\n\t\t\t\t\t<button onClick={this.send}>Send</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./routes/chat/index.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"home\":\"home__3G66z\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/chat/style.css\n// module id = dKk8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/webpack/buildin/global.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/webpack/buildin/module.js"],"sourceRoot":""}